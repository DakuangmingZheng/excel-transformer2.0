Index: api.go
===================================================================
--- api.go	(revision 4469)
+++ api.go	(revision 4470)
@@ -28,6 +28,29 @@
 	Bots *mux.Router // 'api/v4/bots'
 	Bot  *mux.Router // 'api/v4/bots/{bot_user_id:[A-Za-z0-9]+}'
 
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 START */
+	Meetings        *mux.Router // 'api/v4/meetings'
+	Meeting         *mux.Router // 'api/v4/meetings/{meeting_id:[A-Za-z0-9]+}'
+	MeetingByUserId *mux.Router // 'api/v4/meetings/userid/{user_id:[A-Za-z0-9]+}'
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 END */
+
+	/* Ryobi Systems CloudOffice Meeting Mod 20210615 START */
+	MeetingMng       *mux.Router // 'api/v4/MeetingMng'
+	MeetingMngDetail *mux.Router // 'api/v4/MeetingMngDetail'
+	MeetingMngDelete *mux.Router // 'api/v4/MeetingMngDelete'
+	/* Ryobi Systems CloudOffice Meeting Mod 20210615 END */
+
+	/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 START */
+	MeetingStatus *mux.Router // 'api/v4/MeetingStatus'
+	MeetingEnd    *mux.Router // 'api/v4/MeetingEnd'
+	/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 END */
+
+	/* Ryobi Systems CloudOffice CronChat Mod 20211129 START */
+	CronChat        *mux.Router // 'api/v4/CronChat'
+	Chat            *mux.Router // 'api/v4/Chat'
+	ChannelSettings *mux.Router // 'api/v4/ChannelSettings'
+	/* Ryobi Systems CloudOffice CronChat Mod 20211129 END */
+
 	Teams              *mux.Router // 'api/v4/teams'
 	TeamsForUser       *mux.Router // 'api/v4/users/{user_id:[A-Za-z0-9]+}/teams'
 	Team               *mux.Router // 'api/v4/teams/{team_id:[A-Za-z0-9]+}'
@@ -58,7 +81,11 @@
 	PostForUser     *mux.Router // 'api/v4/users/{user_id:[A-Za-z0-9]+}/posts/{post_id:[A-Za-z0-9]+}'
 
 	Files *mux.Router // 'api/v4/files'
-	File  *mux.Router // 'api/v4/files/{file_id:[A-Za-z0-9]+}'
+	/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+	FilePermiission *mux.Router // 'api/v4/getfilepermission'
+	FileTotalSize   *mux.Router // 'api/v4/getfiletotalsize'
+	/* Ryobi Systems CloudOffice Files Mod 20211103 END */
+	File *mux.Router // 'api/v4/files/{file_id:[A-Za-z0-9]+}'
 
 	Uploads *mux.Router // 'api/v4/uploads'
 	Upload  *mux.Router // 'api/v4/uploads/{upload_id:[A-Za-z0-9]+}'
@@ -170,7 +197,29 @@
 
 	api.BaseRoutes.Bots = api.BaseRoutes.APIRoot.PathPrefix("/bots").Subrouter()
 	api.BaseRoutes.Bot = api.BaseRoutes.APIRoot.PathPrefix("/bots/{bot_user_id:[A-Za-z0-9]+}").Subrouter()
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 START */
+	api.BaseRoutes.Meetings = api.BaseRoutes.APIRoot.PathPrefix("/meetings").Subrouter()
+	api.BaseRoutes.Meeting = api.BaseRoutes.APIRoot.PathPrefix("/meetings/{meeting_item_id:[A-Za-z0-9]+}").Subrouter()
+	api.BaseRoutes.MeetingByUserId = api.BaseRoutes.Meetings.PathPrefix("/userid/{user_id:[A-Za-z0-9]+}").Subrouter()
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 END */
 
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 START */
+	api.BaseRoutes.MeetingMng = api.BaseRoutes.APIRoot.PathPrefix("/meeting_mng").Subrouter()
+	api.BaseRoutes.MeetingMngDetail = api.BaseRoutes.APIRoot.PathPrefix("/meeting_mng_detail").Subrouter()
+	api.BaseRoutes.MeetingMngDelete = api.BaseRoutes.APIRoot.PathPrefix("/meeting_mng_delete").Subrouter()
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 END */
+
+	/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 START */
+	api.BaseRoutes.MeetingStatus = api.BaseRoutes.APIRoot.PathPrefix("/meeting_status").Subrouter()
+	api.BaseRoutes.MeetingEnd = api.BaseRoutes.APIRoot.PathPrefix("/meeting_end").Subrouter()
+	/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 END */
+
+	/* Ryobi Systems CloudOffice CronChat Mod 20211129 START */
+	api.BaseRoutes.CronChat = api.BaseRoutes.APIRoot.PathPrefix("/cron_chat").Subrouter()
+	api.BaseRoutes.Chat = api.BaseRoutes.APIRoot.PathPrefix("/chat").Subrouter()
+	api.BaseRoutes.ChannelSettings = api.BaseRoutes.APIRoot.PathPrefix("/channel_settings").Subrouter()
+	/* Ryobi Systems CloudOffice CronChat Mod 20211129 END */
+
 	api.BaseRoutes.Teams = api.BaseRoutes.APIRoot.PathPrefix("/teams").Subrouter()
 	api.BaseRoutes.TeamsForUser = api.BaseRoutes.User.PathPrefix("/teams").Subrouter()
 	api.BaseRoutes.Team = api.BaseRoutes.Teams.PathPrefix("/{team_id:[A-Za-z0-9]+}").Subrouter()
@@ -201,6 +250,10 @@
 	api.BaseRoutes.PostForUser = api.BaseRoutes.PostsForUser.PathPrefix("/{post_id:[A-Za-z0-9]+}").Subrouter()
 
 	api.BaseRoutes.Files = api.BaseRoutes.APIRoot.PathPrefix("/files").Subrouter()
+	/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+	api.BaseRoutes.FilePermiission = api.BaseRoutes.APIRoot.PathPrefix("/getfilepermission").Subrouter()
+	api.BaseRoutes.FileTotalSize = api.BaseRoutes.APIRoot.PathPrefix("/getfiletotalsize").Subrouter()
+	/* Ryobi Systems CloudOffice Files Mod 20211103 ENDRemove */
 	api.BaseRoutes.File = api.BaseRoutes.Files.PathPrefix("/{file_id:[A-Za-z0-9]+}").Subrouter()
 	api.BaseRoutes.PublicFile = api.BaseRoutes.Root.PathPrefix("/files/{file_id:[A-Za-z0-9]+}/public").Subrouter()
 
@@ -279,7 +332,19 @@
 
 	api.InitUser()
 	api.InitBot()
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 START */
+	api.InitMeeting()
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 END */
+	/* Ryobi Systems CloudOffice Meeting Mod 20210615 START */
+	api.InitMeetingMng()
+	/* Ryobi Systems CloudOffice Meeting Mod 20210615 END */
 	api.InitTeam()
+	/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 START */
+	api.InitMeetingStatus()
+	/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 END */
+	/* Ryobi Systems CloudOffice CronChat Mod 20211129 START */
+	api.InitCronChat()
+	/* Ryobi Systems CloudOffice CronChat Mod 20211129 END */
 	api.InitChannel()
 	api.InitPost()
 	api.InitFile()
Index: config.go
===================================================================
--- config.go	(revision 4469)
+++ config.go	(revision 4470)
@@ -4,11 +4,16 @@
 package api4
 
 import (
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
 	"encoding/json"
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
 	"fmt"
 	"net/http"
 	"reflect"
 	"strings"
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+	"io/ioutil"
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
 
 	"github.com/mattermost/mattermost-server/v6/audit"
 	"github.com/mattermost/mattermost-server/v6/config"
@@ -17,6 +22,56 @@
 	"github.com/mattermost/mattermost-server/v6/utils"
 )
 
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+type ConfigData struct {
+	PluginSettings PluginSettingsData `json:"PluginSettings"`
+}
+
+type PluginSettingsData struct {
+	Plugins      PluginsDate      `json:"Plugins"`
+	PluginStates PluginStatesDate `json:"PluginStates"`
+	Directory    string           `json:"Directory"`
+}
+
+type PluginStatesDate struct {
+	Plugindefaultteams plugindefaultteamsDate `json:"plugindefaultteam"`
+}
+
+type plugindefaultteamsDate struct {
+	Enable bool `json:"Enable"`
+}
+
+type PluginsDate struct {
+	Plugindefaultteam PlugindefaultteamDate `json:"plugindefaultteam"`
+	Jitsi             JitsiDate             `json:"jitsi"`
+}
+
+type JitsiDate struct {
+	Jitsiurl string `json:"jitsiurl"`
+}
+
+type PlugindefaultteamDate struct {
+	Defaultteam string `json:"defaultteam"`
+}
+
+func GetDefaultTeamNameConfig() string {
+	var Name string
+	var data ConfigData
+	Name = ""
+	content, err := ioutil.ReadFile("/mattermost-server/config/config.json")
+	if err != nil {
+		return Name
+	}
+	err = json.Unmarshal([]byte(content), &data)
+	if err != nil {
+		return Name
+	}
+	Name = data.PluginSettings.Plugins.Plugindefaultteam.Defaultteam
+	return Name
+}
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
+
 var writeFilter func(c *Context, structField reflect.StructField) bool
 var readFilter func(c *Context, structField reflect.StructField) bool
 var permissionMap map[string]*model.Permission
@@ -183,6 +238,23 @@
 		c.Err = appErr
 		return
 	}
+	Name := ""
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20221025 START */
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+	if Plugindefaultteam, ok := newCfg.PluginSettings.Plugins["plugindefaultteam"]; ok {
+		if defatulTeam, isOk := Plugindefaultteam["defaultteam"]; isOk {
+			Name = fmt.Sprintf("%v", defatulTeam)
+		}
+	}
+	if Name != "" {
+		if cfg.PluginSettings.PluginStates["plugindefaultteam"].Enable {
+			c.App.SaveDefaultTeamforName(Name)
+		} else {
+			c.App.DeleteDefaultTeam()
+		}
+	}
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20221025 END */
 
 	diffs, err := config.Diff(oldCfg, newCfg)
 	if err != nil {
Index: file.go
===================================================================
--- file.go	(revision 4469)
+++ file.go	(revision 4470)
@@ -7,11 +7,14 @@
 	"bytes"
 	"crypto/subtle"
 	"encoding/json"
+	"github.com/mattermost/mattermost-server/v6/shared/i18n"
 	"io"
 	"mime"
 	"mime/multipart"
+	"net"
 	"net/http"
 	"strconv"
+	"strings"
 	"time"
 
 	"github.com/mattermost/mattermost-server/v6/app"
@@ -25,8 +28,11 @@
 const (
 	FileTeamId = "noteam"
 
-	PreviewImageType   = "image/jpeg"
-	ThumbnailImageType = "image/jpeg"
+	PreviewImageType      = "image/jpeg"
+	ThumbnailImageType    = "image/jpeg"
+	userPermissonNone     = "none"
+	userPermissonDownload = "download"
+	userPermissonReadonly = "readonly"
 )
 
 const maxMultipartFormDataBytes = 10 * 1024 // 10Kb
@@ -33,6 +39,10 @@
 
 func (api *API) InitFile() {
 	api.BaseRoutes.Files.Handle("", api.APISessionRequired(uploadFileStream)).Methods("POST")
+	/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+	api.BaseRoutes.FilePermiission.Handle("", api.APISessionRequired(getFilePermission)).Methods("GET")
+	api.BaseRoutes.FileTotalSize.Handle("", api.APISessionRequired(getFileTotalSize)).Methods("GET")
+	/* Ryobi Systems CloudOffice Files Mod 20211103 END */
 	api.BaseRoutes.Files.Handle("/search", api.APISessionRequired(searchFilesForUser)).Methods("POST")
 	api.BaseRoutes.File.Handle("", api.APISessionRequiredTrustRequester(getFile)).Methods("GET")
 	api.BaseRoutes.File.Handle("/thumbnail", api.APISessionRequiredTrustRequester(getFileThumbnail)).Methods("GET")
@@ -77,6 +87,18 @@
 }
 
 func uploadFileStream(c *Context, w http.ResponseWriter, r *http.Request) {
+	/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+	// 権限取得
+	ip := ClientIP(r)
+	filePermission, _ := c.App.GetFilePermission(ip)
+	if !filePermission.UserPermissionUpload {
+		c.Err = model.NewAppError("uploadFileStream",
+			"api.file.upload_file.not_upload_permission.app_error",
+			nil, "", http.StatusUnauthorized)
+		return
+	}
+	/* Ryobi Systems CloudOffice Files Mod 20211103 END */
+
 	if !*c.App.Config().FileSettings.EnableFileAttachments {
 		c.Err = model.NewAppError("uploadFileStream",
 			"api.file.attachments.disabled.app_error",
@@ -124,6 +146,11 @@
 		return
 	}
 
+	/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+	//　ファイルサイズをセット
+	_ = c.App.SetFileTotalSize()
+	/* Ryobi Systems CloudOffice Files Mod 20211103 END */
+
 	// Write the response values to the output upon return
 	w.WriteHeader(http.StatusCreated)
 	if err := json.NewEncoder(w).Encode(fileUploadResponse); err != nil {
@@ -450,6 +477,26 @@
 		return
 	}
 
+	/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+	// 既存権限取得
+	if !*c.App.Config().FileSettings.EnableFileAttachments {
+		c.Err = model.NewAppError("getFile",
+			"api.file.upload_file.not_download_permission.app_error",
+			nil, "", http.StatusUnauthorized)
+		return
+	}
+
+	// 権限取得
+	ip := ClientIP(r)
+	filePermission, _ := c.App.GetFilePermission(ip)
+	if filePermission.UserPermissionDownload == userPermissonNone {
+		c.Err = model.NewAppError("getFile",
+			"api.file.upload_file.not_download_permission.app_error",
+			nil, "", http.StatusUnauthorized)
+		return
+	}
+	/* Ryobi Systems CloudOffice Files Mod 20211103 END */
+
 	forceDownload, _ := strconv.ParseBool(r.URL.Query().Get("download"))
 
 	auditRec := c.MakeAuditRecord("getFile", audit.Fail)
@@ -457,6 +504,26 @@
 	auditRec.AddEventParameter("force_download", forceDownload)
 
 	info, err := c.App.GetFileInfo(c.Params.FileId)
+
+	/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+
+	if filePermission.UserPermissionDownload == userPermissonReadonly {
+		isImage := strings.HasPrefix(info.MimeType, "image")
+		//　参照のみの場合、ダウンロード（imageのダウンロードはできる）
+		if forceDownload && !isImage {
+			c.Err = model.NewAppError("getFile",
+				"api.file.upload_file.not_download_permission.app_error",
+				nil, "", http.StatusUnauthorized)
+			return
+		}
+		if !forceDownload && len(r.URL.Query()) == 1 { // アプリの参照のみの場合
+			c.Err = model.NewAppError("getFile",
+				"api.file.upload_file.not_download_permission.app_error",
+				nil, "", http.StatusUnauthorized)
+			return
+		}
+	}
+	/* Ryobi Systems CloudOffice Files Mod 20211103 END */
 	if err != nil {
 		c.Err = err
 		setInaccessibleFileHeader(w, err)
@@ -751,6 +818,85 @@
 	}
 }
 
+/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+func getFilePermission(c *Context, w http.ResponseWriter, r *http.Request) {
+	T := i18n.GetUserTranslations(getUserLocale(c, c.AppContext.Session().UserId))
+
+	// 権限取得
+	ip := ClientIP(r)
+	filePermission, err := c.App.GetFilePermission(ip)
+	if err != nil {
+		responseResult := makeServerFileErrResponse(T)
+		w.Write([]byte(responseResult.ToJson()))
+		return
+	}
+
+	filePermissionToJson := makeServerFilePermissionResponse(filePermission)
+
+	w.Write([]byte(filePermissionToJson.ToJson()))
+}
+func getFileTotalSize(c *Context, w http.ResponseWriter, r *http.Request) {
+	T := i18n.GetUserTranslations(getUserLocale(c, c.AppContext.Session().UserId))
+
+	// 権限取得
+	fileTotalSize, err := c.App.GetFileTotalSize()
+	if err != nil {
+		responseResult := makeServerFileErrResponse(T)
+		w.Write([]byte(responseResult.ToJson()))
+		return
+	}
+
+	fileTotalSizeToJson := makeServerFileTotalSizeResponse(fileTotalSize)
+
+	w.Write([]byte(fileTotalSizeToJson.ToJson()))
+}
+func ClientIP(r *http.Request) string {
+	xForwardedFor := r.Header.Get("X-Forwarded-For")
+	ip := strings.TrimSpace(strings.Split(xForwardedFor, ",")[0])
+	if ip != "" {
+		return ip
+	}
+
+	ip = strings.TrimSpace(r.Header.Get("X-Real-Ip"))
+	if ip != "" {
+		return ip
+	}
+
+	if ip, _, err := net.SplitHostPort(strings.TrimSpace(r.RemoteAddr)); err == nil {
+		return ip
+	}
+
+	return ""
+}
+
+//ファイルパーミッション応答
+func makeServerFilePermissionResponse(filePermission *model.FilePermission) model.ResponseFilePermission {
+	var responseResult model.ResponseFilePermission
+	responseResult.Status = "OK"
+	responseResult.Type = "SERVER"
+	responseResult.User = filePermission
+	return responseResult
+}
+
+//ファイルサイズ応答
+func makeServerFileTotalSizeResponse(fileTotaSize float64) model.ResponseFileTotalSize {
+	var responseResult model.ResponseFileTotalSize
+	responseResult.Status = "OK"
+	responseResult.Type = "SERVER"
+	responseResult.TotalSize = fileTotaSize
+	return responseResult
+}
+
+//サーバエラー応答
+func makeServerFileErrResponse(T i18n.TranslateFunc) model.ResponseResultFile {
+	var responseResult model.ResponseResultFile
+	responseResult.Status = "NG"
+	responseResult.Type = "SERVER"
+	responseResult.Message = T("api.meeting.server.app_error")
+	return responseResult
+}
+
+/* Ryobi Systems CloudOffice Files Mod 20211103 END */
 func setInaccessibleFileHeader(w http.ResponseWriter, appErr *model.AppError) {
 	// File is inaccessible due to cloud plan's limit.
 	if appErr.Id == "app.file.cloud.get.app_error" {
Index: post.go
===================================================================
--- post.go	(revision 4469)
+++ post.go	(revision 4470)
@@ -5,6 +5,7 @@
 
 import (
 	"encoding/json"
+	"github.com/mattermost/mattermost-server/v6/store"
 	"net/http"
 	"strconv"
 	"time"
@@ -97,9 +98,17 @@
 	}
 	auditRec.Success()
 	auditRec.AddEventResultState(rp)
+	userId := c.AppContext.Session().UserId
+
 	auditRec.AddEventObjectType("post")
 
-	if setOnlineBool {
+	var status *model.Status
+	isMeeting := false
+	status, err = c.App.GetStatus(userId)
+	if err == nil && status.Status == model.STATUS_MEETING {
+		isMeeting = true
+	}
+	if !isMeeting && setOnlineBool {
 		c.App.SetStatusOnline(c.AppContext.Session().UserId, false)
 	}
 
@@ -257,6 +266,7 @@
 
 	c.App.AddCursorIdsForPostList(list, afterPost, beforePost, since, page, perPage, collapsedThreads)
 	clientPostList := c.App.PreparePostListForClient(c.AppContext, list)
+
 	clientPostList, err = c.App.SanitizePostListMetadataForUser(c.AppContext, clientPostList, c.AppContext.Session().UserId)
 	if err != nil {
 		c.Err = err
@@ -263,11 +273,66 @@
 		return
 	}
 
+	//replace poll data when client fetch more posts
+	for id, p := range clientPostList.Posts {
+		p = replaceFieldsIfNecessary(p, c.App.Srv().GetStore())
+
+		clientPostList.Posts[id] = p
+	}
 	if err := clientPostList.EncodeJSON(w); err != nil {
 		mlog.Warn("Error while writing response", mlog.Err(err))
 	}
 }
 
+func replaceFieldsIfNecessary(p *model.Post, s store.Store) *model.Post {
+	if len(p.Attachments()) == 0 {
+		return p
+	}
+	anonymous, _ := p.GetProp("anonymous").(bool)
+	status, _ := p.GetProp("status").(string)
+	attachment := p.Attachments()[0]
+	var postId string
+	if p.OriginalId != "" {
+		postId = p.OriginalId
+	} else {
+		postId = p.Id
+	}
+	pollFields, _ := s.PollField().GetPollFields(postId)
+	if len(pollFields) == 0 {
+		return p
+	}
+	model.ParseSlackAttachment(p, getReplaceAttachment(attachment, pollFields, anonymous, status))
+	return p
+}
+
+func getReplaceAttachment(attachment *model.SlackAttachment, fields []*model.PollFields, anonymous bool, status string) []*model.SlackAttachment {
+	pollFields := []*model.SlackAttachmentField{}
+	for _, field := range fields {
+		value := field.Voter
+		webValue := field.Voter
+		if status != "end" {
+			webValue = ""
+			value = ""
+		}
+		if anonymous {
+			webValue = ""
+			value = ""
+		}
+		pollFields = append(pollFields, &model.SlackAttachmentField{
+			Short:    true,
+			Title:    field.Answer,
+			Value:    value,
+			WebValue: webValue,
+		})
+	}
+	return []*model.SlackAttachment{{
+		AuthorName: attachment.AuthorName,
+		Title:      attachment.Title,
+		Text:       attachment.Text,
+		Actions:    attachment.Actions,
+		Fields:     pollFields,
+	}}
+}
 func getPostsForChannelAroundLastUnread(c *Context, w http.ResponseWriter, r *http.Request) {
 	c.RequireUserId().RequireChannelId()
 	if c.Err != nil {
@@ -325,7 +390,11 @@
 		c.Err = err
 		return
 	}
-
+	//replace poll data when client fetch more posts
+	for id, p := range clientPostList.Posts {
+		p = replaceFieldsIfNecessary(p, c.App.Srv().GetStore())
+		clientPostList.Posts[id] = p
+	}
 	if etag != "" {
 		w.Header().Set(model.HeaderEtagServer, etag)
 	}
@@ -591,6 +660,11 @@
 		c.Err = err
 		return
 	}
+	//replace poll data when client search for a certain part posts
+	for id, p := range list.Posts {
+		p = replaceFieldsIfNecessary(p, c.App.Srv().GetStore())
+		list.Posts[id] = p
+	}
 	if list.FirstInaccessiblePostTime != 0 {
 		// e.g. if root post is archived in a cloud plan,
 		// we don't want to display the thread,
@@ -624,7 +698,10 @@
 		c.Err = err
 		return
 	}
-
+	for id, p := range clientPostList.Posts {
+		p = replaceFieldsIfNecessary(p, c.App.Srv().GetStore())
+		clientPostList.Posts[id] = p
+	}
 	w.Header().Set(model.HeaderEtagServer, clientPostList.Etag())
 
 	if err := clientPostList.EncodeJSON(w); err != nil {
Index: status.go
===================================================================
--- status.go	(revision 4469)
+++ status.go	(revision 4470)
@@ -17,6 +17,8 @@
 	api.BaseRoutes.User.Handle("/status", api.APISessionRequired(updateUserStatus)).Methods("PUT")
 	api.BaseRoutes.User.Handle("/status/custom", api.APISessionRequired(updateUserCustomStatus)).Methods("PUT")
 	api.BaseRoutes.User.Handle("/status/custom", api.APISessionRequired(removeUserCustomStatus)).Methods("DELETE")
+	api.BaseRoutes.User.Handle("/time", api.APISessionRequired(getUserWebMeetingStatus)).Methods("POST")
+	api.BaseRoutes.User.Handle("/change/status", api.APISessionRequired(changeUserSpecifiedStatus)).Methods("POST")
 
 	// Both these handlers are for removing the recent custom status but the one with the POST method should be preferred
 	// as DELETE method doesn't support request body in the mobile app.
@@ -79,6 +81,48 @@
 	w.Write(js)
 }
 
+func getUserWebMeetingStatus(c *Context, w http.ResponseWriter, r *http.Request) {
+	user := model.UserIdFromJson(r.Body)
+
+	if len(user.Id) == 0 {
+		c.SetInvalidParam("user_id")
+		return
+	}
+
+	if len(user.Id) != 26 {
+		c.SetInvalidParam("user_id")
+		return
+	}
+
+	status, _ := c.App.GetUserWebMeetingStatus(user.Id)
+	state := model.ToJSON(status)
+	w.Write(state)
+
+}
+
+func changeUserSpecifiedStatus(c *Context, w http.ResponseWriter, r *http.Request) {
+	newStatus := model.SpecifiedStatusFromJson(r.Body)
+
+	if len(newStatus.UserId) == 0 {
+		c.SetInvalidParam("user_id")
+		return
+	}
+
+	if len(newStatus.UserId) != 26 {
+		c.SetInvalidParam("user_id")
+		return
+	}
+
+	userStatus, _ := c.App.GetStatus(newStatus.UserId)
+	if userStatus.Status != model.STATUS_MEETING {
+		userStatus.Status = newStatus.Status
+		userStatus.Manual = newStatus.Manual
+		userStatus.LastActivityAt = newStatus.LastActivityAt
+		c.App.Srv().Platform().SaveAndBroadcastStatus(userStatus)
+	}
+	return
+}
+
 func updateUserStatus(c *Context, w http.ResponseWriter, r *http.Request) {
 	c.RequireUserId()
 	if c.Err != nil {
@@ -114,6 +158,8 @@
 		c.App.SetStatusOffline(c.Params.UserId, true)
 	case "away":
 		c.App.SetStatusAwayIfNeeded(c.Params.UserId, true)
+	case "meeting":
+		c.App.SetStatusMeetingIfNeeded(c.Params.UserId, true)
 	case "dnd":
 		c.App.SetStatusDoNotDisturbTimed(c.Params.UserId, status.DNDEndTime)
 	default:
Index: team.go
===================================================================
--- team.go	(revision 4469)
+++ team.go	(revision 4470)
@@ -9,6 +9,7 @@
 	"encoding/json"
 	"fmt"
 	"io"
+	"math"
 	"net/http"
 	"regexp"
 	"strconv"
@@ -56,6 +57,7 @@
 	api.BaseRoutes.TeamMembers.Handle("", api.APISessionRequired(getTeamMembers)).Methods("GET")
 	api.BaseRoutes.TeamMembers.Handle("/ids", api.APISessionRequired(getTeamMembersByIds)).Methods("POST")
 	api.BaseRoutes.TeamMembersForUser.Handle("", api.APISessionRequired(getTeamMembersForUser)).Methods("GET")
+	api.BaseRoutes.TeamForUser.Handle("/fetchMultiTenancyInfo", api.APISessionRequired(getTeamMemberAndConfigForUser)).Methods("GET")
 	api.BaseRoutes.TeamMembers.Handle("", api.APISessionRequired(addTeamMember)).Methods("POST")
 	api.BaseRoutes.Teams.Handle("/members/invite", api.APISessionRequired(addUserToTeamFromInvite)).Methods("POST")
 	api.BaseRoutes.TeamMembers.Handle("/batch", api.APISessionRequired(addTeamMembers)).Methods("POST")
@@ -652,7 +654,64 @@
 
 	w.Write(js)
 }
+func getTeamMemberAndConfigForUser(c *Context, w http.ResponseWriter, r *http.Request) {
+	c.RequireUserId()
+	c.RequireTeamId()
+	if c.Err != nil {
+		c.Err = model.NewAppError("getTeamMemberAndConfigForUser", "api.unable_to_read_file_from_backend", nil, "", http.StatusBadRequest)
+		return
+	}
 
+	if !c.App.SessionHasPermissionToUser(*c.AppContext.Session(), c.Params.UserId) && !c.App.SessionHasPermissionTo(*c.AppContext.Session(), model.PermissionReadOtherUsersTeams) {
+		c.Err = model.NewAppError("getTeamMemberAndConfigForUser", "api.unable_to_read_file_from_backend", nil, "", http.StatusBadRequest)
+		return
+	}
+
+	canSee, err := c.App.UserCanSeeOtherUser(c.AppContext.Session().UserId, c.Params.UserId)
+	if err != nil {
+		c.Err = model.NewAppError("getTeamMemberAndConfigForUser", "api.unable_to_read_file_from_backend", nil, "", http.StatusBadRequest)
+		return
+	}
+
+	if !canSee {
+		c.Err = model.NewAppError("getTeamMemberAndConfigForUser", "api.unable_to_read_file_from_backend", nil, "", http.StatusBadRequest)
+		return
+	}
+
+	members, err := c.App.GetTeamMembersForUser(c.Params.UserId, "", true)
+	if err != nil {
+		c.Err = model.NewAppError("getTeamMemberAndConfigForUser", "api.unable_to_read_file_from_backend", nil, "", http.StatusBadRequest)
+		return
+	}
+	resultMap := make(map[string]interface{})
+	for _, member := range members {
+		if member.DeleteAt == 0 {
+			if member.TeamId != c.Params.TeamId {
+				continue
+			}
+			roles := ""
+
+			if member.Roles == "team_user" {
+				roles = "team_user"
+			}
+			if member.Roles == "team_user team_admin" {
+				roles = "team_admin"
+			}
+
+			resultMap = map[string]interface{}{
+				"roles":                     roles,
+				"teamId":                    member.TeamId,
+				"userId":                    member.UserId,
+				"isSystemAdmin":             c.IsSystemAdmin(),
+				"enableMultiTenancySupport": *c.App.Config().TeamSettings.EnableMultiTenancySupport,
+			}
+			break
+		}
+	}
+	str, _ := json.Marshal(resultMap)
+	w.Write([]byte(str))
+}
+
 func getTeamMembersByIds(c *Context, w http.ResponseWriter, r *http.Request) {
 	c.RequireTeamId()
 	if c.Err != nil {
@@ -981,6 +1040,7 @@
 	}
 
 	auditRec.Success()
+
 	ReturnStatusOK(w)
 }
 
@@ -1143,8 +1203,14 @@
 
 	if c.Params.IncludeTotalCount {
 		teamsWithCount, appErr = c.App.GetAllTeamsPageWithCount(offset, limit, opts)
+		if *c.App.Config().TeamSettings.EnableMultiTenancySupport && len(teamsWithCount.Teams) != 0 {
+			teamsWithCount.Teams = resumeTeams(c, teamsWithCount.Teams)
+		}
 	} else {
 		teams, appErr = c.App.GetAllTeamsPage(offset, limit, opts)
+		if *c.App.Config().TeamSettings.EnableMultiTenancySupport && len(teams) != 0 {
+			teams = resumeTeams(c, teams)
+		}
 	}
 	if appErr != nil {
 		c.Err = appErr
@@ -1170,6 +1236,27 @@
 	w.Write(js)
 }
 
+func resumeTeams(c *Context, teams []*model.Team) []*model.Team {
+	var resultTeam []*model.Team
+	for _, team := range teams {
+		members, _ := c.App.GetTeamMembers(team.Id, 0, math.MaxInt64, nil)
+		hasAdmin := false
+		for _, member := range members {
+			if member.Roles == "team_user team_admin" {
+				hasAdmin = true
+				break
+			}
+		}
+		if !hasAdmin {
+			resultTeam = append(resultTeam, team)
+		}
+	}
+	if resultTeam != nil {
+		return resultTeam
+	}
+	return make([]*model.Team, 0)
+}
+
 func searchTeams(c *Context, w http.ResponseWriter, r *http.Request) {
 	var props model.TeamSearch
 	if err := json.NewDecoder(r.Body).Decode(&props); err != nil {
Index: user.go
===================================================================
--- user.go	(revision 4469)
+++ user.go	(revision 4470)
@@ -6,12 +6,17 @@
 import (
 	"encoding/json"
 	"fmt"
+	"github.com/dgrijalva/jwt-go"
+	"github.com/xtgo/uuid"
 	"io"
+	"io/ioutil"
 	"net/http"
+	"net/url"
 	"strconv"
 	"strings"
 	"time"
 
+	/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201127 END */
 	"github.com/mattermost/mattermost-server/v6/app"
 	"github.com/mattermost/mattermost-server/v6/audit"
 	"github.com/mattermost/mattermost-server/v6/model"
@@ -21,6 +26,231 @@
 	"github.com/mattermost/mattermost-server/v6/web"
 )
 
+/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201127 START */
+type ClientTokenData struct {
+	Access_token string `json:"access_token"`
+}
+
+type KCUserData struct {
+	Id string `json:"id"`
+}
+
+func getClientAccessTokenFromKC(c *Context) (string, error) {
+	client := &http.Client{}
+	accessToken := ""
+
+	client_id := *c.App.Config().GitLabSettings.Id
+	grant_type := "client_credentials"
+	client_secret := *c.App.Config().GitLabSettings.Secret
+	postParams := "client_id=" + client_id + "&grant_type=" + grant_type + "&client_secret=" + client_secret
+	postUrl := *c.App.Config().GitLabSettings.TokenEndpoint
+
+	resp, err := client.Post(postUrl, "application/x-www-form-urlencoded", strings.NewReader(postParams))
+	if err != nil {
+		return accessToken, err
+	}
+
+	defer resp.Body.Close()
+
+	var data ClientTokenData
+	respResult, err := ioutil.ReadAll(resp.Body)
+	if err != nil {
+		return accessToken, err
+	}
+
+	err = json.Unmarshal(respResult, &data)
+	if err != nil {
+		return accessToken, err
+	}
+
+	accessToken = data.Access_token
+	return accessToken, err
+}
+
+func getUserIdFromKC(c *Context, accessToken string) (string, error) {
+	userIdFromKC := ""
+	userIdFromMM := c.AppContext.Session().UserId
+
+	userFromMM, _ := c.App.GetUser(userIdFromMM)
+	userName := userFromMM.Username
+	client := &http.Client{}
+
+	usersApiEndpoint := *c.App.Config().GitLabSettings.UsersApiEndpoint
+
+	req, err := http.NewRequest("GET", usersApiEndpoint+"?username="+userName, nil)
+	if err != nil {
+		return userIdFromKC, err
+	}
+
+	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")
+	req.Header.Set("Authorization", "Bearer "+accessToken)
+
+	resp, err := client.Do(req)
+	if err != nil {
+		return userIdFromKC, err
+	}
+
+	defer resp.Body.Close()
+
+	body, err := ioutil.ReadAll(resp.Body)
+	if err != nil {
+		return userIdFromKC, err
+	}
+
+	respString := strings.Trim(strings.Trim(string(body), "["), "]")
+
+	var data KCUserData
+	err = json.Unmarshal([]byte(respString), &data)
+	if err != nil {
+		return userIdFromKC, nil
+	}
+
+	userIdFromKC = data.Id
+	return userIdFromKC, nil
+}
+
+func getKCClientId(c *Context, accessToken string) (string, error) {
+	clientIdFromKC := ""
+	client := &http.Client{}
+
+	clientId := *c.App.Config().GitLabSettings.Id
+	clientsApiEndpoint := *c.App.Config().GitLabSettings.ClientsApiEndpoint
+
+	req, err := http.NewRequest("GET", clientsApiEndpoint+"?clientId="+clientId, nil)
+	if err != nil {
+		return clientIdFromKC, err
+	}
+
+	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")
+	req.Header.Set("Authorization", "Bearer "+accessToken)
+
+	resp, err := client.Do(req)
+	if err != nil {
+		return clientIdFromKC, err
+	}
+
+	defer resp.Body.Close()
+
+	body, err := ioutil.ReadAll(resp.Body)
+	if err != nil {
+		return clientIdFromKC, err
+	}
+
+	respString := strings.Trim(strings.Trim(string(body), "["), "]")
+
+	var data KCUserData
+	err = json.Unmarshal([]byte(respString), &data)
+	if err != nil {
+		return clientIdFromKC, nil
+	}
+
+	clientIdFromKC = data.Id
+	return clientIdFromKC, nil
+}
+
+func getKCClientServiceAccountUser(c *Context, accessToken string, clientIdFromKC string) (string, error) {
+	SAUIdFromKC := ""
+	client := &http.Client{}
+
+	clientsApiEndpoint := *c.App.Config().GitLabSettings.ClientsApiEndpoint
+
+	req, err := http.NewRequest("GET", clientsApiEndpoint+"/"+clientIdFromKC+"/service-account-user", nil)
+	if err != nil {
+		return SAUIdFromKC, err
+	}
+
+	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")
+	req.Header.Set("Authorization", "Bearer "+accessToken)
+
+	resp, err := client.Do(req)
+	if err != nil {
+		return SAUIdFromKC, err
+	}
+
+	defer resp.Body.Close()
+
+	body, err := ioutil.ReadAll(resp.Body)
+	if err != nil {
+		return SAUIdFromKC, err
+	}
+
+	var data KCUserData
+	err = json.Unmarshal([]byte(string(body)), &data)
+	if err != nil {
+		return SAUIdFromKC, nil
+	}
+
+	SAUIdFromKC = data.Id
+	return SAUIdFromKC, nil
+}
+
+func logoutKCAccount(c *Context, accessToken string, userIdFromKC string) (string, error) {
+	client := &http.Client{}
+	result := ""
+
+	usersApiEndpoint := *c.App.Config().GitLabSettings.UsersApiEndpoint
+
+	req, err := http.NewRequest("POST", usersApiEndpoint+"/"+userIdFromKC+"/logout", nil)
+	if err != nil {
+		return result, err
+	}
+
+	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")
+	req.Header.Set("Authorization", "Bearer "+accessToken)
+
+	resp, err := client.Do(req)
+	if err != nil {
+		return result, err
+	}
+
+	defer resp.Body.Close()
+
+	body, err := ioutil.ReadAll(resp.Body)
+	if err != nil {
+		return result, err
+	}
+
+	result = string(body)
+	return result, nil
+}
+
+type Claims struct {
+	jwt.MapClaims
+}
+
+var (
+	jwtkey []byte = []byte(uuid.NewRandom().String())
+)
+
+func makeLogoutToken(c *Context, accessToken string, userIdFromKC string, sid string) (string, error) {
+	logoutToken := ""
+	realmEndpoint := *c.App.Config().GitLabSettings.RealmEndpoint
+	clientId := *c.App.Config().GitLabSettings.Id
+
+	claims := &jwt.MapClaims{
+		"sid": sid,
+		"events": &jwt.MapClaims{
+			"http://schemas.openid.net/event/backchannel-logout": nil,
+			"revoke_offline_access":                              false,
+		},
+		"sub": userIdFromKC,
+		"iss": realmEndpoint,
+		"jti": uuid.NewRandom().String(),
+		"iat": time.Now().Unix(),
+		"aud": clientId,
+	}
+
+	token := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)
+	logoutToken, err := token.SignedString(jwtkey)
+	if err != nil {
+		return logoutToken, err
+	}
+
+	return logoutToken, nil
+}
+
+/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201127 END */
+
 func (api *API) InitUser() {
 	api.BaseRoutes.Users.Handle("", api.APIHandler(createUser)).Methods("POST")
 	api.BaseRoutes.Users.Handle("", api.APISessionRequired(getUsers)).Methods("GET")
@@ -34,6 +264,7 @@
 	api.BaseRoutes.Users.Handle("/group_channels", api.APISessionRequired(getUsersByGroupChannelIds)).Methods("POST")
 
 	api.BaseRoutes.User.Handle("", api.APISessionRequired(getUser)).Methods("GET")
+	api.BaseRoutes.User.Handle("/update/notify_props", api.APISessionRequired(updateUserNotifyProps)).Methods("POST")
 	api.BaseRoutes.User.Handle("/image/default", api.APISessionRequiredTrustRequester(getDefaultProfileImage)).Methods("GET")
 	api.BaseRoutes.User.Handle("/image", api.APISessionRequiredTrustRequester(getProfileImage)).Methods("GET")
 	api.BaseRoutes.User.Handle("/image", api.APISessionRequired(setProfileImage)).Methods("POST")
@@ -1697,6 +1928,15 @@
 		c.Logger.Warn("Error while writing response", mlog.Err(err))
 	}
 }
+func updateUserNotifyProps(c *Context, w http.ResponseWriter, r *http.Request) {
+	user := model.UserFromJson(r.Body)
+	puser, err := c.App.UpdateUserNotifyProps(user.Id, user.NotifyProps, false)
+	if err != nil {
+		c.Err = err
+		return
+	}
+	w.Write([]byte(puser.ToJson()))
+}
 
 func updatePassword(c *Context, w http.ResponseWriter, r *http.Request) {
 	c.RequireUserId()
@@ -2030,9 +2270,11 @@
 }
 
 func logout(c *Context, w http.ResponseWriter, r *http.Request) {
-	Logout(c, w, r)
+	/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201127 START */
+	SSOLogout(c, w, r)
+	//Logout(c, w, r)
+	/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201127 END */
 }
-
 func Logout(c *Context, w http.ResponseWriter, r *http.Request) {
 	auditRec := c.MakeAuditRecord("Logout", audit.Fail)
 	defer c.LogAuditRec(auditRec)
@@ -2050,6 +2292,88 @@
 	ReturnStatusOK(w)
 }
 
+/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201127 START */
+func SSOLogout(c *Context, w http.ResponseWriter, r *http.Request) {
+	auditRec := c.MakeAuditRecord("Logout", audit.Fail)
+	defer c.LogAuditRec(auditRec)
+	c.LogAudit("")
+
+	c.RemoveSessionCookie(w, r)
+	sid := c.AppContext.Session().Props[model.SESSION_USER_STATE]
+	if c.AppContext.Session().Id != "" {
+		if err := c.App.RevokeSessionById(c.AppContext.Session().Id); err != nil {
+			c.Err = err
+			return
+		}
+	}
+
+	auditRec.Success()
+	ReturnStatusOK(w)
+
+	ssoLogoutUrl := *c.App.Config().GitLabSettings.BackchannelEndpoint
+	if c.AppContext.Session().UserId != "" && ssoLogoutUrl != "" {
+		//アクセストークンを取得
+		accessToken, err := getClientAccessTokenFromKC(c)
+		if err != nil {
+			mlog.Error(err.Error())
+			return
+		}
+
+		//KCユーザIDを取得
+		userIdFromKC, err := getUserIdFromKC(c, accessToken)
+		if err != nil {
+			mlog.Error(err.Error())
+			return
+		}
+
+		//KCのクライアントIDを取得
+		clientIdFromKC, err := getKCClientId(c, accessToken)
+		if err != nil {
+			mlog.Error(err.Error())
+			return
+		}
+
+		//クライアントのService-Account-UserIDを取得
+		SAUId, err := getKCClientServiceAccountUser(c, accessToken, clientIdFromKC)
+		if err != nil {
+			mlog.Error(err.Error())
+			return
+		}
+
+		//AccessTokenとユーザIDを使ってKC Service-Accountユーザをログアウト
+		result, err := logoutKCAccount(c, accessToken, SAUId)
+		if err != nil {
+			mlog.Error(err.Error())
+			return
+		}
+		if result != "" {
+			mlog.Error(result)
+			return
+		}
+
+		//ログアウトトークンを取得
+		logoutToken, err := makeLogoutToken(c, accessToken, userIdFromKC, sid)
+		if err != nil {
+			mlog.Error(err.Error())
+			return
+		}
+
+		//BackChannelLogoutリクエストを送信する
+		data := make(url.Values)
+		data["logout_token"] = []string{logoutToken}
+
+		res, err := http.PostForm(ssoLogoutUrl, data)
+		if err != nil {
+			mlog.Error(err.Error())
+			return
+		}
+
+		defer res.Body.Close()
+	}
+}
+
+/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201127 END */
+
 func getSessions(c *Context, w http.ResponseWriter, r *http.Request) {
 	c.RequireUserId()
 	if c.Err != nil {
Index: app.go
===================================================================
--- app.go	(revision 4469)
+++ app.go	(revision 4470)
@@ -28,6 +28,11 @@
 	ch *Channels
 }
 
+func (a *App) UpdateUserNotifyProps(userID string, props map[string]string, sendNotifications bool) (*model.User, *model.AppError) {
+	//TODO implement me
+	panic("implement me")
+}
+
 func New(options ...AppOption) *App {
 	app := &App{}
 
Index: app_iface.go
===================================================================
--- app_iface.go	(revision 4469)
+++ app_iface.go	(revision 4470)
@@ -397,6 +397,7 @@
 	ValidateUserPermissionsOnChannels(c request.CTX, userId string, channelIds []string) []string
 	// VerifyPlugin checks that the given signature corresponds to the given plugin and matches a trusted certificate.
 	VerifyPlugin(plugin, signature io.ReadSeeker) *model.AppError
+	GetUserWebMeetingStatus(userId string) (*model.Status, error)
 	AccountMigration() einterfaces.AccountMigrationInterface
 	ActivateMfa(userID, token string) *model.AppError
 	AddChannelsToRetentionPolicy(policyID string, channelIDs []string) *model.AppError
@@ -580,6 +581,32 @@
 	GetActivePluginManifests() ([]*model.Manifest, *model.AppError)
 	GetAllChannels(c request.CTX, page, perPage int, opts model.ChannelSearchOpts) (model.ChannelListWithTeamData, *model.AppError)
 	GetAllChannelsCount(c request.CTX, opts model.ChannelSearchOpts) (int64, *model.AppError)
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 START */
+	CreateMeeting(meeting *model.Meeting, usersfromjson []*model.MeetingUserFromJson) (*model.MeetingMailInfo, []*model.MeetingUser, *model.AppError)
+	DeleteMeeting(meetingItemId string, delParams *model.DeleteParamsFromJson) (*model.MeetingMailInfo, *model.AppError)
+	GetMeeting(meetingItemId string) (*model.RepeatMeetingToJson, *model.AppError)
+	GetMeetingsByUserId(userId string, meetingAfter string, meetingBefore string) ([]*model.RepeatMeetingToJson, *model.AppError)
+	GetDeletedMeetingInfoByMeetingItemIds(meetingItemIds []string) ([]*model.DeleteParamsToJson, *model.AppError)
+	GetMeetingUsersByMeetingItemIds(meetingItemIds []string) ([]*model.MeetingUser, *model.AppError)
+	UpdateMeeting(meeting *model.Meeting, usersfromjson []*model.MeetingUserFromJson, isAddMeeting bool) (*model.MeetingMailInfo, string, *model.AppError)
+	UpdateValidMeetingUsers(meetingItemId string, mailAddrs []string, itemValid int) *model.AppError
+	GetMeetingDtstamp(timeStamp int64) string
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 END */
+	/* Ryobi Systems CloudOffice MeetingMng Mod 20210617 START */
+	GetMeetingMng(c *request.Context, meeting *model.MeetingMngFromJson) ([]*model.MeetingMngToJson, *model.AppError)
+	GetMeetingMngDetail(c *request.Context, MeetingItemId string) (*model.MeetingMngDetailToJson, *model.AppError)
+	MeetingMngDelete(meetingItemId string) (*model.MeetingMailInfo, *model.AppError)
+	GetMeetingMngUsersByMeetingItemIdFormail(meetingItemId string) ([]*model.MeetingMngUser, *model.AppError)
+	/* Ryobi Systems CloudOffice MeetingMng Mod 20210617 END */
+	/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 START */
+	GetMeetingStatus() ([]*model.MeetingStatusToJson, *model.AppError, bool)
+	GetMeetingEnd(meeting *model.MeetingEndFromJson) ([]*model.MeetingEndToJson, *model.AppError, bool)
+	/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 END */
+	/* Ryobi Systems CloudOffice CronChat Mod 20211129 START */
+	CronDeleteChat(c *request.Context, cronTime int) *model.AppError
+	GetChannelChatSettings(channelId string) (*model.ChannelSettingsToJson, *model.AppError)
+	SetChannelChatSettings(c *request.Context, channelSetting *model.ChannelChatSaveSettingsFromJson) *model.AppError
+	/* Ryobi Systems CloudOffice CronChat Mod 20211129 END */
 	GetAllPrivateTeams() ([]*model.Team, *model.AppError)
 	GetAllPublicTeams() ([]*model.Team, *model.AppError)
 	GetAllRemoteClusters(filter model.RemoteClusterQueryFilter) ([]*model.RemoteCluster, *model.AppError)
@@ -857,6 +884,11 @@
 	GetViewUsersRestrictions(userID string) (*model.ViewUsersRestrictions, *model.AppError)
 	GetWarnMetricsBot() (*model.Bot, *model.AppError)
 	GetWarnMetricsStatus() (map[string]*model.WarnMetricStatus, *model.AppError)
+	/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+	GetFilePermission(userIp string) (*model.FilePermission, *model.AppError)
+	GetFileTotalSize() (float64, *model.AppError)
+	SetFileTotalSize() *model.AppError
+	/* Ryobi Systems CloudOffice Files Mod 20211103 END */
 	GetWorkTemplateCategories(t i18n.TranslateFunc) ([]*model.WorkTemplateCategory, *model.AppError)
 	GetWorkTemplates(category string, featureFlags map[string]string, t i18n.TranslateFunc) ([]*model.WorkTemplate, *model.AppError)
 	HTTPService() httpservice.HTTPService
@@ -927,6 +959,12 @@
 	NotifySharedChannelUserUpdate(user *model.User)
 	OpenInteractiveDialog(request model.OpenDialogRequest) *model.AppError
 	OriginChecker() func(*http.Request) bool
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+	SaveDefaultTeamforName(Name string)
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20221025 START */
+	DeleteDefaultTeam()
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20221025 END */
 	PatchChannel(c request.CTX, channel *model.Channel, patch *model.ChannelPatch, userID string) (*model.Channel, *model.AppError)
 	PatchPost(c *request.Context, postID string, patch *model.PostPatch) (*model.Post, *model.AppError)
 	PatchRetentionPolicy(patch *model.RetentionPolicyWithTeamAndChannelIDs) (*model.RetentionPolicyWithTeamAndChannelCounts, *model.AppError)
@@ -978,6 +1016,9 @@
 	RemoveTeamIcon(teamID string) *model.AppError
 	RemoveTeamsFromRetentionPolicy(policyID string, teamIDs []string) *model.AppError
 	RemoveUserFromChannel(c request.CTX, userIDToRemove string, removerUserId string, channel *model.Channel) *model.AppError
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+	GetDefaultTeama(teamId string) int
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
 	RemoveUserFromTeam(c request.CTX, teamID string, userID string, requestorId string) *model.AppError
 	RemoveUsersFromChannelNotMemberOfTeam(c request.CTX, remover *model.User, channel *model.Channel, team *model.Team) *model.AppError
 	RequestLicenseAndAckWarnMetric(c *request.Context, warnMetricId string, isBot bool) *model.AppError
@@ -1076,6 +1117,7 @@
 	SetSearchEngine(se *searchengine.Broker)
 	SetServer(srv *Server)
 	SetStatusAwayIfNeeded(userID string, manual bool)
+	SetStatusMeetingIfNeeded(UserId string, manual bool)
 	SetStatusDoNotDisturb(userID string)
 	SetStatusOffline(userID string, manual bool)
 	SetStatusOnline(userID string, manual bool)
@@ -1153,6 +1195,7 @@
 	UpdateUserActive(c request.CTX, userID string, active bool) *model.AppError
 	UpdateUserAsUser(c request.CTX, user *model.User, asAdmin bool) (*model.User, *model.AppError)
 	UpdateUserAuth(userID string, userAuth *model.UserAuth) (*model.UserAuth, *model.AppError)
+	UpdateUserNotifyProps(userID string, props map[string]string, sendNotifications bool) (*model.User, *model.AppError)
 	UpdateUserRoles(c request.CTX, userID string, newRoles string, sendWebSocketEvent bool) (*model.User, *model.AppError)
 	UpdateUserRolesWithUser(c request.CTX, user *model.User, newRoles string, sendWebSocketEvent bool) (*model.User, *model.AppError)
 	UploadData(c request.CTX, us *model.UploadSession, rd io.Reader) (*model.FileInfo, *model.AppError)
Index: bot.go
===================================================================
--- bot.go	(revision 4469)
+++ bot.go	(revision 4470)
@@ -632,7 +632,9 @@
 	T := i18n.GetUserTranslations(user.Locale)
 	message = T("app.bot.get_disable_bot_sysadmin_message",
 		map[string]any{
-			"UserName":           user.Username,
+			/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 START */
+			"UserName": user.GetFullName(),
+			/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 END */
 			"NumBots":            len(userBots),
 			"BotNames":           botList,
 			"disableBotsSetting": disableBotsSetting,
Index: channel.go
===================================================================
--- channel.go	(revision 4469)
+++ channel.go	(revision 4470)
@@ -835,7 +835,9 @@
 
 		post := &model.Post{
 			ChannelId: channel.Id,
-			Message:   T("api.channel.restore_channel.unarchived", map[string]any{"Username": user.Username}),
+			/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 START */
+			Message:   T("api.channel.restore_channel.unarchived", map[string]any{"Username": user.GetFullName()}),
+			/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 END */			
 			Type:      model.PostTypeChannelRestored,
 			UserId:    userID,
 			Props: model.StringInterface{
@@ -856,7 +858,9 @@
 
 			post := &model.Post{
 				ChannelId: channel.Id,
-				Message:   i18n.T("api.channel.restore_channel.unarchived", map[string]any{"Username": systemBot.Username}),
+				/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 START */
+				Message:   i18n.T("api.channel.restore_channel.unarchived", map[string]any{"Username": user.GetFullName()}),
+				/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 END */				
 				Type:      model.PostTypeChannelRestored,
 				UserId:    systemBot.UserId,
 				Props: model.StringInterface{
@@ -1281,7 +1285,9 @@
 	if desktop, exists := data[model.DesktopNotifyProp]; exists {
 		filteredProps[model.DesktopNotifyProp] = desktop
 	}
-
+	if desktop, exists := data[model.CONTINUE_SHOW]; exists {
+		filteredProps[model.CONTINUE_SHOW] = desktop
+	}
 	if desktop_threads, exists := data[model.DesktopThreadsNotifyProp]; exists {
 		filteredProps[model.DesktopThreadsNotifyProp] = desktop_threads
 	}
@@ -1301,7 +1307,15 @@
 	if ignoreChannelMentions, exists := data[model.IgnoreChannelMentionsNotifyProp]; exists {
 		filteredProps[model.IgnoreChannelMentionsNotifyProp] = ignoreChannelMentions
 	}
+	/* Ryobi Systems CloudOffice Channel Mod 20210802 start */
+	if notificationsToChannel, exists := data[model.NOTIFICATIONS_TO_CHANNEL_NOTIFY_PROP]; exists {
+		filteredProps[model.NOTIFICATIONS_TO_CHANNEL_NOTIFY_PROP] = notificationsToChannel
+	}
 
+	if notificationsToChannelCount, exists := data[model.NOTIFICATIONS_TO_CHANNEL_COUNT_NOTIFY_PROP]; exists {
+		filteredProps[model.NOTIFICATIONS_TO_CHANNEL_COUNT_NOTIFY_PROP] = notificationsToChannelCount
+	}
+	/* Ryobi Systems CloudOffice Channel Mod 20210816 END */
 	member, err := a.Srv().Store().Channel().UpdateMemberNotifyProps(channelID, userID, filteredProps)
 	if err != nil {
 		var appErr *model.AppError
@@ -2569,7 +2583,9 @@
 		oldStatus = status.Status
 		status.ActiveChannel = channelID
 		if !status.Manual && channelID != "" {
-			status.Status = model.StatusOnline
+			if status.Status != model.STATUS_MEETING {
+				status.Status = model.StatusOnline
+			}
 		}
 		status.LastActivityAt = model.GetMillis()
 	}
Index: config.go
===================================================================
--- config.go	(revision 4469)
+++ config.go	(revision 4470)
@@ -211,6 +211,35 @@
 	return cfg
 }
 
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+func (a *App) SaveDefaultTeamforName(Name string) {
+	team, err := a.Srv().Store().Team().GetByName(Name)
+	if err != nil {
+		return
+	}
+	DefaultTeam, errDefaultTeam := a.Srv().Store().Session().SqlGetDefaultTeam()
+	if errDefaultTeam == nil && DefaultTeam != "" {
+		_ = a.Srv().Store().Session().SqlDeleteDefaultTeam()
+	}
+
+	dt := model.DefaultTeam{}
+
+	dt.Id = team.Id
+	dt.CreateAt = 0
+	dt.UpdateAt = 0
+	a.Srv().Store().Session().SqlSaveDefaultTeam(&dt)
+	return
+}
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20221025 START */
+func (a *App) DeleteDefaultTeam() {
+	_ = a.Srv().Store().Session().SqlDeleteDefaultTeam()
+	return
+}
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20221025 END */
 // GetEnvironmentConfig returns a map of configuration keys whose values have been overridden by an environment variable.
 // If filter is not nil and returns false for a struct field, that field will be omitted.
 func (a *App) GetEnvironmentConfig(filter func(reflect.StructField) bool) map[string]any {
Index: file.go
===================================================================
--- file.go	(revision 4469)
+++ file.go	(revision 4470)
@@ -47,6 +47,13 @@
 	jpegEncQuality             = 90
 	maxUploadInitialBufferSize = 1024 * 1024 // 1MB
 	maxContentExtractionSize   = 1024 * 1024 // 1MB
+	/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+	permissionNone        = "none"
+	permissionAll         = "all"
+	permissionSome        = "some"
+	userPermissonDownload = "download"
+	userPermissonReadonly = "readonly"
+	/* Ryobi Systems CloudOffice Files Mod 20211103 END */
 )
 
 // Ensure fileInfo service wrapper implements `product.FileInfoStoreService`
@@ -1358,6 +1365,117 @@
 	return nil
 }
 
+/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+func (a *App) GetFilePermission(userIp string) (*model.FilePermission, *model.AppError) {
+	var fp model.FilePermission
+
+	fp.UserPermissionDownload = permissionNone
+	fp.UserPermissionUpload = false
+
+	if !*a.Config().FileSettings.EnableFileAttachments {
+		return &fp, nil
+	} else {
+		fp.UserPermissionDownload = userPermissonDownload
+		fp.UserPermissionUpload = true
+	}
+
+	if _, ok := a.Config().PluginSettings.PluginStates["filepermissionsettingplugin"]; !ok {
+		return &fp, nil
+	}
+	if !a.Config().PluginSettings.PluginStates["filepermissionsettingplugin"].Enable {
+		return &fp, nil
+	}
+	if _, ok := a.Config().PluginSettings.Plugins["filepermissionsettingplugin"]; !ok {
+		return &fp, nil
+	}
+
+	Permission := a.Config().PluginSettings.Plugins["filepermissionsettingplugin"]["filepermission"].(string)
+	Download, _ := a.Config().PluginSettings.Plugins["filepermissionsettingplugin"]["download"].(bool)
+	DownloadWhitelist, _ := a.Config().PluginSettings.Plugins["filepermissionsettingplugin"]["downloadwhitelist"].(string)
+	Refer, _ := a.Config().PluginSettings.Plugins["filepermissionsettingplugin"]["refer"].(bool)
+	ReferWhitelist, _ := a.Config().PluginSettings.Plugins["filepermissionsettingplugin"]["referwhitelist"].(string)
+	Upload, _ := a.Config().PluginSettings.Plugins["filepermissionsettingplugin"]["upload"].(bool)
+	UploadWhitelist, _ := a.Config().PluginSettings.Plugins["filepermissionsettingplugin"]["uploadwhitelist"].(string)
+
+	fp.UserPermissionDownload = permissionNone
+	fp.UserPermissionUpload = false
+
+	switch Permission {
+	// 権限無し
+	case permissionNone:
+		return &fp, nil
+	// 権限ある
+	case permissionAll:
+		fp.UserPermissionDownload = userPermissonDownload
+		fp.UserPermissionUpload = true
+		return &fp, nil
+	case permissionSome:
+		//　アップロード権限
+		if Upload {
+			if UploadWhitelist == "" {
+				fp.UserPermissionUpload = true
+			} else if a.CheckUser(UploadWhitelist, userIp) {
+				fp.UserPermissionUpload = true
+			}
+		}
+		//　参照権限
+		if Refer {
+			if ReferWhitelist == "" {
+				fp.UserPermissionDownload = userPermissonReadonly
+			} else if a.CheckUser(ReferWhitelist, userIp) {
+				fp.UserPermissionDownload = userPermissonReadonly
+			}
+		}
+		//　ダウンロード権限
+		if Download {
+			if DownloadWhitelist == "" {
+				fp.UserPermissionDownload = userPermissonDownload
+			} else if a.CheckUser(DownloadWhitelist, userIp) {
+				fp.UserPermissionDownload = userPermissonDownload
+			}
+		}
+		return &fp, nil
+	}
+	return &fp, nil
+}
+func (a *App) CheckUser(ipList string, userIp string) bool {
+	if strings.Contains(ipList, userIp) {
+		return true
+	}
+
+	s := strings.Split(ipList, ";")
+	for _, item := range s {
+		if item == "" {
+			continue
+		}
+		matchStr := "^" + item + "$"
+		matchStr = strings.Replace(matchStr, ".", "\\.", -1)
+		matchStr = strings.Replace(matchStr, "*", "\\d{1,3}", -1)
+		if ok, _ := regexp.MatchString(matchStr, userIp); ok {
+			return true
+		}
+	}
+	return false
+}
+func (a *App) SetFileTotalSize() *model.AppError {
+	if _, ok := a.Config().PluginSettings.Plugins["filepermissionsettingplugin"]; ok {
+		totalSize, _ := a.GetFileTotalSize()
+		a.Srv().Platform().GetConfigStore().ReMulTotalSize(totalSize)
+	}
+	return nil
+}
+func (a *App) GetFileTotalSize() (float64, *model.AppError) {
+	totalSize, _ := a.Srv().Store().FileInfo().GetFileTotalSize()
+
+	totalSileMB := float64(totalSize) / 1024 / 1024
+	totalSileMB, _ = strconv.ParseFloat(fmt.Sprintf("%.1f", totalSileMB), 64)
+	if totalSileMB < 0.1 {
+		totalSileMB = 0.1
+	}
+	return totalSileMB, nil
+}
+
+/* Ryobi Systems CloudOffice Files Mod 20211103 END */
 // GetLastAccessibleFileTime returns CreateAt time(from cache) of the last accessible post as per the cloud limit
 func (a *App) GetLastAccessibleFileTime() (int64, *model.AppError) {
 	license := a.Srv().License()
Index: login.go
===================================================================
--- login.go	(revision 4469)
+++ login.go	(revision 4470)
@@ -206,12 +206,20 @@
 	} else {
 		session.AddProp(model.SessionPropIsGuest, "false")
 	}
-
+	if user.Props["session_state"] != "" {
+		session.AddProp(model.SESSION_USER_STATE, user.Props["session_state"])
+	}
 	var err *model.AppError
 	if session, err = a.CreateSession(session); err != nil {
 		err.StatusCode = http.StatusInternalServerError
 		return err
 	}
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+	if len(session.TeamMembers) == 0 {
+		DefaultTeamid, _ := a.Srv().Store().Session().SqlGetDefaultTeam()
+		_, _ = a.AddTeamMember(c, DefaultTeamid, session.UserId)
+	}
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
 
 	w.Header().Set(model.HeaderToken, session.Token)
 
Index: notification_email.go
===================================================================
--- notification_email.go	(revision 4469)
+++ notification_email.go	(revision 4470)
@@ -11,7 +11,7 @@
 	"io"
 	"strings"
 	"time"
-
+	"unicode"
 	email "github.com/mattermost/mattermost-server/v6/app/email"
 	"github.com/mattermost/mattermost-server/v6/app/request"
 	"github.com/mattermost/mattermost-server/v6/model"
@@ -107,7 +107,9 @@
 		}
 	}
 
-	landingURL := a.GetSiteURL() + "/landing#/" + team.Name
+	/* Ryobi Systems CloudOffice Meeting Mod ランディングURLを修正 20210517 START */
+	landingURL := a.GetSiteURL() + "/" + team.Name
+	/* Ryobi Systems CloudOffice Meeting Mod ランディングURLを修正 20210517 END */
 
 	var bodyText, err = a.getNotificationEmailBody(c, user, post, channel, channelName, senderName, team.Name, landingURL, emailNotificationContentsType, useMilitaryTime, translateFunc, senderPhoto)
 	if err != nil {
@@ -233,6 +235,9 @@
 
 	if emailNotificationContentsType == model.EmailNotificationContentsFull {
 		postMessage := a.GetMessageForNotification(post, translateFunc)
+		/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 START */
+		postMessage = a.changeUserNameToFullNameWithPrefixAt(postMessage)
+		/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 END */
 		postMessage = html.EscapeString(postMessage)
 		mdPostMessage, mdErr := utils.MarkdownToHTML(postMessage, a.GetSiteURL())
 		if mdErr != nil {
@@ -382,3 +387,32 @@
 func (a *App) GetMessageForNotification(post *model.Post, translateFunc i18n.TranslateFunc) string {
 	return a.Srv().EmailService.GetMessageForNotification(post, translateFunc)
 }
+
+/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 START */
+//メール通知本文の@UserNameを@FullNameに修正
+func (a *App) changeUserNameToFullNameWithPrefixAt(text string) string {
+	message := text
+	for _, word := range strings.FieldsFunc(text, func(c rune) bool {
+		// Split on any whitespace or punctuation that can't be part of an at mention or emoji pattern
+		return !(c == ':' || c == '.' || c == '-' || c == '_' || c == '@' || unicode.IsLetter(c) || unicode.IsNumber(c))
+	}) {
+		// skip word with format ':word:' with an assumption that it is an emoji format only
+		if word[0] == ':' && word[len(word)-1] == ':' {
+			continue
+		}
+
+		word = strings.TrimLeft(word, ":.-_")
+
+		if strings.HasPrefix(word, "@") {
+			user, err := a.GetUserByUsername(word[1:])
+			if err == nil {
+				replaceWord := "@" + user.GetFullName()
+				message = strings.Replace(message, word, replaceWord, -1)
+			}
+		}
+	}
+
+	return message
+}
+
+/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 END */
Index: oauth.go
===================================================================
--- oauth.go	(revision 4469)
+++ oauth.go	(revision 4470)
@@ -810,7 +810,10 @@
 
 	cookie, cookieErr := r.Cookie(CookieOAuth)
 	if cookieErr != nil {
-		return nil, "", stateProps, nil, model.NewAppError("AuthorizeOAuthUser", "api.user.authorize_oauth_user.invalid_state.app_error", nil, "", http.StatusBadRequest)
+		// 20210604 Ryobi Systems/--
+		// エラー詳細にoauth_cookie_expiredが含まれる場合は呼び出し元で復旧処理を行う
+		return nil, "", stateProps, nil, model.NewAppError("AuthorizeOAuthUser", "api.user.authorize_oauth_user.invalid_state.app_error", nil, "oauth_cookie_expired", http.StatusBadRequest)
+		// --/20210604 Ryobi Systems
 	}
 
 	expectedTokenExtra := generateOAuthStateTokenExtra(stateEmail, stateAction, cookie.Value)
Index: opentracing_layer.go
===================================================================
--- opentracing_layer.go	(revision 4469)
+++ opentracing_layer.go	(revision 4470)
@@ -4588,6 +4588,398 @@
 	return resultVar0, resultVar1
 }
 
+/* Ryobi Systems CloudOffice Meeting Mod 20210325 START */
+func (a *OpenTracingAppLayer) GetMeetingsByUserId(userId string, meetingAfter string, meetingBefore string) ([]*model.RepeatMeetingToJson, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetMeetingsByUserId")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1 := a.app.GetMeetingsByUserId(userId, meetingAfter, meetingBefore)
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1
+}
+
+func (a *OpenTracingAppLayer) GetDeletedMeetingInfoByMeetingItemIds(meetingItemIds []string) ([]*model.DeleteParamsToJson, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetDeletedMeetingInfoByMeetingItemIds")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1 := a.app.GetDeletedMeetingInfoByMeetingItemIds(meetingItemIds)
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1
+}
+
+func (a *OpenTracingAppLayer) GetMeeting(meetingItemId string) (*model.RepeatMeetingToJson, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetMeeting")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1 := a.app.GetMeeting(meetingItemId)
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1
+}
+
+func (a *OpenTracingAppLayer) GetMeetingUsersByMeetingItemIds(meetingItemIds []string) ([]*model.MeetingUser, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetMeetingUsersByMeetingItemIds")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1 := a.app.GetMeetingUsersByMeetingItemIds(meetingItemIds)
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1
+}
+
+func (a *OpenTracingAppLayer) DeleteMeeting(meetingItemId string, delParams *model.DeleteParamsFromJson) (*model.MeetingMailInfo, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.DeleteMeeting")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1 := a.app.DeleteMeeting(meetingItemId, delParams)
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1
+}
+
+func (a *OpenTracingAppLayer) CreateMeeting(meeting *model.Meeting, usersfromjson []*model.MeetingUserFromJson) (*model.MeetingMailInfo, []*model.MeetingUser, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.CreateMeeting")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1, resultVar2 := a.app.CreateMeeting(meeting, usersfromjson)
+
+	if resultVar2 != nil {
+		span.LogFields(spanlog.Error(resultVar2))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1, resultVar2
+}
+
+func (a *OpenTracingAppLayer) UpdateMeeting(meeting *model.Meeting, usersfromjson []*model.MeetingUserFromJson, isAddMeeting bool) (*model.MeetingMailInfo, string, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.UpdateMeeting")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1, resultVar2 := a.app.UpdateMeeting(meeting, usersfromjson, isAddMeeting)
+
+	if resultVar2 != nil {
+		span.LogFields(spanlog.Error(resultVar2))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1, resultVar2
+}
+
+func (a *OpenTracingAppLayer) UpdateValidMeetingUsers(meetingItemId string, mailAddrs []string, itemValid int) *model.AppError {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.UpdateValidMeetingUsers")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0 := a.app.UpdateValidMeetingUsers(meetingItemId, mailAddrs, itemValid)
+
+	if resultVar0 != nil {
+		span.LogFields(spanlog.Error(resultVar0))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0
+}
+
+func (a *OpenTracingAppLayer) GetMeetingDtstamp(timeStamp int64) string {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetMeetingDtstamp")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0 := a.app.GetMeetingDtstamp(timeStamp)
+
+	return resultVar0
+}
+
+/* Ryobi Systems CloudOffice Meeting Mod 20210325 END */
+/* Ryobi Systems CloudOffice MeetingMng Mod 20210617 START */
+
+func (a *OpenTracingAppLayer) GetMeetingMng(c *request.Context, meeting *model.MeetingMngFromJson) ([]*model.MeetingMngToJson, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetMeetingMng")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1 := a.app.GetMeetingMng(c, meeting)
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1
+}
+func (a *OpenTracingAppLayer) GetMeetingMngDetail(c *request.Context, MeetingItemId string) (*model.MeetingMngDetailToJson, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetMeetingMngByUserId")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1 := a.app.GetMeetingMngDetail(c, MeetingItemId)
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1
+}
+
+/* Ryobi Systems CloudOffice MeetingMng Mod 20210617 END */
+/* Ryobi Systems CloudOffice MeetingMng Mod 20210913 START */
+
+func (a *OpenTracingAppLayer) MeetingMngDelete(meetingItemId string) (*model.MeetingMailInfo, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.MeetingMngDelete")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1 := a.app.MeetingMngDelete(meetingItemId)
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1
+}
+func (a *OpenTracingAppLayer) GetMeetingMngUsersByMeetingItemIdFormail(meetingItemId string) ([]*model.MeetingMngUser, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetMeetingMngByUserId")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1 := a.app.GetMeetingMngUsersByMeetingItemIdFormail(meetingItemId)
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1
+}
+
+/* Ryobi Systems CloudOffice MeetingMng Mod 20210913 END */
+
+/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 START */
+func (a *OpenTracingAppLayer) GetMeetingStatus() ([]*model.MeetingStatusToJson, *model.AppError, bool) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetMeetingStatus")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1, resultVar2 := a.app.GetMeetingStatus()
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1, resultVar2
+}
+
+func (a *OpenTracingAppLayer) GetMeetingEnd(meeting *model.MeetingEndFromJson) ([]*model.MeetingEndToJson, *model.AppError, bool) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetMeetingEnd")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1, resultVar2 := a.app.GetMeetingEnd(meeting)
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1, resultVar2
+}
+
+/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 END */
+
+/* Ryobi Systems CloudOffice CronChat Mod 20211129 START */
+func (a *OpenTracingAppLayer) CronDeleteChat(c *request.Context, cronTime int) *model.AppError {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.CronDeleteChat")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0 := a.app.CronDeleteChat(c, cronTime)
+
+	return resultVar0
+}
+func (a *OpenTracingAppLayer) GetChannelChatSettings(channelId string) (*model.ChannelSettingsToJson, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetMeetingMngByUserId")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1 := a.app.GetChannelChatSettings(channelId)
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1
+}
+func (a *OpenTracingAppLayer) SetChannelChatSettings(c *request.Context, channelSetting *model.ChannelChatSaveSettingsFromJson) *model.AppError {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.CronDeleteChat")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0 := a.app.SetChannelChatSettings(c, channelSetting)
+
+	return resultVar0
+}
+
+/* Ryobi Systems CloudOffice CronChat Mod 20211129 END */
+
 func (a *OpenTracingAppLayer) GetAllLdapGroupsPage(page int, perPage int, opts model.LdapGroupSearchOpts) ([]*model.Group, int, *model.AppError) {
 	origCtx := a.ctx
 	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetAllLdapGroupsPage")
@@ -10636,6 +11028,28 @@
 	return resultVar0, resultVar1
 }
 
+func (a *OpenTracingAppLayer) GetUserWebMeetingStatus(userId string) (*model.Status, error) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.getUserWebMeetingStatus")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1 := a.app.GetUserWebMeetingStatus(userId)
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, nil
+}
+
 func (a *OpenTracingAppLayer) GetUsers(userIDs []string) ([]*model.User, *model.AppError) {
 	origCtx := a.ctx
 	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetUsers")
@@ -10907,7 +11321,7 @@
 	}()
 
 	defer span.Finish()
-	resultVar0, resultVar1 := a.app.GetUsersInChannelPageByStatus(options, asAdmin)
+	resultVar0, resultVar1 := a.app.GetUsersInChannelPageByAdmin(options, asAdmin)
 
 	if resultVar1 != nil {
 		span.LogFields(spanlog.Error(resultVar1))
@@ -11303,6 +11717,72 @@
 	return resultVar0, resultVar1
 }
 
+/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+func (a *OpenTracingAppLayer) GetFilePermission(userIp string) (*model.FilePermission, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetFilePermission")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1 := a.app.GetFilePermission(userIp)
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1
+}
+func (a *OpenTracingAppLayer) GetFileTotalSize() (float64, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetFileTotalSize")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1 := a.app.GetFileTotalSize()
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1
+}
+func (a *OpenTracingAppLayer) SetFileTotalSize() *model.AppError {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.SetFileTotalSize")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar1 := a.app.SetFileTotalSize()
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar1
+}
+
+/* Ryobi Systems CloudOffice Files Mod 20211103 END */
 func (a *OpenTracingAppLayer) GetWorkTemplateCategories(t i18n.TranslateFunc) ([]*model.WorkTemplateCategory, *model.AppError) {
 	origCtx := a.ctx
 	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetWorkTemplateCategories")
@@ -12790,6 +13270,41 @@
 	return resultVar0
 }
 
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+func (a *OpenTracingAppLayer) SaveDefaultTeamforName(Name string) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.SaveDefaultTeamforName")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	a.app.SaveDefaultTeamforName(Name)
+}
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
+/* Ryobi Systems DefaultTeamaSetUp Mod 20221025 START */
+func (a *OpenTracingAppLayer) DeleteDefaultTeam() {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.DeleteDefaultTeam")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	a.app.DeleteDefaultTeam()
+}
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20221025 END */
+
 func (a *OpenTracingAppLayer) OriginChecker() func(*http.Request) bool {
 	origCtx := a.ctx
 	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.OriginChecker")
@@ -14049,6 +14564,28 @@
 	return resultVar0
 }
 
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+func (a *OpenTracingAppLayer) GetDefaultTeama(teamId string) int {
+
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.GetDefaultTeama")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0 := a.app.GetDefaultTeama(teamId)
+
+	return resultVar0
+
+}
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
+
 func (a *OpenTracingAppLayer) RemoveUserFromTeam(c request.CTX, teamID string, userID string, requestorId string) *model.AppError {
 	origCtx := a.ctx
 	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.RemoveUserFromTeam")
@@ -16286,6 +16823,21 @@
 	a.app.SetStatusAwayIfNeeded(userID, manual)
 }
 
+func (a *OpenTracingAppLayer) SetStatusMeetingIfNeeded(userId string, manual bool) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.SetStatusMeetingIfNeeded")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	a.app.SetStatusMeetingIfNeeded(userId, manual)
+}
+
 func (a *OpenTracingAppLayer) SetStatusDoNotDisturb(userID string) {
 	origCtx := a.ctx
 	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.SetStatusDoNotDisturb")
@@ -18138,6 +18690,27 @@
 	return resultVar0, resultVar1
 }
 
+func (a *OpenTracingAppLayer) UpdateUserNotifyProps(userID string, props map[string]string, sendNotifications bool) (*model.User, *model.AppError) {
+	origCtx := a.ctx
+	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.UpdateUserNotifyProps")
+
+	a.ctx = newCtx
+	a.app.Srv().Store().SetContext(newCtx)
+	defer func() {
+		a.app.Srv().Store().SetContext(origCtx)
+		a.ctx = origCtx
+	}()
+
+	defer span.Finish()
+	resultVar0, resultVar1 := a.app.UpdateUserNotifyProps(userID, props, sendNotifications)
+
+	if resultVar1 != nil {
+		span.LogFields(spanlog.Error(resultVar1))
+		ext.Error.Set(span, true)
+	}
+
+	return resultVar0, resultVar1
+}
 func (a *OpenTracingAppLayer) UpdateUserRoles(c request.CTX, userID string, newRoles string, sendWebSocketEvent bool) (*model.User, *model.AppError) {
 	origCtx := a.ctx
 	span, newCtx := tracing.StartSpanWithParentByContext(a.ctx, "app.UpdateUserRoles")
Index: session.go
===================================================================
--- session.go	(revision 4469)
+++ session.go	(revision 4470)
@@ -260,3 +260,22 @@
 
 	return nil
 }
+
+/*
+Delete user session by userID sessionState
+*/
+func (ps *PlatformService) RevokeSessionsBySid(userID string, sessionState string) error {
+	sessions, err := ps.Store.Session().GetSessions(userID)
+	if err != nil {
+		return fmt.Errorf("%s: %w", err.Error(), GetSessionError)
+	}
+	for _, session := range sessions {
+		if sessionState == session.Props[model.SESSION_USER_STATE] {
+			if err := ps.Store.Session().Remove(session.Id); err != nil {
+				return fmt.Errorf("%s: %w", err.Error(), DeleteSessionError)
+			}
+		}
+	}
+	ps.ClearUserSessionCache(userID)
+	return nil
+}
Index: status.go
===================================================================
--- status.go	(revision 4469)
+++ status.go	(revision 4470)
@@ -165,6 +165,11 @@
 	event := model.NewWebSocketEvent(model.WebsocketEventStatusChange, "", "", status.UserId, nil, "")
 	event.Add("status", status.Status)
 	event.Add("user_id", status.UserId)
+	event.Add("manual", status.Manual)
+	event.Add("last_activity_at", status.LastActivityAt)
+	event.Add("active_channel", status.ActiveChannel)
+	event.Add("DND_end_time", status.DNDEndTime)
+	event.Add("prev_status", status.PrevStatus)
 	ps.Publish(event)
 }
 
@@ -332,7 +337,7 @@
 	}
 
 	if !manual {
-		if status.Status == model.StatusAway {
+		if status.Status == model.StatusAway || status.Status==model.STATUS_MEETING{
 			return
 		}
 
Index: plugin_api.go
===================================================================
--- plugin_api.go	(revision 4469)
+++ plugin_api.go	(revision 4470)
@@ -324,6 +324,18 @@
 	return api.app.UpdateUserActive(api.ctx, userID, active)
 }
 
+/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201130 START */
+func (api *PluginAPI) RevokeAllSessionsById(userId string) *model.AppError {
+	return api.app.RevokeAllSessionsById(userId)
+}
+
+/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201130 END */
+/* Ryobi Systems MM_NC_連動SSOログアウト 20211224 START */
+func (api *PluginAPI) RevokeUserSessionById(userId string, sessionState string) *model.AppError {
+	return api.app.RevokeUserSessionById(userId, sessionState)
+}
+
+/* Ryobi Systems MM_NC_連動SSOログアウト 20211224 END */
 func (api *PluginAPI) GetUserStatus(userID string) (*model.Status, *model.AppError) {
 	return api.app.GetStatus(userID)
 }
@@ -342,6 +354,8 @@
 		api.app.SetStatusAwayIfNeeded(userID, true)
 	case model.StatusDnd:
 		api.app.SetStatusDoNotDisturb(userID)
+	case model.STATUS_MEETING:
+		api.app.SetStatusMeetingIfNeeded(userID, true)
 	default:
 		return nil, model.NewAppError("UpdateUserStatus", "plugin.api.update_user_status.bad_status", nil, "unrecognized status", http.StatusBadRequest)
 	}
@@ -683,6 +697,15 @@
 	}
 	return post, appErr
 }
+func (api *PluginAPI) GetPollFields(postID string) ([]*model.PollFields, *model.AppError) {
+	return api.app.GetPollFields(postID)
+}
+func (api *PluginAPI) PollFieldsInsert(field *model.PollFields) *model.AppError {
+	return api.app.PollFieldsInsert(field)
+}
+func (api *PluginAPI) DeletePollFields(userId string, postId string) *model.AppError {
+	return api.app.DeletePollFields(userId, postId)
+}
 
 func (api *PluginAPI) GetPostsSince(channelID string, time int64) (*model.PostList, *model.AppError) {
 	list, appErr := api.app.GetPostsSince(model.GetPostsSinceOptions{ChannelId: channelID, Time: time})
@@ -723,7 +746,12 @@
 	}
 	return post, appErr
 }
-
+func (api *PluginAPI) UpdatePostWithCachereRefresh(post *model.Post) (*model.Post, *model.AppError) {
+	return api.app.UpdatePostWithCachereRefresh(api.ctx, post, false)
+}
+func (api *PluginAPI) GetUsersInChannelPageByStatus(options *model.UserGetOptions, asAdmin bool) ([]*model.User, *model.AppError) {
+	return api.app.GetUsersInChannelPageByStatus(options, asAdmin)
+}
 func (api *PluginAPI) GetProfileImage(userID string) ([]byte, *model.AppError) {
 	user, err := api.app.GetUser(userID)
 	if err != nil {
@@ -1263,3 +1291,10 @@
 	}
 	return fi, nil
 }
+
+/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+func (api *PluginAPI) GetFilesTotalSize() (float64, *model.AppError) {
+	totalSize, _ := api.app.GetFileTotalSize()
+	return totalSize, nil
+}
+/* Ryobi Systems CloudOffice Files Mod 20211103 END */
\ No newline at end of file
Index: post.go
===================================================================
--- post.go	(revision 4469)
+++ post.go	(revision 4470)
@@ -779,7 +779,205 @@
 
 	return true, nil
 }
+func (a *App) UpdatePostWithCachereRefresh(c *request.Context, post *model.Post, safeUpdate bool) (*model.Post, *model.AppError) {
+	post.SanitizeProps()
 
+	postLists, nErr := a.Srv().Store().Post().Get(context.Background(), post.Id, model.GetPostsOptions{}, post.UserId, a.Config().GetSanitizeOptions())
+
+	if nErr != nil {
+		var nfErr *store.ErrNotFound
+		var invErr *store.ErrInvalidInput
+		switch {
+		case errors.As(nErr, &invErr):
+			return nil, model.NewAppError("UpdatePost", "app.post.get.app_error", nil, "", http.StatusBadRequest).Wrap(nErr)
+		case errors.As(nErr, &nfErr):
+			return nil, model.NewAppError("UpdatePost", "app.post.get.app_error", nil, "", http.StatusNotFound).Wrap(nErr)
+		default:
+			return nil, model.NewAppError("UpdatePost", "app.post.get.app_error", nil, "", http.StatusInternalServerError).Wrap(nErr)
+		}
+	}
+	oldPost := postLists.Posts[post.Id]
+	anonymous, _ := oldPost.GetProp("anonymous").(bool)
+	status, _ := post.GetProp("status").(string)
+	oldDBPost := oldPost
+	if len(oldPost.Attachments()) != 0 {
+		attachment := oldPost.Attachments()[0]
+		pollFields, _ := a.Srv().Store().PollField().GetPollFields(oldPost.Id)
+		if len(pollFields) != 0 {
+			model.ParseSlackAttachment(oldPost, getReplaceAttachment(attachment, pollFields, anonymous, status))
+		}
+	}
+	var err *model.AppError
+	if oldPost == nil {
+		err = model.NewAppError("UpdatePost", "api.post.update_post.find.app_error", nil, "id="+post.Id, http.StatusBadRequest)
+		return nil, err
+	}
+
+	if oldPost.DeleteAt != 0 {
+		err = model.NewAppError("UpdatePost", "api.post.update_post.permissions_details.app_error", map[string]any{"PostId": post.Id}, "", http.StatusBadRequest)
+		return nil, err
+	}
+
+	if oldPost.IsSystemMessage() {
+		err = model.NewAppError("UpdatePost", "api.post.update_post.system_message.app_error", nil, "id="+post.Id, http.StatusBadRequest)
+		return nil, err
+	}
+
+	if *a.Config().ServiceSettings.PostEditTimeLimit != -1 && model.GetMillis() > oldPost.CreateAt+int64(*a.Config().ServiceSettings.PostEditTimeLimit*1000) && post.Message != oldPost.Message {
+		err = model.NewAppError("UpdatePost", "api.post.update_post.permissions_time_limit.app_error", map[string]any{"timeLimit": *a.Config().ServiceSettings.PostEditTimeLimit}, "", http.StatusBadRequest)
+		return nil, err
+	}
+
+	channel, err := a.GetChannel(c, oldPost.ChannelId)
+	if err != nil {
+		return nil, err
+	}
+
+	if channel.DeleteAt != 0 {
+		return nil, model.NewAppError("UpdatePost", "api.post.update_post.can_not_update_post_in_deleted.error", nil, "", http.StatusBadRequest)
+	}
+
+	newPost := oldDBPost.Clone()
+
+	if newPost.Message != post.Message {
+		newPost.Message = post.Message
+		newPost.EditAt = model.GetMillis()
+		newPost.Hashtags, _ = model.ParseHashtags(post.Message)
+	}
+
+	if !safeUpdate {
+		newPost.IsPinned = post.IsPinned
+		newPost.HasReactions = post.HasReactions
+		newPost.FileIds = post.FileIds
+		newPost.SetProps(post.GetProps())
+	}
+
+	// Avoid deep-equal checks if EditAt was already modified through message change
+	if newPost.EditAt == oldPost.EditAt && (!oldPost.FileIds.Equals(newPost.FileIds) || !oldPost.AttachmentsEqual(newPost)) {
+		newPost.EditAt = model.GetMillis()
+	}
+
+	if err = a.FillInPostProps(c, post, nil); err != nil {
+		return nil, err
+	}
+
+	if post.IsRemote() {
+		oldPost.RemoteId = model.NewString(*post.RemoteId)
+	}
+	pluginContext := pluginContext(c)
+	var rejectionReason string
+	a.ch.RunMultiHook(func(hooks plugin.Hooks) bool {
+		newPost, rejectionReason = hooks.MessageWillBeUpdated(pluginContext, newPost.ForPlugin(), oldPost.ForPlugin())
+		return post != nil
+	}, plugin.MessageWillBeUpdatedID)
+	if newPost == nil {
+		return nil, model.NewAppError("UpdatePost", "Post rejected by plugin. "+rejectionReason, nil, "", http.StatusBadRequest)
+	}
+	newDBPost := newPost.Clone()
+	pollFields, _ := a.Srv().Store().PollField().GetPollFields(post.Id)
+	if len(post.Attachments()) != 0 {
+		attachment := post.Attachments()[0]
+		if len(pollFields) != 0 {
+			model.ParseSlackAttachment(newDBPost, removeFields(attachment))
+		}
+	}
+	rpost, nErr := a.Srv().Store().Post().Update(newDBPost, oldDBPost)
+	if len(post.Attachments()) != 0 {
+		attachment := post.Attachments()[0]
+		if len(pollFields) != 0 {
+			model.ParseSlackAttachment(newPost, getReplaceAttachment(attachment, pollFields, anonymous, status))
+			model.ParseSlackAttachment(rpost, getReplaceAttachment(attachment, pollFields, anonymous, status))
+		}
+	}
+	if nErr != nil {
+		var appErr *model.AppError
+		switch {
+		case errors.As(nErr, &appErr):
+			return nil, appErr
+		default:
+			return nil, model.NewAppError("UpdatePost", "app.post.update.app_error", nil, "", http.StatusInternalServerError).Wrap(nErr)
+		}
+	}
+
+	pluginOldPost := oldPost.ForPlugin()
+	pluginNewPost := newPost.ForPlugin()
+	a.Srv().Go(func() {
+		a.ch.RunMultiHook(func(hooks plugin.Hooks) bool {
+			hooks.MessageHasBeenUpdated(pluginContext, pluginNewPost, pluginOldPost)
+			return true
+		}, plugin.MessageHasBeenUpdatedID)
+	})
+
+	rpost = a.PreparePostForClientWithEmbedsAndImages(c, rpost, false, true, true)
+
+	// Ensure IsFollowing is nil since this updated post will be broadcast to all users
+	// and we don't want to have to populate it for every single user and broadcast to each
+	// individually.
+	rpost.IsFollowing = nil
+
+	rpost, nErr = a.addPostPreviewProp(rpost)
+	if nErr != nil {
+		return nil, model.NewAppError("UpdatePost", "app.post.update.app_error", nil, "", http.StatusInternalServerError).Wrap(nErr)
+	}
+
+	message := model.NewWebSocketEvent(model.WebsocketEventPostEdited, "", rpost.ChannelId, "", nil, "")
+	postJSON, jsonErr := rpost.ToJSON()
+	if jsonErr != nil {
+		return nil, model.NewAppError("UpdatePost", "app.post.marshal.app_error", nil, "", http.StatusInternalServerError).Wrap(jsonErr)
+	}
+	message.Add("post", postJSON)
+
+	published, err := a.publishWebsocketEventForPermalinkPost(c, rpost, message)
+	if err != nil {
+		return nil, err
+	}
+	if !published {
+		a.Publish(message)
+	}
+
+	a.invalidateCacheForChannelPosts(rpost.ChannelId)
+
+	return rpost, nil
+}
+
+func removeFields(attachment *model.SlackAttachment) []*model.SlackAttachment {
+	return []*model.SlackAttachment{{
+		AuthorName: attachment.AuthorName,
+		Title:      attachment.Title,
+		Text:       attachment.Text,
+		Actions:    attachment.Actions,
+		Fields:     nil,
+	}}
+}
+func getReplaceAttachment(attachment *model.SlackAttachment, fields []*model.PollFields, anonymous bool, status string) []*model.SlackAttachment {
+	pollFields := []*model.SlackAttachmentField{}
+	for _, field := range fields {
+		value := field.Voter
+		webValue := field.Voter
+		if status != "end" {
+			webValue = ""
+			value = ""
+		}
+		if anonymous {
+			webValue = ""
+			value = ""
+		}
+		pollFields = append(pollFields, &model.SlackAttachmentField{
+			Short:    true,
+			Title:    field.Answer,
+			Value:    value,
+			WebValue: webValue,
+		})
+	}
+	return []*model.SlackAttachment{{
+		AuthorName: attachment.AuthorName,
+		Title:      attachment.Title,
+		Text:       attachment.Text,
+		Actions:    attachment.Actions,
+		Fields:     pollFields,
+	}}
+}
+
 func (a *App) PatchPost(c *request.Context, postID string, patch *model.PostPatch) (*model.Post, *model.AppError) {
 	post, err := a.GetSinglePost(postID, false)
 	if err != nil {
Index: server.go
===================================================================
--- server.go	(revision 4469)
+++ server.go	(revision 4470)
@@ -393,6 +393,20 @@
 		s.EmailService.InitEmailBatching()
 	})
 
+	/* Ryobi Systems CloudOffice Update Service-version Mod 20230224 start */
+	mlog.Info("System built-in version:" + model.CurrentVersion)
+	pluginOpenStatus := s.Config().PluginSettings.PluginStates["extrasrvversionsettingplugin"]
+	if pluginOpenStatus != nil && pluginOpenStatus.Enable {
+		if versionPluginData, ok := s.Config().PluginSettings.Plugins["extrasrvversionsettingplugin"]; ok {
+			if versionFromPlugin, isOk := versionPluginData["extrasrvversion"]; isOk {
+				if versionFromPlugin.(string) != "" {
+					model.CurrentVersion = versionFromPlugin.(string)
+				}
+			}
+		}
+	}
+	/* Ryobi Systems CloudOffice Update Service-version Mod 20230224 end */
+
 	logCurrentVersion := fmt.Sprintf("Current version is %v (%v/%v/%v/%v)", model.CurrentVersion, model.BuildNumber, model.BuildDate, model.BuildHash, model.BuildHashEnterprise)
 	mlog.Info(
 		logCurrentVersion,
Index: session.go
===================================================================
--- session.go	(revision 4469)
+++ session.go	(revision 4470)
@@ -19,7 +19,34 @@
 )
 
 func (a *App) CreateSession(session *model.Session) (*model.Session, *model.AppError) {
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+	var sessionDefault model.Session
+	sessionDefault = *session
+	sessiondefault := &sessionDefault
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
 	session, err := a.ch.srv.platform.CreateSession(session)
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+	if len(session.TeamMembers) == 0 {
+
+		sessiondefault.Token = ""
+		sessiondefault, err = a.Srv().Store().Session().Save(sessiondefault)
+
+		if err != nil {
+
+			var invErr *store.ErrInvalidInput
+			switch {
+			case errors.As(err, &invErr):
+				return nil, model.NewAppError("CreateSession", "app.session.save.existing.app_error", nil, invErr.Error(), http.StatusBadRequest)
+			default:
+				return nil, model.NewAppError("CreateSession", "app.session.save.app_error", nil, err.Error(), http.StatusInternalServerError)
+			}
+		}
+
+		a.AddSessionToCache(sessiondefault)
+
+		return sessiondefault, nil
+	}
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
 	if err != nil {
 		var invErr *store.ErrInvalidInput
 		switch {
@@ -148,6 +175,23 @@
 	return nil
 }
 
+/**
+Revoke Sessions By userID SessionState
+*/
+func (a *App) RevokeUserSession(userID string, sessionState string) *model.AppError {
+	if err := a.ch.srv.platform.RevokeSessionsBySid(userID, sessionState); err != nil {
+		switch {
+		case errors.Is(err, users.GetSessionError):
+			return model.NewAppError("RevokeUserSession", "app.session.get_sessions.app_error", nil, err.Error(), http.StatusInternalServerError)
+		case errors.Is(err, users.DeleteSessionError):
+			return model.NewAppError("RevokeUserSession", "app.session.remove.app_error", nil, err.Error(), http.StatusInternalServerError)
+		default:
+			return model.NewAppError("RevokeUserSession", "app.session.remove.app_error", nil, err.Error(), http.StatusInternalServerError)
+		}
+	}
+	return nil
+}
+
 func (a *App) AddSessionToCache(session *model.Session) {
 	a.ch.srv.platform.AddSessionToCache(session)
 }
Index: status.go
===================================================================
--- status.go	(revision 4469)
+++ status.go	(revision 4470)
@@ -12,11 +12,42 @@
 	"github.com/mattermost/mattermost-server/v6/shared/mlog"
 )
 
+func (a *App) GetUserWebMeetingStatus(userId string) (*model.Status, error) {
+	var status *model.Status
+	if err := a.Srv().Platform().StatusCache().Get(userId, &status); err == nil {
+		return status, err
+	}
+	status, error := a.Srv().Store().Status().Get(userId)
+
+	return status, error
+}
+
 // GetUserStatusesByIds used by apiV4
 func (a *App) GetUserStatusesByIds(userIDs []string) ([]*model.Status, *model.AppError) {
 	return a.Srv().Platform().GetUserStatusesByIds(userIDs)
 }
 
+func (a *App) SetStatusMeetingIfNeeded(userId string, manual bool) {
+	if !*a.Config().ServiceSettings.EnableUserStatuses {
+		return
+	}
+
+	status, err := a.GetStatus(userId)
+
+	if err != nil {
+		status = &model.Status{UserId: userId, Status: model.STATUS_MEETING, Manual: manual, LastActivityAt: 0, ActiveChannel: ""}
+	}
+	if status.Manual == false && manual == false {
+		status.PrevStatus = status.Status
+	}
+
+	status.Status = model.STATUS_MEETING
+	status.Manual = manual
+	status.ActiveChannel = ""
+
+	a.Srv().Platform().SaveAndBroadcastStatus(status)
+}
+
 // SetStatusLastActivityAt sets the last activity at for a user on the local app server and updates
 // status to away if needed. Used by the WS to set status to away if an 'online' device disconnects
 // while an 'away' device is still connected
Index: team.go
===================================================================
--- team.go	(revision 4469)
+++ team.go	(revision 4470)
@@ -325,7 +325,9 @@
 
 	// Force a regeneration of the invite token if changing a team to restricted.
 	if (allowOpenInvite != oldTeam.AllowOpenInvite || teamType != oldTeam.Type) && (!allowOpenInvite || teamType == model.TeamInvite) {
-		oldTeam.InviteId = model.NewId()
+		if !*a.Config().TeamSettings.EnableMultiTenancySupport {
+			oldTeam.InviteId = model.NewId()
+		}
 	}
 
 	oldTeam.Type = teamType
@@ -385,9 +387,10 @@
 	if err != nil {
 		return nil, err
 	}
+	if !*a.Config().TeamSettings.EnableMultiTenancySupport {
+		team.InviteId = model.NewId()
+	}
 
-	team.InviteId = model.NewId()
-
 	updatedTeam, nErr := a.Srv().Store().Team().Update(team)
 	if nErr != nil {
 		var invErr *store.ErrInvalidInput
@@ -1171,6 +1174,21 @@
 	return teamUnread, nil
 }
 
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+func (a *App) GetDefaultTeama(teamId string) int {
+	var DefaultTeama int
+	DefaultTeama = 0
+	DefaultTeamid, _ := a.Srv().Store().Session().SqlGetDefaultTeam()
+
+	if DefaultTeamid == teamId {
+		DefaultTeama = 1
+		return DefaultTeama
+	}
+	return DefaultTeama
+}
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
+
 func (a *App) RemoveUserFromTeam(c request.CTX, teamID string, userID string, requestorId string) *model.AppError {
 	tchan := make(chan store.StoreResult, 1)
 	go func() {
@@ -1328,9 +1346,11 @@
 func (a *App) postLeaveTeamMessage(c request.CTX, user *model.User, channel *model.Channel) *model.AppError {
 	post := &model.Post{
 		ChannelId: channel.Id,
-		Message:   fmt.Sprintf(i18n.T("api.team.leave.left"), user.Username),
-		Type:      model.PostTypeLeaveTeam,
-		UserId:    user.Id,
+		/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 START */
+		Message: fmt.Sprintf(i18n.T("api.team.leave.left"), user.GetFullName()),
+		/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 END */
+		Type:   model.PostTypeLeaveTeam,
+		UserId: user.Id,
 		Props: model.StringInterface{
 			"username": user.Username,
 		},
@@ -1346,9 +1366,10 @@
 func (a *App) postRemoveFromTeamMessage(c request.CTX, user *model.User, channel *model.Channel) *model.AppError {
 	post := &model.Post{
 		ChannelId: channel.Id,
-		Message:   fmt.Sprintf(i18n.T("api.team.remove_user_from_team.removed"), user.Username),
-		Type:      model.PostTypeRemoveFromTeam,
-		UserId:    user.Id,
+		/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 START */
+		Message: fmt.Sprintf(i18n.T("api.team.remove_user_from_team.removed"), user.GetFullName()),
+		/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 END */
+		UserId: user.Id,
 		Props: model.StringInterface{
 			"username": user.Username,
 		},
Index: teams.go
===================================================================
--- teams.go	(revision 4469)
+++ teams.go	(revision 4470)
@@ -111,7 +111,9 @@
 
 	team.Patch(patch)
 	if patch.AllowOpenInvite != nil && !*patch.AllowOpenInvite {
-		team.InviteId = model.NewId()
+		if !*ts.config().TeamSettings.EnableMultiTenancySupport {
+			team.InviteId = model.NewId()
+		}
 	}
 
 	if err = ts.checkValidDomains(team); err != nil {
Index: user.go
===================================================================
--- user.go	(revision 4469)
+++ user.go	(revision 4470)
@@ -1270,6 +1270,35 @@
 	return nil
 }
 
+/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201130 START */
+func (a *App) RevokeAllSessionsById(userId string) *model.AppError {
+	_, err := a.GetUser(userId)
+
+	if err != nil {
+		return err
+	}
+
+	if err = a.RevokeAllSessions(userId); err != nil {
+		return err
+	}
+
+	return nil
+}
+
+/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201130 END */
+// delete session by userid sessionState
+func (a *App) RevokeUserSessionById(userId string,sessionState string) *model.AppError {
+	_, err := a.GetUser(userId)
+	if err != nil {
+		return err
+	}
+	if err = a.RevokeUserSession(userId,sessionState); err != nil {
+		return err
+	}
+	return nil
+}
+
+
 func (a *App) updateUserNotifyProps(userID string, props map[string]string) *model.AppError {
 	err := a.ch.srv.userService.UpdateUserNotifyProps(userID, props)
 	if err != nil {
Index: errors.go
===================================================================
--- errors.go	(revision 4469)
+++ errors.go	(revision 4470)
@@ -11,9 +11,10 @@
 	UserCountError            = errors.New("could not get the total number of the users.")
 	UserCreationDisabledError = errors.New("user creation is not allowed")
 	UserStoreIsEmptyError     = errors.New("could not check if the user store is empty")
+	GetSessionError           = errors.New("could not get session")
+	DeleteSessionError        = errors.New("could not delete session")
+	DeleteAllAccessDataError  = errors.New("could not delete all access data")
 
-	DeleteAllAccessDataError = errors.New("could not delete all access data")
-
 	DefaultFontError   = errors.New("could not get default font")
 	UserInitialsError  = errors.New("could not get user initials")
 	ImageEncodingError = errors.New("could not encode image")
Index: import.go
===================================================================
--- import.go	(revision 4469)
+++ import.go	(revision 4470)
@@ -10,10 +10,8 @@
 
 	"github.com/spf13/cobra"
 
-	"github.com/mattermost/mattermost-server/v6/app"
 	"github.com/mattermost/mattermost-server/v6/app/request"
 	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
 )
 
 var ImportCmd = &cobra.Command{
@@ -171,16 +169,3 @@
 
 	return nil
 }
-
-func getTeamFromTeamArg(a *app.App, teamArg string) *model.Team {
-	var team *model.Team
-	team, err := a.Srv().Store().Team().GetByName(teamArg)
-
-	if err != nil {
-		var t *model.Team
-		if t, err = a.Srv().Store().Team().Get(teamArg); err == nil {
-			team = t
-		}
-	}
-	return team
-}
Index: init.go
===================================================================
--- init.go	(revision 4469)
+++ init.go	(revision 4470)
@@ -30,7 +30,9 @@
 func InitDBCommandContextCobra(command *cobra.Command, options ...app.Option) (*app.App, error) {
 	return initDBCommandContextCobra(command, true, options...)
 }
-
+func InitDBCommandContextCobraReadWrite(command *cobra.Command) (*app.App, error) {
+	return initDBCommandContextCobra(command, false)
+}
 func initDBCommandContext(configDSN string, readOnlyConfigStore bool, options ...app.Option) (*app.App, error) {
 	if err := utils.TranslationsPreInit(); err != nil {
 		return nil, err
Index: server.go
===================================================================
--- server.go	(revision 4469)
+++ server.go	(revision 4470)
@@ -93,6 +93,16 @@
 		}
 	}()
 
+	a := app.New(app.ServerConnector(server.Channels()))
+	// sinkatec 20211008 追加　start
+	go a.SubscribeRedisMeetingEnd()
+	// sinkatec 20211008 追加　end
+	// sinkatec 20210821 start
+	go a.SubscribeRedis()
+	// sinkatec 20210821 end
+	// sinkatec 20211129 追加　start
+	go a.SetCronChat()
+	// sinkatec 20211129 追加　end
 	api, err := api4.Init(server)
 	if err != nil {
 		mlog.Error(err.Error())
Index: client.go
===================================================================
--- client.go	(revision 4469)
+++ client.go	(revision 4470)
@@ -16,6 +16,7 @@
 	props := GenerateLimitedClientConfig(c, telemetryID, license)
 
 	props["EnableCustomUserStatuses"] = strconv.FormatBool(*c.TeamSettings.EnableCustomUserStatuses)
+	props["EnableMultiTenancySupport"] = strconv.FormatBool(*c.TeamSettings.EnableMultiTenancySupport)	
 	props["EnableLastActiveTime"] = strconv.FormatBool(*c.TeamSettings.EnableLastActiveTime)
 	props["EnableUserDeactivation"] = strconv.FormatBool(*c.TeamSettings.EnableUserDeactivation)
 	props["RestrictDirectMessage"] = *c.TeamSettings.RestrictDirectMessage
@@ -84,6 +85,9 @@
 
 	props["MaxNotificationsPerChannel"] = strconv.FormatInt(*c.TeamSettings.MaxNotificationsPerChannel, 10)
 	props["EnableConfirmNotificationsToChannel"] = strconv.FormatBool(*c.TeamSettings.EnableConfirmNotificationsToChannel)
+	/* Ryobi Systems CloudOffice Channel Mod 20210802 start */
+	props["EnableConfirmNotificationsToChannelUserCount"] = strconv.FormatInt(*c.TeamSettings.EnableConfirmNotificationsToChannelUserCount, 10)
+	/* Ryobi Systems CloudOffice Channel Mod 20210816 END */
 	props["TimeBetweenUserTypingUpdatesMilliseconds"] = strconv.FormatInt(*c.ServiceSettings.TimeBetweenUserTypingUpdatesMilliseconds, 10)
 	props["EnableUserTypingMessages"] = strconv.FormatBool(*c.ServiceSettings.EnableUserTypingMessages)
 	props["EnableChannelViewedMessages"] = strconv.FormatBool(*c.ServiceSettings.EnableChannelViewedMessages)
Index: store.go
===================================================================
--- store.go	(revision 4469)
+++ store.go	(revision 4470)
@@ -155,6 +155,14 @@
 	return removeEnvOverrides(cfg, s.configNoEnv, s.GetEnvironmentOverrides())
 }
 
+// ReMulTotalSize change totalSize value in config.json
+// overrides.
+func (s *Store) ReMulTotalSize(totalSize float64) {
+	s.configLock.RLock()
+	defer s.configLock.RUnlock()
+	s.config.PluginSettings.Plugins["filepermissionsettingplugin"]["uploadedtotalsize"] = totalSize
+}
+
 // SetReadOnlyFF sets whether feature flags should be written out to
 // config or treated as read-only.
 func (s *Store) SetReadOnlyFF(readOnly bool) {
Index: migrations.list
===================================================================
--- migrations.list	(revision 4469)
+++ migrations.list	(revision 4470)
@@ -202,6 +202,12 @@
 db/migrations/mysql/000100_add_draft_priority_column.up.sql
 db/migrations/mysql/000101_create_true_up_review_history.down.sql
 db/migrations/mysql/000101_create_true_up_review_history.up.sql
+db/migrations/mysql/000102_create_meetings.down.sql
+db/migrations/mysql/000102_create_meetings.up.sql
+db/migrations/mysql/000103_create_meeting_users.down.sql
+db/migrations/mysql/000103_create_meeting_users.up.sql
+db/migrations/mysql/000104_create_deleted_single_repeat_meetings.down.sql
+db/migrations/mysql/000104_create_deleted_single_repeat_meetings.up.sql
 db/migrations/postgres/000001_create_teams.down.sql
 db/migrations/postgres/000001_create_teams.up.sql
 db/migrations/postgres/000002_create_team_members.down.sql
Index: 000107_create_meeting_end_users.up.sql
===================================================================
--- 000107_create_meeting_end_users.up.sql	(revision 4469)
+++ 000107_create_meeting_end_users.up.sql	(revision 4470)
@@ -6,7 +6,7 @@
 	UserMail         varchar(255) DEFAULT NULL,
 	Owner            tinyint(1) DEFAULT NULL,
 	RemoteIp         varchar(50)  DEFAULT NULL,
-	LocalIp          varchar(25)  DEFAULT NULL,
+	LocalIp          varchar(50)  DEFAULT NULL,
 	StartTime        bigint(20) DEFAULT NULL,
 	EndTime          bigint(20) DEFAULT NULL,
 	PRIMARY KEY (`Id`),
Index: 000109_create_channel_chat_save_settings.up.sql
===================================================================
--- 000109_create_channel_chat_save_settings.up.sql	(revision 4469)
+++ 000109_create_channel_chat_save_settings.up.sql	(revision 4470)
@@ -12,6 +12,8 @@
 	FilePermission    tinyint(1) DEFAULT NULL,
 	FileTime          bigint(20) DEFAULT NULL,
 	FileUtil          varchar(26) DEFAULT NULL,
+	ShowUserSettings   tinyint(1) DEFAULT NULL,
+	ShowUserFileSettings tinyint(1) DEFAULT NULL,
 	PRIMARY KEY (`Id`),
 	KEY                 `idx_channel_chat_save_settings_cron_id` (`ChannelId`)
 ) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4
Index: en.json
===================================================================
--- en.json	(revision 4469)
+++ en.json	(revision 4470)
@@ -165,7 +165,7 @@
   },
   {
     "id": "api.admin.test_email.body",
-    "translation": "It appears your Mattermost email is setup correctly!"
+    "translation": "It appears your RS-CloudOffice email is setup correctly!"
   },
   {
     "id": "api.admin.test_email.missing_server",
@@ -177,7 +177,7 @@
   },
   {
     "id": "api.admin.test_email.subject",
-    "translation": "Mattermost - Testing Email Settings"
+    "translation": "RS-CloudOffice - Testing Email Settings"
   },
   {
     "id": "api.admin.test_s3.missing_s3_bucket",
@@ -213,7 +213,7 @@
   },
   {
     "id": "api.bot.teams_channels.add_message_mobile",
-    "translation": "Please add me to teams and channels you want me to interact in. To do this, use the browser or Mattermost Desktop App."
+    "translation": "Please add me to teams and channels you want me to interact in. To do this, use the browser."
   },
   {
     "id": "api.channel.add_guest.added",
@@ -553,7 +553,7 @@
   },
   {
     "id": "api.command.invite_people.desc",
-    "translation": "Send an email invite to your Mattermost team"
+    "translation": "Send an email invite to your RS-CloudOffice team"
   },
   {
     "id": "api.command.invite_people.email_invitations_off",
@@ -980,7 +980,7 @@
   },
   {
     "id": "api.command_logout.desc",
-    "translation": "Logout of Mattermost"
+    "translation": "Logout of RS-CloudOffice"
   },
   {
     "id": "api.command_logout.name",
@@ -1099,6 +1099,14 @@
     "translation": "online"
   },
   {
+    "id": "api.command_meeting.desc",
+    "translation": "Set your status to Web conference"
+  },
+  {
+    "id": "api.command_meeting.name",
+    "translation": "In Web conference"
+  },
+  {
     "id": "api.command_online.success",
     "translation": "You are now online"
   },
@@ -1108,7 +1116,7 @@
   },
   {
     "id": "api.command_remote.accept.help",
-    "translation": "Accept an invitation from an external Mattermost instance"
+    "translation": "Accept an invitation from an external RS-CloudOffice instance"
   },
   {
     "id": "api.command_remote.accept_invitation",
@@ -1132,7 +1140,7 @@
   },
   {
     "id": "api.command_remote.desc",
-    "translation": "Invite secure connections for communication across Mattermost instances."
+    "translation": "Invite secure connections for communication across RS-CloudOffice instances."
   },
   {
     "id": "api.command_remote.displayname.help",
@@ -1184,7 +1192,7 @@
   },
   {
     "id": "api.command_remote.invite_summary",
-    "translation": "Send the following AES 256-bit encrypted invitation to the external Mattermost System Admin along with the password. They will use the `{{.Command}}` slash command to accept the invitation.\n\n```\n{{.Invitation}}\n```\n\n**Ensure the secure connection can access your Mattermost instance via** {{.SiteURL}}"
+    "translation": "Send the following AES 256-bit encrypted invitation to the external RS-CloudOffice System Admin along with the password. They will use the `{{.Command}}` slash command to accept the invitation.\n\n```\n{{.Invitation}}\n```\n\n**Ensure the secure connection can access your RS-CloudOffice instance via** {{.SiteURL}}"
   },
   {
     "id": "api.command_remote.missing_command",
@@ -1356,7 +1364,7 @@
   },
   {
     "id": "api.command_share.desc",
-    "translation": "Shares the current channel with an external Mattermost instance."
+    "translation": "Shares the current channel with an external RS-CloudOffice instance."
   },
   {
     "id": "api.command_share.fetch_remote.error",
@@ -1380,7 +1388,7 @@
   },
   {
     "id": "api.command_share.invite_remote.help",
-    "translation": "Invites an external Mattermost instance to the current shared channel"
+    "translation": "Invites an external RS-CloudOffice instance to the current shared channel"
   },
   {
     "id": "api.command_share.missing_action",
@@ -1676,7 +1684,7 @@
   },
   {
     "id": "api.email_batching.send_batched_email_notification.button",
-    "translation": "Open Mattermost"
+    "translation": "Open RS-CloudOffice"
   },
   {
     "id": "api.email_batching.send_batched_email_notification.messageButton",
@@ -2649,7 +2657,7 @@
   },
   {
     "id": "api.server.warn_metric.bot_response.notification_success.message",
-    "translation": "Thank you for contacting Mattermost. We will follow up with you soon."
+    "translation": "Thank you for contacting RS-CloudOffice. We will follow up with you soon."
   },
   {
     "id": "api.server.warn_metric.bot_response.start_trial_failure.message",
@@ -2657,11 +2665,11 @@
   },
   {
     "id": "api.server.warn_metric.email_domain.contact_us.email_body",
-    "translation": "Mattermost contact us request. I'm interested in learning more about using Guest Accounts.\r\n"
+    "translation": "RS-CloudOffice contact us request. I'm interested in learning more about using Guest Accounts.\r\n"
   },
   {
     "id": "api.server.warn_metric.email_domain.notification_body",
-    "translation": "Projects often involve people both inside and outside of an organization. With Guest Accounts, you can bring external partners into your Mattermost system and specify who they can work with and what they can see.\r\n\r\n[Learn more about enabling Guest Accounts](https://www.mattermost.com/docs-guest-accounts/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=guest-accounts).\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
+    "translation": "Projects often involve people both inside and outside of an organization. With Guest Accounts, you can bring external partners into your RS-CloudOffice system and specify who they can work with and what they can see.\r\n\r\n[Learn more about enabling Guest Accounts](https://www.mattermost.com/docs-guest-accounts/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=guest-accounts).\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
   },
   {
     "id": "api.server.warn_metric.email_domain.notification_title",
@@ -2669,7 +2677,7 @@
   },
   {
     "id": "api.server.warn_metric.email_domain.start_trial.notification_body",
-    "translation": "Projects often involve people both inside and outside of an organization. With Guest Accounts, you can bring external partners into your Mattermost system and specify who they can work with and what they can see.\r\n\r\n[Learn more about enabling Guest Accounts](https://www.mattermost.com/docs-guest-accounts/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=guest-accounts)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
+    "translation": "Projects often involve people both inside and outside of an organization. With Guest Accounts, you can bring external partners into your RS-CloudOffice system and specify who they can work with and what they can see.\r\n\r\n[Learn more about enabling Guest Accounts](https://www.mattermost.com/docs-guest-accounts/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=guest-accounts)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
   },
   {
     "id": "api.server.warn_metric.email_domain.start_trial_notification_success.message",
@@ -2681,11 +2689,11 @@
   },
   {
     "id": "api.server.warn_metric.mfa.contact_us.email_body",
-    "translation": "Mattermost contact us request. I'm interested in learning more about enforcing Multi-Factor Authentication.\r\n"
+    "translation": "RS-CloudOffice contact us request. I'm interested in learning more about enforcing Multi-Factor Authentication.\r\n"
   },
   {
     "id": "api.server.warn_metric.mfa.notification_body",
-    "translation": "Your Mattermost system has multi-factor authentication enabled, giving users the choice to secure their accounts with additional means of authentication beyond a password. To improve security across the system you can require all Mattermost accounts to use multi-factor authentication.\r\n\r\n[Learn more about enforcing Multi-Factor Authentication](https://www.mattermost.com/docs-multi-factor-authentication/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=multi-factor-authentication). \r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
+    "translation": "Your RS-CloudOffice system has multi-factor authentication enabled, giving users the choice to secure their accounts with additional means of authentication beyond a password. To improve security across the system you can require all RS-CloudOffice accounts to use multi-factor authentication.\r\n\r\n[Learn more about enforcing Multi-Factor Authentication](https://www.mattermost.com/docs-multi-factor-authentication/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=multi-factor-authentication). \r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
   },
   {
     "id": "api.server.warn_metric.mfa.notification_title",
@@ -2693,7 +2701,7 @@
   },
   {
     "id": "api.server.warn_metric.mfa.start_trial.notification_body",
-    "translation": "Your Mattermost system has multi-factor authentication enabled, giving users the choice to secure their accounts with additional means of authentication beyond a password. To improve security across the system you can require all Mattermost accounts to use multi-factor authentication.\r\n\r\n[Learn more about enforcing Multi-Factor Authentication](https://www.mattermost.com/docs-multi-factor-authentication/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=multi-factor-authentication)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
+    "translation": "Your RS-CloudOffice system has multi-factor authentication enabled, giving users the choice to secure their accounts with additional means of authentication beyond a password. To improve security across the system you can require all RS-CloudOffice accounts to use multi-factor authentication.\r\n\r\n[Learn more about enforcing Multi-Factor Authentication](https://www.mattermost.com/docs-multi-factor-authentication/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=multi-factor-authentication)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
   },
   {
     "id": "api.server.warn_metric.mfa.start_trial_notification_success.message",
@@ -2701,19 +2709,19 @@
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_100.contact_us.email_body",
-    "translation": "Mattermost contact us request. My team now has 100 users, and I'm considering Mattermost Enterprise Edition.\r\n"
+    "translation": "RS-CloudOffice contact us request. My team now has 100 users, and I'm considering Mattermost Enterprise Edition.\r\n"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_100.notification_body",
-    "translation": "Your Mattermost system has over 100 users. As your user base grows, provisioning new accounts can become time-consuming. We recommend that you integrate your organization’s Active Directory/LDAP, which will allow anyone with an account to access Mattermost.\r\n\r\n[Learn more about integrating with AD/LDAP](https://www.mattermost.com/docs-adldap/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=adldap)\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
+    "translation": "Your RS-CloudOffice system has over 100 users. As your user base grows, provisioning new accounts can become time-consuming. We recommend that you integrate your organization’s Active Directory/LDAP, which will allow anyone with an account to access RS-CloudOffice.\r\n\r\n[Learn more about integrating with AD/LDAP](https://www.mattermost.com/docs-adldap/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=adldap)\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_100.notification_title",
-    "translation": "Scaling with Mattermost"
+    "translation": "Scaling with RS-CloudOffice"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_100.start_trial.notification_body",
-    "translation": "Your Mattermost system has over 100 users. As your user base grows, provisioning new accounts can become time-consuming. We recommend that you integrate your organization’s Active Directory/LDAP, which will allow anyone with an account to access Mattermost.\r\n\r\n[Learn more about integrating with AD/LDAP](https://www.mattermost.com/docs-adldap/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=adldap)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
+    "translation": "Your RS-CloudOffice system has over 100 users. As your user base grows, provisioning new accounts can become time-consuming. We recommend that you integrate your organization’s Active Directory/LDAP, which will allow anyone with an account to access RS-CloudOffice.\r\n\r\n[Learn more about integrating with AD/LDAP](https://www.mattermost.com/docs-adldap/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=adldap)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_100.start_trial.notification_success.message",
@@ -2721,19 +2729,19 @@
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_200.contact_us.email_body",
-    "translation": "Mattermost contact us request. My team now has 200 users, and I'm considering Mattermost Enterprise Edition.\r\n"
+    "translation": "RS-CloudOffice contact us request. My team now has 200 users, and I'm considering Mattermost Enterprise Edition.\r\n"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_200.notification_body",
-    "translation": "Your Mattermost system now has 200 users. When you connect Mattermost with your organization's single sign-on provider, users can access Mattermost without having to re-enter their credentials. We recommend you integrate your SAML 2.0 provider with your Mattermost server.[Learn more about integrating with SAML 2.0](https://www.mattermost.com/docs-saml/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=saml).\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
+    "translation": "Your RS-CloudOffice system now has 200 users. When you connect RS-CloudOffice with your organization's single sign-on provider, users can access RS-CloudOffice without having to re-enter their credentials. We recommend you integrate your SAML 2.0 provider with your RS-CloudOffice server.[Learn more about integrating with SAML 2.0](https://www.mattermost.com/docs-saml/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=saml).\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_200.notification_title",
-    "translation": "Scaling with Mattermost"
+    "translation": "Scaling with RS-CloudOffice"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_200.start_trial.notification_body",
-    "translation": "Your Mattermost system now has 200 users. When you connect Mattermost with your organization's single sign-on provider, users can access Mattermost without having to re-enter their credentials. We recommend you integrate your SAML 2.0 provider with your Mattermost server.[Learn more about integrating with SAML 2.0](https://www.mattermost.com/docs-saml/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=saml)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
+    "translation": "Your RS-CloudOffice system now has 200 users. When you connect RS-CloudOffice with your organization's single sign-on provider, users can access RS-CloudOffice without having to re-enter their credentials. We recommend you integrate your SAML 2.0 provider with your RS-CloudOffice server.[Learn more about integrating with SAML 2.0](https://www.mattermost.com/docs-saml/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=saml)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_200.start_trial.notification_success.message",
@@ -2741,15 +2749,15 @@
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_300.contact_us.email_body",
-    "translation": "Mattermost contact us request. I'm interested in learning more about creating read-only Announcement Channels.\r\n"
+    "translation": "RS-CloudOffice contact us request. I'm interested in learning more about creating read-only Announcement Channels.\r\n"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_300.notification_body",
-    "translation": "With so much conversation happening across Mattermost, it can be challenging to know where to look for important information. If you want to broadcast a message to a large audience, you can set up read-only Announcement Channels where anyone can join but only channel admins can post messages.\r\n\r\n[Learn more about creating read-only Announcement Channels](https://www.mattermost.com/docs-channel-moderation/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=channel-moderation)\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
+    "translation": "With so much conversation happening across RS-CloudOffice, it can be challenging to know where to look for important information. If you want to broadcast a message to a large audience, you can set up read-only Announcement Channels where anyone can join but only channel admins can post messages.\r\n\r\n[Learn more about creating read-only Announcement Channels](https://www.mattermost.com/docs-channel-moderation/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=channel-moderation)\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_300.start_trial.notification_body",
-    "translation": "With so much conversation happening across Mattermost, it can be challenging to know where to look for important information. If you want to broadcast a message to a large audience, you can set up read-only Announcement Channels where anyone can join but only channel admins can post messages.\r\n\r\n[Learn more about creating read-only Announcement Channels](https://www.mattermost.com/docs-channel-moderation/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=channel-moderation)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
+    "translation": "With so much conversation happening across RS-CloudOffice, it can be challenging to know where to look for important information. If you want to broadcast a message to a large audience, you can set up read-only Announcement Channels where anyone can join but only channel admins can post messages.\r\n\r\n[Learn more about creating read-only Announcement Channels](https://www.mattermost.com/docs-channel-moderation/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=channel-moderation)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_300.start_trial.notification_success.message",
@@ -2761,19 +2769,19 @@
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_500.contact_us.email_body",
-    "translation": "Mattermost contact us request. My team now has 500 users, and I'm considering Mattermost Enterprise Edition.\r\n"
+    "translation": "RS-CloudOffice contact us request. My team now has 500 users, and I'm considering Mattermost Enterprise Edition.\r\n"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_500.notification_body",
-    "translation": "Mattermost strongly recommends that deployments of over 500 users take advantage of features such as user management, server clustering and performance monitoring. Contact us to learn more and let us know how we can help.\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
+    "translation": "RS-CloudOffice strongly recommends that deployments of over 500 users take advantage of features such as user management, server clustering and performance monitoring. Contact us to learn more and let us know how we can help.\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_500.notification_title",
-    "translation": "Scaling with Mattermost"
+    "translation": "Scaling with RS-CloudOffice"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_500.start_trial.notification_body",
-    "translation": "Mattermost strongly recommends that deployments of over 500 users take advantage of features such as user management, server clustering and performance monitoring. Contact us to learn more and let us know how we can help.\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
+    "translation": "RS-CloudOffice strongly recommends that deployments of over 500 users take advantage of features such as user management, server clustering and performance monitoring. Contact us to learn more and let us know how we can help.\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_500.start_trial.notification_success.message",
@@ -2781,11 +2789,11 @@
   },
   {
     "id": "api.server.warn_metric.number_of_channels_50.contact_us.email_body",
-    "translation": "Mattermost contact us request. I'm interested in learning more about using Advanced Permissions with System Schemes.\r\n"
+    "translation": "RS-CloudOffice contact us request. I'm interested in learning more about using Advanced Permissions with System Schemes.\r\n"
   },
   {
     "id": "api.server.warn_metric.number_of_channels_50.notification_body",
-    "translation": "Channels help improve communication, but with users across Mattermost joining and creating channels, the challenge of keeping the system organized increases. Advanced Permissions enable you to set which users or roles can perform certain actions, including managing channel settings and members, using @channel or @here to tag broad groups of users, and creating new webhooks.\r\n\r\n[Learn more about using Advanced Permissions](https://www.mattermost.com/docs-advanced-permissions/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions)\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
+    "translation": "Channels help improve communication, but with users across RS-CloudOffice joining and creating channels, the challenge of keeping the system organized increases. Advanced Permissions enable you to set which users or roles can perform certain actions, including managing channel settings and members, using @channel or @here to tag broad groups of users, and creating new webhooks.\r\n\r\n[Learn more about using Advanced Permissions](https://www.mattermost.com/docs-advanced-permissions/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions)\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
   },
   {
     "id": "api.server.warn_metric.number_of_channels_50.notification_title",
@@ -2793,7 +2801,7 @@
   },
   {
     "id": "api.server.warn_metric.number_of_channels_50.start_trial.notification_body",
-    "translation": "Channels help improve communication, but with users across Mattermost joining and creating channels, the challenge of keeping the system organized increases. Advanced Permissions enable you to set which users or roles can perform certain actions, including managing channel settings and members, using @channel or @here to tag broad groups of users, and creating new webhooks.\r\n\r\n[Learn more about using Advanced Permissions](https://www.mattermost.com/docs-advanced-permissions/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
+    "translation": "Channels help improve communication, but with users across RS-CloudOffice joining and creating channels, the challenge of keeping the system organized increases. Advanced Permissions enable you to set which users or roles can perform certain actions, including managing channel settings and members, using @channel or @here to tag broad groups of users, and creating new webhooks.\r\n\r\n[Learn more about using Advanced Permissions](https://www.mattermost.com/docs-advanced-permissions/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
   },
   {
     "id": "api.server.warn_metric.number_of_channels_50.start_trial.notification_success.message",
@@ -2801,11 +2809,11 @@
   },
   {
     "id": "api.server.warn_metric.number_of_posts_2M.contact_us.email_body",
-    "translation": "Mattermost contact us request. I'm interested in learning more about improving performance with Elasticsearch.\r\n"
+    "translation": "RS-CloudOffice contact us request. I'm interested in learning more about improving performance with Elasticsearch.\r\n"
   },
   {
     "id": "api.server.warn_metric.number_of_posts_2M.notification_body",
-    "translation": "Your Mattermost system has a large number of messages. The default Mattermost database search starts to show performance degradation at around 2.5 million posts. With over 5 million posts, Elasticsearch can help avoid significant performance issues, such as timeouts, with search and at-mentions. Contact us to learn more and let us know how we can help.\r\n\r\n[Learn more about improving performance](https://www.mattermost.com/docs-elasticsearch/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=elasticsearch)\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
+    "translation": "Your RS-CloudOffice system has a large number of messages. The default RS-CloudOffice database search starts to show performance degradation at around 2.5 million posts. With over 5 million posts, Elasticsearch can help avoid significant performance issues, such as timeouts, with search and at-mentions. Contact us to learn more and let us know how we can help.\r\n\r\n[Learn more about improving performance](https://www.mattermost.com/docs-elasticsearch/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=elasticsearch)\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
   },
   {
     "id": "api.server.warn_metric.number_of_posts_2M.notification_title",
@@ -2813,7 +2821,7 @@
   },
   {
     "id": "api.server.warn_metric.number_of_posts_2M.start_trial.notification_body",
-    "translation": "Your Mattermost system has a large number of messages. The default Mattermost database search starts to show performance degradation at around 2.5 million posts. With over 5 million posts, Elasticsearch can help avoid significant performance issues, such as timeouts, with search and at-mentions. Contact us to learn more and let us know how we can help.\r\n\r\n[Learn more about improving performance](https://www.mattermost.com/docs-elasticsearch/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=elasticsearch)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
+    "translation": "Your RS-CloudOffice system has a large number of messages. The default RS-CloudOffice database search starts to show performance degradation at around 2.5 million posts. With over 5 million posts, Elasticsearch can help avoid significant performance issues, such as timeouts, with search and at-mentions. Contact us to learn more and let us know how we can help.\r\n\r\n[Learn more about improving performance](https://www.mattermost.com/docs-elasticsearch/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=elasticsearch)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
   },
   {
     "id": "api.server.warn_metric.number_of_posts_2M.start_trial.notification_success.message",
@@ -2821,11 +2829,11 @@
   },
   {
     "id": "api.server.warn_metric.number_of_teams_5.contact_us.email_body",
-    "translation": "Mattermost contact us request. I'm interested in learning more about Advanced Permissions with Team Schemes.\r\n"
+    "translation": "RS-CloudOffice contact us request. I'm interested in learning more about Advanced Permissions with Team Schemes.\r\n"
   },
   {
     "id": "api.server.warn_metric.number_of_teams_5.notification_body",
-    "translation": "Your Mattermost system now has several teams. Many teams have their own preferred way of coordinating and collaborating, including how channels are created, who can invite new teammates, and how integrations are managed. Team Override Schemes allow you to customize user permissions within each team to meet their specific needs.\r\n\r\n[Learn more about using Advanced Permissions](https://www.mattermost.com/docs-advanced-permissions-team-override/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions-team-override).\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
+    "translation": "Your RS-CloudOffice system now has several teams. Many teams have their own preferred way of coordinating and collaborating, including how channels are created, who can invite new teammates, and how integrations are managed. Team Override Schemes allow you to customize user permissions within each team to meet their specific needs.\r\n\r\n[Learn more about using Advanced Permissions](https://www.mattermost.com/docs-advanced-permissions-team-override/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions-team-override).\r\n\r\nBy clicking Contact Us, you'll be sharing your information with Mattermost, Inc. [Learn more](https://mattermost.com/pl/default-admin-advisory)"
   },
   {
     "id": "api.server.warn_metric.number_of_teams_5.notification_title",
@@ -2833,7 +2841,7 @@
   },
   {
     "id": "api.server.warn_metric.number_of_teams_5.start_trial.notification_body",
-    "translation": "Your Mattermost system now has several teams. Many teams have their own preferred way of coordinating and collaborating, including how channels are created, who can invite new teammates, and how integrations are managed. Team Override Schemes allow you to customize user permissions within each team to meet their specific needs.\r\n\r\n[Learn more about using Advanced Permissions](https://www.mattermost.com/docs-advanced-permissions-team-override/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions-team-override)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
+    "translation": "Your RS-CloudOffice system now has several teams. Many teams have their own preferred way of coordinating and collaborating, including how channels are created, who can invite new teammates, and how integrations are managed. Team Override Schemes allow you to customize user permissions within each team to meet their specific needs.\r\n\r\n[Learn more about using Advanced Permissions](https://www.mattermost.com/docs-advanced-permissions-team-override/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions-team-override)\r\n\r\nBy clicking Start trial, I agree to the [Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](https://mattermost.com/privacy-policy/), and receiving product emails."
   },
   {
     "id": "api.server.warn_metric.number_of_teams_5.start_trial_notification_success.message",
@@ -2861,7 +2869,7 @@
   },
   {
     "id": "api.slackimport.slack_add_channels.merge",
-    "translation": "The Slack channel {{.DisplayName}} already exists as an active Mattermost channel. Both channels have been merged.\r\n"
+    "translation": "The Slack channel {{.DisplayName}} already exists as an active RS-CloudOffice channel. Both channels have been merged.\r\n"
   },
   {
     "id": "api.slackimport.slack_add_users.created",
@@ -2889,7 +2897,7 @@
   },
   {
     "id": "api.slackimport.slack_import.log",
-    "translation": "Mattermost Slack Import Log\r\n"
+    "translation": "RS-CloudOffice Slack Import Log\r\n"
   },
   {
     "id": "api.slackimport.slack_import.note1",
@@ -3229,7 +3237,7 @@
   },
   {
     "id": "api.templates.cloud_welcome_email.button",
-    "translation": "Open Mattermost"
+    "translation": "Open RS-CloudOffice"
   },
   {
     "id": "api.templates.cloud_welcome_email.download_mm_info",
@@ -3289,7 +3297,7 @@
   },
   {
     "id": "api.templates.copyright",
-    "translation": "© 2021 Mattermost, Inc. 530 Lytton Avenue, Second floor, Palo Alto, CA, 94301"
+    "translation": "© 2021 RS-CloudOffice"
   },
   {
     "id": "api.templates.deactivate_body.info",
@@ -3517,7 +3525,7 @@
   },
   {
     "id": "api.templates.email_footer_v2",
-    "translation": "© 2022 Mattermost, Inc. 530 Lytton Avenue, Second floor, Palo Alto, CA, 94301"
+    "translation": "© 2021 RS-CloudOffice"
   },
   {
     "id": "api.templates.email_info1",
@@ -3549,7 +3557,7 @@
   },
   {
     "id": "api.templates.invite_body.subTitle",
-    "translation": "Start collaborating with your team on Mattermost"
+    "translation": "Start collaborating with your team on RS-CloudOffice"
   },
   {
     "id": "api.templates.invite_body.title",
@@ -3561,7 +3569,7 @@
   },
   {
     "id": "api.templates.invite_body_footer.info",
-    "translation": "Mattermost is a flexible, open source messaging platform that enables secure team collaboration."
+    "translation": "RS-CloudOffice is a flexible, open source messaging platform that enables secure team collaboration."
   },
   {
     "id": "api.templates.invite_body_footer.learn_more",
@@ -3569,7 +3577,7 @@
   },
   {
     "id": "api.templates.invite_body_footer.title",
-    "translation": "What is Mattermost?"
+    "translation": "What is RS-CloudOffice?"
   },
   {
     "id": "api.templates.invite_body_guest.subTitle",
@@ -3817,7 +3825,7 @@
   },
   {
     "id": "api.templates.verify_body.info",
-    "translation": "This email address was used to create an account with Mattermost."
+    "translation": "This email address was used to create an account with RS-CloudOffice."
   },
   {
     "id": "api.templates.verify_body.info1",
@@ -3889,7 +3897,7 @@
   },
   {
     "id": "api.templates.welcome_body.info",
-    "translation": "This email address was used to create an account with Mattermost."
+    "translation": "This email address was used to create an account with RS-CloudOffice."
   },
   {
     "id": "api.templates.welcome_body.info1",
@@ -5853,7 +5861,7 @@
   },
   {
     "id": "app.notification.footer.infoLogin",
-    "translation": "Login to Mattermost"
+    "translation": "Login to RS-CloudOffice"
   },
   {
     "id": "app.notification.footer.title",
@@ -7673,7 +7681,7 @@
   },
   {
     "id": "ent.ldap.do_login.user_filtered.app_error",
-    "translation": "Your AD/LDAP account does not have permission to use this Mattermost server. Please ask your System Administrator to check the AD/LDAP user filter."
+    "translation": "Your AD/LDAP account does not have permission to use this RS-CloudOffice server. Please ask your System Administrator to check the AD/LDAP user filter."
   },
   {
     "id": "ent.ldap.do_login.user_not_registered.app_error",
@@ -7713,7 +7721,7 @@
   },
   {
     "id": "ent.ldap.syncronize.search_failure.app_error",
-    "translation": "Failed to search users in AD/LDAP. Test if the Mattermost server can connect to your AD/LDAP server and try again."
+    "translation": "Failed to search users in AD/LDAP. Test if the RS-CloudOffice server can connect to your AD/LDAP server and try again."
   },
   {
     "id": "ent.ldap.syncronize.search_failure_size_exceeded.app_error",
@@ -7845,7 +7853,7 @@
   },
   {
     "id": "ent.migration.migratetosaml.username_already_used_by_other_user",
-    "translation": "Username already used by another Mattermost user."
+    "translation": "Username already used by another RS-CloudOffice user."
   },
   {
     "id": "ent.saml.attribute.app_error",
@@ -8001,7 +8009,7 @@
   },
   {
     "id": "mattermost.bulletin.subject",
-    "translation": "Mattermost Security Bulletin"
+    "translation": "RS-CloudOffice Security Bulletin"
   },
   {
     "id": "mfa.activate.app_error",
@@ -9501,7 +9509,7 @@
   },
   {
     "id": "oauth.gitlab.tos.error",
-    "translation": "GitLab's Terms of Service have updated. Please go to {{.URL}} to accept them and then try logging into Mattermost again."
+    "translation": "GitLab's Terms of Service have updated. Please go to gitlab.com to accept them and then try logging into RS-CloudOffice again."
   },
   {
     "id": "plugin.api.get_users_in_channel",
@@ -9697,11 +9705,11 @@
   },
   {
     "id": "web.error.unsupported_browser.no_longer_support",
-    "translation": "This browser is no longer supported by Mattermost"
+    "translation": "This browser is no longer supported by RS-CloudOffice"
   },
   {
     "id": "web.error.unsupported_browser.no_longer_support_version",
-    "translation": "This version of your browser is no longer supported by Mattermost"
+    "translation": "This version of your browser is no longer supported by RS-CloudOffice"
   },
   {
     "id": "web.error.unsupported_browser.open_system_browser.edge",
@@ -9756,6 +9764,762 @@
     "translation": "Couldn't find the user."
   },
   {
+    "id": "api.meeting.timezone.Etc/GMT+12",
+    "translation": "(UTC-12:00) West side of the International Date Line"
+  },
+  {
+    "id": "api.meeting.timezone.Etc/GMT+11",
+    "translation": "(UTC-11:00) Coordinated Universal Time -11"
+  },
+  {
+    "id": "api.meeting.timezone.Pacific/Honolulu",
+    "translation": "(UTC-10:00) Hawaii"
+  },
+  {
+    "id": "api.meeting.timezone.Pacific/Marquesas",
+    "translation": "(UTC-09:30) Marquesas Islands"
+  },
+  {
+    "id": "api.meeting.timezone.America/Anchorage",
+    "translation": "(UTC-09:00) Alaska"
+  },
+  {
+    "id": "api.meeting.timezone.America/Santa_Isabel",
+    "translation": "(UTC-08:00) Baja California"
+  },
+  {
+    "id": "api.meeting.timezone.America/Los_Angeles",
+    "translation": "(UTC-08:00) Pacific Standard Time (US and Canada)"
+  },
+  {
+    "id": "api.meeting.timezone.America/Chihuahua",
+    "translation": "(UTC-07:00) Chihuahua, Lapas, Mazatlan"
+  },
+  {
+    "id": "api.meeting.timezone.America/Phoenix",
+    "translation": "(UTC-07:00) Arizona"
+  },
+  {
+    "id": "api.meeting.timezone.America/Denver",
+    "translation": "(UTC-07:00) Mountain Standard Time (US and Canada)"
+  },
+  {
+    "id": "api.meeting.timezone.America/Guatemala",
+    "translation": "(UTC-06:00) Central America"
+  },
+  {
+    "id": "api.meeting.timezone.America/Chicago",
+    "translation": "(UTC-06:00) Central Standard Time (US and Canada)"
+  },
+  {
+    "id": "api.meeting.timezone.America/Regina",
+    "translation": "(UTC-06:00) Saskatchewan"
+  },
+  {
+    "id": "api.meeting.timezone.America/Mexico_City",
+    "translation": "(UTC-06:00) Guadalajara, Mexico City, Monterrey"
+  },
+  {
+    "id": "api.meeting.timezone.America/Bogota",
+    "translation": "(UTC-05:00) Bogota, Lima, Quito"
+  },
+  {
+    "id": "api.meeting.timezone.America/Indiana/Indianapolis",
+    "translation": "(UTC-05:00) Eastern Indiana"
+  },
+  {
+    "id": "api.meeting.timezone.America/New_York",
+    "translation": "(UTC-05:00) Eastern Standard Time (US and Canada)"
+  },
+  {
+    "id": "api.meeting.timezone.America/Halifax",
+    "translation": "(UTC-04:00) Atlantic Standard Time (Canada)"
+  },
+  {
+    "id": "api.meeting.timezone.America/Asuncion",
+    "translation": "(UTC-04:00) Asuncion"
+  },
+  {
+    "id": "api.meeting.timezone.America/La_Paz",
+    "translation": "(UTC-04:00) Georgetown, Lapas, Manaus, San Juan"
+  },
+  {
+    "id": "api.meeting.timezone.America/Cuiaba",
+    "translation": "(UTC-04:00) Cuiabá"
+  },
+  {
+    "id": "api.meeting.timezone.America/Santiago",
+    "translation": "(UTC-04:00) Santiago"
+  },
+  {
+    "id": "api.meeting.timezone.America/St_Johns",
+    "translation": "(UTC-03:30) Newfoundland"
+  },
+  {
+    "id": "api.meeting.timezone.America/Sao_Paulo",
+    "translation": "(UTC-03:00) Brasilia"
+  },
+  {
+    "id": "api.meeting.timezone.America/Godthab",
+    "translation": "(UTC-03:00) Greenland"
+  },
+  {
+    "id": "api.meeting.timezone.America/Cayenne",
+    "translation": "(UTC-03:00) Cayenne, Fortaleza"
+  },
+  {
+    "id": "api.meeting.timezone.America/Argentina/Buenos_Aires",
+    "translation": "(UTC-03:00) Buenos Aires"
+  },
+  {
+    "id": "api.meeting.timezone.America/Montevideo",
+    "translation": "(UTC-03:00) Montevideo"
+  },
+  {
+    "id": "api.meeting.timezone.Etc/GMT+2",
+    "translation": "(UTC-02:00) Coordinated Universal Time -2"
+  },
+  {
+    "id": "api.meeting.timezone.Atlantic/Cape_Verde",
+    "translation": "(UTC-01:00) Cape Verde Islands"
+  },
+  {
+    "id": "api.meeting.timezone.Atlantic/Azores",
+    "translation": "(UTC-01:00) Azores"
+  },
+  {
+    "id": "api.meeting.timezone.Africa/Casablanca",
+    "translation": "(UTC+00:00) Casablanca"
+  },
+  {
+    "id": "api.meeting.timezone.Atlantic/Reykjavik",
+    "translation": "(UTC+00:00) Monrovia, Reykjavik"
+  },
+  {
+    "id": "api.meeting.timezone.Europe/London",
+    "translation": "(UTC+00:00) Dublin, Edinburgh, Lisbon, London"
+  },
+  {
+    "id": "api.meeting.timezone.Etc/GMT",
+    "translation": "(UTC+00:00) Coordinated Universal Time"
+  },
+  {
+    "id": "api.meeting.timezone.Europe/Berlin",
+    "translation": "(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna"
+  },
+  {
+    "id": "api.meeting.timezone.Europe/Paris",
+    "translation": "(UTC+01:00) Brussels, Copenhagen, Madrid, Paris"
+  },
+  {
+    "id": "api.meeting.timezone.Africa/Lagos",
+    "translation": "(UTC+01:00) West Central Africa"
+  },
+  {
+    "id": "api.meeting.timezone.Europe/Budapest",
+    "translation": "(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague"
+  },
+  {
+    "id": "api.meeting.timezone.Europe/Warsaw",
+    "translation": "(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb"
+  },
+  {
+    "id": "api.meeting.timezone.Africa/Windhoek",
+    "translation": "(UTC+01:00) Windhoek"
+  },
+  {
+    "id": "api.meeting.timezone.Europe/Istanbul",
+    "translation": "(UTC+02:00) Athens, Bucharest, Istanbul"
+  },
+  {
+    "id": "api.meeting.timezone.Europe/Kiev",
+    "translation": "(UTC+02:00) Helsinki, Kiev, Riga, Sophia, Tallinn, Vilnius"
+  },
+  {
+    "id": "api.meeting.timezone.Africa/Cairo",
+    "translation": "(UTC+02:00) Cairo"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Damascus",
+    "translation": "(UTC+02:00) Damascus"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Amman",
+    "translation": "(UTC+02:00) Amman"
+  },
+  {
+    "id": "api.meeting.timezone.Africa/Johannesburg",
+    "translation": "(UTC+02:00) Harare, Pretoria"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Jerusalem",
+    "translation": "(UTC+02:00) Jerusalem"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Beirut",
+    "translation": "(UTC+02:00) Beirut"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Baghdad",
+    "translation": "(UTC+03:00) Baghdad"
+  },
+  {
+    "id": "api.meeting.timezone.Europe/Minsk",
+    "translation": "(UTC+03:00) Minsk"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Riyadh",
+    "translation": "(UTC+03:00) Kuwait, Riyadh"
+  },
+  {
+    "id": "api.meeting.timezone.Africa/Nairobi",
+    "translation": "(UTC+03:00) Nairobi"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Tehran",
+    "translation": "(UTC+03:30) Tehran"
+  },
+  {
+    "id": "api.meeting.timezone.Europe/Moscow",
+    "translation": "(UTC+04:00) Moscow, St. Petersburg, Volgograd"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Tbilisi",
+    "translation": "(UTC+04:00) Tbilisi"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Yerevan",
+    "translation": "(UTC+04:00) Yerevan"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Dubai",
+    "translation": "(UTC+04:00) Abu Dhabi, Muscat"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Baku",
+    "translation": "(UTC+04:00) Baku"
+  },
+  {
+    "id": "api.meeting.timezone.Indian/Mauritius",
+    "translation": "(UTC+04:00) Port Louis"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Kabul",
+    "translation": "(UTC+04:30) Kabul"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Tashkent",
+    "translation": "(UTC+05:00) Tashkent"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Karachi",
+    "translation": "(UTC+05:00) Islamabad, Karachi"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Colombo",
+    "translation": "(UTC+05:30) Sri Jayawardenepura Kotte"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Kolkata",
+    "translation": "(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Kathmandu",
+    "translation": "(UTC+05:45) Kathmandu"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Almaty",
+    "translation": "(UTC+06:00) Astana"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Dhaka",
+    "translation": "(UTC+06:00) Dhaka"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Yekaterinburg",
+    "translation": "(UTC+06:00) Yekaterinburg"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Yangon",
+    "translation": "(UTC+06:30) Yangon"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Bangkok",
+    "translation": "(UTC+07:00) Bangkok, Hanoi, Jakarta"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Novosibirsk",
+    "translation": "(UTC+07:00) Novosibirsk"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Krasnoyarsk",
+    "translation": "(UTC+08:00) Krasnoyarsk"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Ulaanbaatar",
+    "translation": "(UTC+08:00) Ulaanbaatar"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Shanghai",
+    "translation": "(UTC+08:00) Beijing, Chongqing, HongKong, Urumqi"
+  },
+  {
+    "id": "api.meeting.timezone.Australia/Perth",
+    "translation": "(UTC+08:00) Perth"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Singapore",
+    "translation": "(UTC+08:00) Kuala Lumpur, Singapore"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Taipei",
+    "translation": "(UTC+08:00) Taipei"
+  },
+  {
+    "id": "api.meeting.timezone.Australia/Eucla",
+    "translation": "(UTC+08:45) Western Australia (Eucla)"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Irkutsk",
+    "translation": "(UTC+09:00) Irkutsk"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Seoul",
+    "translation": "(UTC+09:00) Seoul"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Tokyo",
+    "translation": "(UTC+09:00) Osaka, Sapporo, Tokyo"
+  },
+  {
+    "id": "api.meeting.timezone.Australia/Darwin",
+    "translation": "(UTC+09:30) Darwin"
+  },
+  {
+    "id": "api.meeting.timezone.Australia/Adelaide",
+    "translation": "(UTC+09:30) Adelaide"
+  },
+  {
+    "id": "api.meeting.timezone.Australia/Hobart",
+    "translation": "(UTC+10:00) Hobart"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Yakutsk",
+    "translation": "(UTC+10:00) Yakutsk"
+  },
+  {
+    "id": "api.meeting.timezone.Australia/Brisbane",
+    "translation": "(UTC+10:00) Brisbane"
+  },
+  {
+    "id": "api.meeting.timezone.Pacific/Port_Moresby",
+    "translation": "(UTC+10:00) Guam, Port Moresby"
+  },
+  {
+    "id": "api.meeting.timezone.Australia/Sydney",
+    "translation": "(UTC+10:00) Canberra, Melbourne, Sydney"
+  },
+  {
+    "id": "api.meeting.timezone.Australia/LHI",
+    "translation": "(UTC+10:30) Lord Howe Island"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Vladivostok",
+    "translation": "(UTC+11:00) Vladivostok"
+  },
+  {
+    "id": "api.meeting.timezone.Pacific/Guadalcanal",
+    "translation": "(UTC+11:00) Solomon Islands, New Caledonia"
+  },
+  {
+    "id": "api.meeting.timezone.Etc/GMT-12",
+    "translation": "(UTC+12:00) Coordinated Universal Time +12"
+  },
+  {
+    "id": "api.meeting.timezone.Pacific/Fiji",
+    "translation": "(UTC+12:00) Fiji, Marshall Islands"
+  },
+  {
+    "id": "api.meeting.timezone.Asia/Magadan",
+    "translation": "(UTC+12:00) Magadan"
+  },
+  {
+    "id": "api.meeting.timezone.Pacific/Auckland",
+    "translation": "(UTC+12:00) Auckland, Wellington"
+  },
+  {
+    "id": "api.meeting.timezone.Pacific/Chatham",
+    "translation": "(UTC+12:45) Chatham Islands"
+  },
+  {
+    "id": "api.meeting.timezone.Pacific/Tongatapu",
+    "translation": "(UTC+13:00) Nuku'alofa"
+  },
+  {
+    "id": "api.meeting.timezone.Pacific/Apia",
+    "translation": "(UTC+13:00) Samoa"
+  },
+  {
+    "id": "api.meeting.timezone.Pacific/Kiritimati",
+    "translation": "(UTC+14:00) Line Islands"
+  },
+  {
+    "id": "api.meeting.server_opt.app_error",
+    "translation": "Internal server error, please contact administrator."
+  },
+  {
+      "id": "api.meeting.meeting_not_exist.app_error",
+      "translation": "Meeting information does not exist."
+  },
+  {
+    "id": "api.meeting.mail_send.app_error",
+    "translation": "Failed to send the following email address. {{ .FailedMailAddrs }}. please contact administrator."
+  },
+  {
+    "id": "api.meeting.mail_format.app_error",
+    "translation": "Please check the email address. Please use ';' as a delimiter for email addresses."
+  },
+  {
+    "id": "api.meeting.meeting_duplicated.app_error",
+    "translation": "Cannot make a reservation because there is a meeting with the same name and participants. please confirm."
+  },
+  {
+    "id": "api.meeting.mail.terminate_template",
+    "translation": "{{ .UserName }} canceled the meeting.<br/><br/>{{ .RepeatMeetingInfo }}{{ .StartAtYear }}/{{ .StartAtMonth }}/{{ .StartAtDay }} {{ .StartAtHour }}:{{ .StartAtMinute }} - {{ .EndAtYear }}/{{ .EndAtMonth }}/{{ .EndAtDay }} {{ .EndAtHour }}:{{ .EndAtMinute }}<br/>{{ .TimeZone }}"
+  },
+  {
+    "id": "api.meeting.mail.change_template",
+    "translation": "{{ .UserName }} changed the scheduled meeting. Please participate in the meeting from here.<br/><br/>{{ .RepeatMeetingInfo }}{{ .StartAtYear }}/{{ .StartAtMonth }}/{{ .StartAtDay }} {{ .StartAtHour }}:{{ .StartAtMinute }} - {{ .EndAtYear }}/{{ .EndAtMonth }}/{{ .EndAtDay }} {{ .EndAtHour }}:{{ .EndAtMinute }}<br/>{{ .TimeZone }}<br/><br/>Join the meeting<br/>&lt;{{ .MeetingUrl }}&gt;<br/>Click the attachment to add the meeting to the calendar"
+  },
+  {
+    "id": "api.meeting.mail.invite_template",
+    "translation": "{{ .UserName }} invites you to a scheduled meeting.<br/><br/>{{ .RepeatMeetingInfo }}{{ .StartAtYear }}/{{ .StartAtMonth }}/{{ .StartAtDay }} {{ .StartAtHour }}:{{ .StartAtMinute }} - {{ .EndAtYear }}/{{ .EndAtMonth }}/{{ .EndAtDay }} {{ .EndAtHour }}:{{ .EndAtMinute }}<br/>{{ .TimeZone }}<br/><br/>Join the meeting<br/>&lt;{{ .MeetingUrl }}&gt;<br/>Click the attachment to add the meeting to the calendar"
+  },
+  {
+    "id": "api.meeting.mail.terminate_template_host",
+    "translation": "You ({{ .UserName }}) canceled the meeting.<br/><br/>{{ .RepeatMeetingInfo }}{{ .StartAtYear }}/{{ .StartAtMonth }}/{{ .StartAtDay }} {{ .StartAtHour }}:{{ .StartAtMinute }} - {{ .EndAtYear }}/{{ .EndAtMonth }}/{{ .EndAtDay }} {{ .EndAtHour }}:{{ .EndAtMinute }}<br/>{{ .TimeZone }}"
+  },
+  {
+    "id": "api.meeting.mail.change_template_host",
+    "translation": "You ({{ .UserName }}) changed the scheduled meeting. Please start meeting from here.<br/><br/>{{ .RepeatMeetingInfo }}{{ .StartAtYear }}/{{ .StartAtMonth }}/{{ .StartAtDay }} {{ .StartAtHour }}:{{ .StartAtMinute }} - {{ .EndAtYear }}/{{ .EndAtMonth }}/{{ .EndAtDay }} {{ .EndAtHour }}:{{ .EndAtMinute }}<br/>{{ .TimeZone }}<br/><br/>Start the meeting<br/>&lt;{{ .MeetingUrl }}&gt;<br/>Click the attachment to add the meeting to the calendar"
+  },
+  {
+    "id": "api.meeting.mail.invite_template_host",
+    "translation": "You ({{ .UserName }}) are the host of this meeting.<br/>Please start meeting from here.<br/><br/>{{ .RepeatMeetingInfo }}{{ .StartAtYear }}/{{ .StartAtMonth }}/{{ .StartAtDay }} {{ .StartAtHour }}:{{ .StartAtMinute }} - {{ .EndAtYear }}/{{ .EndAtMonth }}/{{ .EndAtDay }} {{ .EndAtHour }}:{{ .EndAtMinute }}<br/>{{ .TimeZone }}<br/><br/>Start the meeting<br/>&lt;{{ .MeetingUrl }}&gt;<br/>Click the attachment to add the meeting to the calendar"
+  },
+  {
+    "id": "api.meeting.mail.ics.filename",
+    "translation": "Meeting_info"
+  },
+  {
+    "id": "api.meeting.mail.terminate_title_prefix",
+    "translation": "[RS-CloudOffice Meeting Cancel Notice] "
+  },
+  {
+    "id": "api.meeting.mail.change_title_prefix",
+    "translation": "[RS-CloudOffice Meeting Change Notice] "
+  },
+  {
+    "id": "api.meeting.mail.invite_title_prefix",
+    "translation": "[RS-CloudOffice Meeting Invitation Notice] "
+  },
+  {
+    "id": "api.meeting.mail.invite_title_prefix_host",
+    "translation": "[RS-CloudOffice Meeting Hold Notice] "
+  },
+  {
+    "id": "api.meeting.Mon",
+    "translation": "Monday"
+  },
+  {
+    "id": "api.meeting.Tues",
+    "translation": "Tuesday"
+  },
+  {
+    "id": "api.meeting.Wed",
+    "translation": "Wednesday"
+  },
+  {
+    "id": "api.meeting.Thur",
+    "translation": "Thursday"
+  },
+  {
+    "id": "api.meeting.Fri",
+    "translation": "Friday"
+  },
+  {
+    "id": "api.meeting.Sat",
+    "translation": "Saturday"
+  },
+  {
+    "id": "api.meeting.Sun",
+    "translation": "Sunday"
+  },
+  {
+    "id": "api.meeting.comma",
+    "translation": ", "
+  },
+  {
+    "id": "api.meeting.day",
+    "translation": "day{{ .Day }}"
+  },
+  {
+    "id": "api.meeting.first",
+    "translation": "the first "
+  },
+  {
+    "id": "api.meeting.second",
+    "translation": "the second "
+  },
+  {
+    "id": "api.meeting.third",
+    "translation": "the third "
+  },
+  {
+    "id": "api.meeting.fourth",
+    "translation": "the fourth "
+  },
+  {
+    "id": "api.meeting.last",
+    "translation": "the last "
+  },
+  {
+    "id": "api.meeting.mail.repeat_end_type.none",
+    "translation": "effective from {{ .RepeatStartAtYear }}/{{ .RepeatStartAtMonth }}/{{ .RepeatStartAtDay }}"
+  },
+  {
+    "id": "api.meeting.mail.repeat_end_type.date",
+    "translation": "effective from {{ .RepeatStartAtYear }}/{{ .RepeatStartAtMonth }}/{{ .RepeatStartAtDay }} until {{ .RepeatEndAtYear }}/{{ .RepeatEndAtMonth }}/{{ .RepeatEndAtDay }}"
+  },
+  {
+    "id": "api.meeting.mail.repeat_end_type.times",
+    "translation": "effective from {{ .RepeatStartAtYear }}/{{ .RepeatStartAtMonth }}/{{ .RepeatStartAtDay }} Times:{{ .RepeatTimes }} time(s)"
+  },
+  {
+    "id": "api.meeting.mail.repeat_type.everyday",
+    "translation": "Recurrence: every weekday "
+  },
+  {
+    "id": "api.meeting.mail.repeat_type.day",
+    "translation": "Recurrence: every {{ .RepeatDay }} day(s) "
+  },
+  {
+    "id": "api.meeting.mail.repeat_type.week",
+    "translation": "Recurrence: every {{ .RepeatWeek }} week(s) on {{ .RepeatWeekDays }} "
+  },
+  {
+    "id": "api.meeting.mail.repeat_type.month_day",
+    "translation": "Recurrence: {{ .RepeatDays }} of every {{ .RepeatMonth }} month(s) "
+  },
+  {
+    "id": "api.meeting.mail.repeat_type.month_week",
+    "translation": "Recurrence: {{ .RepeatWeekDay }} of every {{ .RepeatMonth }} month(s) "
+  },
+  {
+    "id": "api.meeting.mail.repeat_type.year_day",
+    "translation": "Recurrence: {{ .RepeatDays }} of every {{ .RepeatYear }} "
+  },
+  {
+    "id": "api.meeting.mail.repeat_type.year_week",
+    "translation": "Recurrence: {{ .RepeatWeekDay }} of every {{ .RepeatYear }} "
+  },
+  {
+    "id": "app.meeting.repeat.begin",
+    "translation": "Recurrence:"
+  },
+  {
+    "id": "api.meeting.mail.repeat_day",
+    "translation": "Daily,"
+  },
+  {
+    "id": "api.meeting.mail.repeat_week",
+    "translation": "Weekly,"
+  },
+  {
+    "id": "api.meeting.mail.repeat_month",
+    "translation": "Monthly,"
+  },
+  {
+    "id": "api.meeting.mail.repeat_year",
+    "translation": "Yearly,"
+  },
+  {
+    "id": "api.file.upload_file.not_upload_permission.app_error",
+    "translation": "You do not have permission to upload files."
+  },
+  {
+    "id": "api.file.upload_file.not_download_permission.app_error",
+    "translation": "You do not have permission to download files."
+  },
+  {
+    "id": "app.meeting.repeat_start",
+    "translation": "repeat_meeting"
+  },
+  {
+    "id": "app.meeting.repeat_end",
+    "translation": "repeat_endrule"
+  },
+  {
+    "id": "app.meeting.repeat_title",
+    "translation": "(repeat)"
+  },
+  {
+    "id": "api.meeting.mail.delete_title_prefix",
+    "translation": "The reservation meeting was cancelled by the administrator."
+  },
+  {
+    "id": "api.meeting.mail.repeat_unit_day",
+    "translation": "repeat unit：day(s)"
+  },
+  {
+    "id": "api.meeting.mail.repeat_unit_week",
+    "translation": "repeat unit：week(s)"
+  },
+  {
+    "id": "api.meeting.mail.repeat_unit_month",
+    "translation": "repeat unit：month(s)"
+  },
+  {
+    "id": "api.meeting.mail.repeat_unit_year",
+    "translation": "repeat unit：year(s)"
+  },
+  {
+    "id": "api.meeting.mail.repeat_frequency_everyday",
+    "translation": "repeat frequency：every weekday"
+  },
+  {
+    "id": "api.meeting.mail.repeat_frequency_day",
+    "translation": "repeat frequency：{{ .RepeatDay }}day(s) "
+  },
+  {
+    "id": "api.meeting.mail.repeat_frequency_week",
+    "translation": "repeat frequency: {{ .RepeatWeek }}week(s)"
+  },
+  {
+    "id": "api.meeting.mail.repeat_frequency_weekdays",
+    "translation": "{{ .RepeatWeekDays }}"
+  },
+  {
+    "id": "api.meeting.mail.repeat_frequency_month_day",
+    "translation": "repeat frequency: {{ .RepeatMonth }}of every{{ .RepeatDays }} month(s)"
+  },
+  {
+    "id": "api.meeting.mail.repeat_frequency_month_week",
+    "translation": "repeat frequency: {{ .RepeatMonth }}of every{{ .RepeatWeekDay }} month(s)"
+  },
+  {
+    "id": "api.meeting.mail.repeat_frequency_year_day",
+    "translation": "repeat frequency: {{ .RepeatYear }}of every{{ .RepeatDays }} "
+  },
+  {
+    "id": "api.meeting.mail.repeat_frequency_year_week",
+    "translation": "repeat frequency: {{ .RepeatYear }}of every{{ .RepeatWeekDay }} "
+  },
+  {
+    "id": "api.meeting.mail.repeat_over_none",
+    "translation": "repeat over: {{ .RepeatStartAtYear }}/{{ .RepeatStartAtMonth }}/{{ .RepeatStartAtDay }}"
+  },
+  {
+    "id": "api.meeting.mail.repeat_over_date",
+    "translation": "repeat over: {{ .RepeatStartAtYear }}/{{ .RepeatStartAtMonth }}/{{ .RepeatStartAtDay }}-{{ .RepeatEndAtYear }}/{{ .RepeatEndAtMonth }}/{{ .RepeatEndAtDay }}"
+  },
+  {
+    "id": "api.meeting.mail.repeat_over_times",
+    "translation": "repeat over: {{ .RepeatStartAtYear }}/{{ .RepeatStartAtMonth }}/{{ .RepeatStartAtDay }} repeat times:{{ .RepeatTimes }}"
+  },
+  {
+    "id": "api.meeting.mail.startat",
+    "translation": "meeting start: {{ .StartAtYear }}/{{ .StartAtMonth }}/{{ .StartAtDay }} {{ .StartAtHour }}:{{ .StartAtMinute }}"
+  },
+  {
+    "id": "api.meeting.mail.endat",
+    "translation": "meeting end: {{ .EndAtYear }}/{{ .EndAtMonth }}/{{ .EndAtDay }} {{ .EndAtHour }}:{{ .EndAtMinute }}"
+  },
+  {
+    "id": "api.meeting.mail.nousers",
+    "translation": "No entertainers"
+  },
+  {
+    "id": "api.meeting.mail.delete_template",
+    "translation": "A reservation meeting was cancelled by the administrator.<br/><br/>Cancelled booking conference information<br/>meetingName：{{ .MeetingName }}<br/>creator：{{ .HostName }}<br/>{{ .MeetingInfo }}<br/><br/>users：{{ .Users }}"
+  },
+  {
+    "id": "api.meeting.monday",
+    "translation": "Monday"
+  },
+  {
+    "id": "api.meeting.tuesday",
+    "translation": "Tuesday"
+  },
+  {
+    "id": "api.meeting.wednesday",
+    "translation": "Wednesday"
+  },
+  {
+    "id": "api.meeting.thursday",
+    "translation": "Thursday"
+  },
+  {
+    "id": "api.meeting.friday",
+    "translation": "Friday"
+  },
+  {
+    "id": "api.meeting.saturday",
+    "translation": "Saturday"
+  },
+  {
+    "id": "api.meeting.sunday",
+    "translation": "Sunday"
+  },
+  {
+    "id": "api.meeting.sikaku",
+    "translation": "■"
+  },
+  {
+    "id": "app.meeting.redis_connect_error",
+    "translation": "Redis connect error has occurred."
+  },
+  {
+    "id": "app.meeting.redis_pass_error",
+    "translation": "Redis password error occurred."
+  },
+  {
+    "id": "api.meeting.search.app_error",
+    "translation": "Failed to acquire conference information."
+  },
+  {
+    "id": "api.meeting.server.app_error",
+    "translation": "System error occurred and contact system administrator."
+  },
+  {
+      "id": "jp.co.ryobi.webconferencingsettingup_maxnumbermeeting_error",
+      "translation": "The maximum number of network meetings set by the conference usage limit is invalid.Specify a positive integer or 0."
+  },
+  {
+      "id": "jp.co.ryobi.webconferencingsettingup_maxnumbermeetinguser_error",
+      "translation": "The maximum number of participants per web meeting set by the meeting using a number limit is improper.Specify a positive integer or 0."
+  },
+  {
+      "id": "jp.co.ryobi.webconferencingsettingup_maxnumberallmeetinguser_error",
+      "translation": "The maximum number of Web conference connections set by the conference usage limit is invalid.Specify a positive integer or 0."
+  },
+  {
+      "id": "jp.co.ryobi.webconferencingsettingup_maxnumbermeetinguser_maxnumberallmeetinguser_error",
+      "translation": "The maximum number of participants in a network meeting must be smaller than the maximum number of connections in a network meeting."
+  },
+  {
+    "id": "api.cron_chat.chat_delete_batch.startup",
+    "translation": "chat delete batch startup"
+  },
+  {
+    "id": "api.cron_chat.chat_delete_batch.start",
+    "translation": "chat delete batch start"
+  },
+  {
+    "id": "api.cron_chat.chat_delete_batch.end",
+    "translation": "chat delete end"
+  },
+  {
     "id": "worktemplate.category.product_teams",
     "translation": "Product Teams"
   },
Index: ja.json
===================================================================
--- ja.json	(revision 4469)
+++ ja.json	(revision 4470)
@@ -97,7 +97,7 @@
   },
   {
     "id": "api.admin.test_email.subject",
-    "translation": "Mattermost - 電子メール設定のテスト"
+    "translation": "RS-CloudOffice - 電子メール設定のテスト"
   },
   {
     "id": "api.admin.test_s3.missing_s3_bucket",
@@ -141,13 +141,21 @@
   },
   {
     "id": "api.channel.change_channel_privacy.private_to_public",
-    "translation": "このチャンネルは公開チャンネルに変更されたため、全てのチームメンバーが参加できるようになりました。"
+    "translation": "このチャンネルはパブリックチャンネルに変更されたため、全てのチームメンバーが参加できるようになりました。"
   },
   {
     "id": "api.channel.change_channel_privacy.public_to_private",
-    "translation": "このチャンネルは非公開チャンネルに変更されました。"
+    "translation": "このチャンネルはプライベートチャンネルに変更されました。"
   },
   {
+    "id": "api.channel.convert_channel_to_private.default_channel_error",
+    "translation": "このデフォルトチャンネルはプライベートチャンネルに変更できません。"
+  },
+  {
+    "id": "api.channel.convert_channel_to_private.private_channel_error",
+    "translation": "変更しようとしているチャンネルはすでにプライベートチャンネルです。"
+  },
+  {
     "id": "api.channel.create_channel.direct_channel.app_error",
     "translation": "ダイレクトメッセージチャンネルを作成するにはcreateDirectChannel APIを使用してください。"
   },
@@ -157,11 +165,11 @@
   },
   {
     "id": "api.channel.create_default_channels.off_topic",
-    "translation": "オフトピック"
+    "translation": "情報発信の場"
   },
   {
     "id": "api.channel.create_default_channels.town_square",
-    "translation": "タウンスクウェア"
+    "translation": "交流の場"
   },
   {
     "id": "api.channel.create_direct_channel.invalid_user.app_error",
@@ -209,7 +217,7 @@
   },
   {
     "id": "api.channel.leave.last_member.app_error",
-    "translation": "あなたが最後のメンバーです。脱退する代わりに非公開チャンネルを削除しましょう。"
+    "translation": "あなたが最後のメンバーです。脱退する代わりにプライベートチャンネルを削除しましょう。"
   },
   {
     "id": "api.channel.leave.left",
@@ -345,7 +353,7 @@
   },
   {
     "id": "api.command.invite_people.desc",
-    "translation": "あなたのMattermostチームへ招待する電子メールを送る"
+    "translation": "あなたのRS-CloudOfficeチームへ招待する電子メールを送る"
   },
   {
     "id": "api.command.invite_people.email_invitations_off",
@@ -683,7 +691,7 @@
   },
   {
     "id": "api.command_join.desc",
-    "translation": "公開されているチャンネルに参加する"
+    "translation": "パブリックなチャンネルに参加する"
   },
   {
     "id": "api.command_join.fail.app_error",
@@ -723,7 +731,7 @@
   },
   {
     "id": "api.command_logout.desc",
-    "translation": "Mattermostからログアウトする"
+    "translation": "RS-CloudOfficeからログアウトする"
   },
   {
     "id": "api.command_logout.name",
@@ -830,6 +838,14 @@
     "translation": "オンライン"
   },
   {
+    "id": "api.command_meeting.name",
+    "translation": "Web会議中に"
+  },
+  {
+    "id": "api.command_meeting.desc",
+    "translation": "あなたのステータスをWeb会議中に設定"
+  },
+  {
     "id": "api.command_online.success",
     "translation": "あなたはオンライン状態です"
   },
@@ -1513,7 +1529,7 @@
   },
   {
     "id": "api.slackimport.slack_add_channels.merge",
-    "translation": "Slackチャンネル {{.DisplayName}} は有効なMattermostのチャンネルとして既に存在しています。両方のチャンネルがマージされます。\r\n"
+    "translation": "Slackチャンネル {{.DisplayName}} は有効なRS-CloudOfficeのチャンネルとして既に存在しています。両方のチャンネルがマージされます。\r\n"
   },
   {
     "id": "api.slackimport.slack_add_users.created",
@@ -1525,11 +1541,11 @@
   },
   {
     "id": "api.slackimport.slack_add_users.merge_existing",
-    "translation": "電子メールアドレス {{.Email}} とユーザー名 {{.Username}} を持つ既存のMattermostユーザーとSlackユーザーをマージしました。\r\n"
+    "translation": "電子メールアドレス {{.Email}} とユーザー名 {{.Username}} を持つ既存のRS-CloudOfficeユーザーとSlackユーザーをマージしました。\r\n"
   },
   {
     "id": "api.slackimport.slack_add_users.merge_existing_failed",
-    "translation": "電子メールアドレス {{.Email}} とユーザー名 {{.Username}} を持つ既存のMattermostユーザーとSlackユーザーをマージしましたが、そのユーザーをチームに追加できませんでした。\r\n"
+    "translation": "電子メールアドレス {{.Email}} とユーザー名 {{.Username}} を持つ既存のRS-CloudOfficeユーザーとSlackユーザーをマージしましたが、そのユーザーをチームに追加できませんでした。\r\n"
   },
   {
     "id": "api.slackimport.slack_add_users.missing_email_address",
@@ -1541,7 +1557,7 @@
   },
   {
     "id": "api.slackimport.slack_import.log",
-    "translation": "Mattermost Slackインポートログ\r\n"
+    "translation": "RS-CloudOffice Slackインポートログ\r\n"
   },
   {
     "id": "api.slackimport.slack_import.note1",
@@ -1773,7 +1789,7 @@
   },
   {
     "id": "api.templates.email_change_verify_body.title",
-    "translation": "電子メールアドレスが正常に更新されました"
+    "translation": "あなたは電子メールアドレスを更新しました"
   },
   {
     "id": "api.templates.email_change_verify_subject",
@@ -1909,7 +1925,7 @@
   },
   {
     "id": "api.templates.verify_body.info",
-    "translation": "この電子メールアドレスがMattermostアカウントの作成に使用されました。"
+    "translation": "この電子メールアドレスがRS-CloudOfficeアカウントの作成に使用されました。"
   },
   {
     "id": "api.templates.verify_body.title",
@@ -2281,7 +2297,7 @@
   },
   {
     "id": "api.webhook.create_outgoing.not_open.app_error",
-    "translation": "外向きのウェブフックは、公開チャンネルに対してのみ作成できます。"
+    "translation": "外向きのウェブフックは、パブリックチャンネルに対してのみ作成できます。"
   },
   {
     "id": "api.webhook.create_outgoing.permissions.app_error",
@@ -3197,7 +3213,7 @@
   },
   {
     "id": "ent.ldap.do_login.user_filtered.app_error",
-    "translation": "あなたのAD/LDAPアカウントにはMattermostサーバを利用する権限がありません。システム管理者にAD/LDAPのユーザーフィルターをチェックするよう依頼してください。"
+    "translation": "あなたのAD/LDAPアカウントにはRS-CloudOfficeサーバを利用する権限がありません。システム管理者にAD/LDAPのユーザーフィルターをチェックするよう依頼してください。"
   },
   {
     "id": "ent.ldap.do_login.user_not_registered.app_error",
@@ -3217,7 +3233,7 @@
   },
   {
     "id": "ent.ldap.syncronize.search_failure.app_error",
-    "translation": "AD/LDAPでのユーザー検索に失敗しました。MattermostサーバーがAD/LDAPサーバーに接続できることを確認し、再度実行してください。"
+    "translation": "AD/LDAPでのユーザー検索に失敗しました。RS-CloudOfficeサーバーがAD/LDAPサーバーに接続できることを確認し、再度実行してください。"
   },
   {
     "id": "ent.ldap.validate_filter.app_error",
@@ -3313,7 +3329,7 @@
   },
   {
     "id": "ent.migration.migratetosaml.username_already_used_by_other_user",
-    "translation": "ユーザー名は既に別のMattermostユーザーによって使用されています。"
+    "translation": "ユーザー名は既に別のRS-CloudOfficeユーザーによって使用されています。"
   },
   {
     "id": "ent.saml.attribute.app_error",
@@ -3413,7 +3429,7 @@
   },
   {
     "id": "mattermost.bulletin.subject",
-    "translation": "Mattermostセキュリティー通知"
+    "translation": "RS-CloudOfficeセキュリティー通知"
   },
   {
     "id": "mfa.activate.bad_token.app_error",
@@ -4565,7 +4581,7 @@
   },
   {
     "id": "oauth.gitlab.tos.error",
-    "translation": "GitLabの利用規約が更新されました。{{.URL}}で新しい利用規約に同意してから、もう一度Mattermostへログインしてみてください。"
+    "translation": "GitLabの利用規約が更新されました。gitlab.comで新しい利用規約に同意してから、もう一度RS-CloudOfficeへログインしてみてください。"
   },
   {
     "id": "plugin.api.update_user_status.bad_status",
@@ -4729,11 +4745,11 @@
   },
   {
     "id": "web.error.unsupported_browser.no_longer_support_version",
-    "translation": "あなたのブラウザのバージョンはMattermostではサポートされていません"
+    "translation": "あなたのブラウザのバージョンはRS-CloudOfficeではサポートされていません"
   },
   {
     "id": "web.error.unsupported_browser.no_longer_support",
-    "translation": "このブラウザはMattermostではサポートされていません"
+    "translation": "このブラウザはRS-CloudOfficeではサポートされていません"
   },
   {
     "id": "web.error.unsupported_browser.min_os_version.windows",
@@ -4777,7 +4793,7 @@
   },
   {
     "id": "web.error.unsupported_browser.download_app_or_upgrade_browser",
-    "translation": "より良い体験のために、Mattermostアプリかサポートされたブラウザをダウンロードしてください。"
+    "translation": "より良い体験のために、サポートされたブラウザをダウンロードしてください。"
   },
   {
     "id": "web.error.unsupported_browser.download",
@@ -5565,11 +5581,11 @@
   },
   {
     "id": "api.team.search_teams.pagination_not_implemented.public_team_search",
-    "translation": "公開のみのチーム検索ではページネーションは利用できません。"
+    "translation": "パブリックのみのチーム検索ではページネーションは利用できません。"
   },
   {
     "id": "api.team.search_teams.pagination_not_implemented.private_team_search",
-    "translation": "非公開のみのチーム検索ではページネーションは利用できません。"
+    "translation": "プライベートのみのチーム検索ではページネーションは利用できません。"
   },
   {
     "id": "api.team.remove_member.group_constrained.app_error",
@@ -5713,7 +5729,7 @@
   },
   {
     "id": "api.channel.update_channel_privacy.default_channel_error",
-    "translation": "デフォルトチャンネルは非公開にできません。"
+    "translation": "デフォルトチャンネルはプライベートにできません。"
   },
   {
     "id": "api.channel.update_channel_member_roles.guest_and_user.app_error",
@@ -5777,7 +5793,7 @@
   },
   {
     "id": "api.bot.teams_channels.add_message_mobile",
-    "translation": "ブラウザ、もしくはMattermostデスクトップアプリから、Botをチーム・チャンネルに追加してください。"
+    "translation": "ブラウザから、Botをチーム・チャンネルに追加してください。"
   },
   {
     "id": "api.bot.create_disabled",
@@ -6329,7 +6345,7 @@
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_200.notification_body",
-    "translation": "あなたのMattermostには200ユーザーが登録しています。Mattermostをあなたの組織のシングルサインオンプロバイダーに接続することで、ユーザーは再度認証情報を入力することなくMattermostへアクセスできるようになります。MattermostサーバーをSAML 2.0プロバイダーと連携することをおすすめします。詳しくは[SAML2.0連携に関する説明](https://www.mattermost.com/docs-saml/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=saml)を参照してください。\n\n問い合わせ をクリックすると、あなたの情報をMattermost, Inc. へ共有します。詳しくは[説明文書](https://mattermost.com/pl/default-admin-advisory)を参照してください"
+    "translation": "あなたのRS-CloudOfficeには200ユーザーが登録しています。RS-CloudOfficeをあなたの組織のシングルサインオンプロバイダーに接続することで、ユーザーは再度認証情報を入力することなくRS-CloudOfficeへアクセスできるようになります。RS-CloudOfficeサーバーをSAML 2.0プロバイダーと連携することをおすすめします。詳しくは[SAML2.0連携に関する説明](https://www.mattermost.com/docs-saml/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=saml)を参照してください。\n\n問い合わせ をクリックすると、あなたの情報をMattermost, Inc. へ共有します。詳しくは[説明文書](https://mattermost.com/pl/default-admin-advisory)を参照してください"
   },
   {
     "id": "model.command.is_valid.plugin_id.app_error",
@@ -6357,7 +6373,7 @@
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_500.notification_title",
-    "translation": "Mattermostをスケーリングする"
+    "translation": "RS-CloudOfficeをスケーリングする"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_500.notification_body",
@@ -6365,7 +6381,7 @@
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_200.notification_title",
-    "translation": "Mattermostをスケーリングする"
+    "translation": "RS-CloudOfficeをスケーリングする"
   },
   {
     "id": "api.server.warn_metric.email_us",
@@ -6373,7 +6389,7 @@
   },
   {
     "id": "api.server.warn_metric.bot_response.notification_success.message",
-    "translation": "Mattermostへお問い合わせていただき、ありがとうございます。すぐにこちらからご連絡いたします。"
+    "translation": "RS-CloudOfficeへお問い合わせていただき、ありがとうございます。すぐにこちらからご連絡いたします。"
   },
   {
     "id": "api.server.warn_metric.bot_response.notification_failure.message",
@@ -6641,11 +6657,11 @@
   },
   {
     "id": "app.team.search_private_team.app_error",
-    "translation": "非公開チームを検索する際にエラーが発生しました。"
+    "translation": "プライベートチームを検索する際にエラーが発生しました。"
   },
   {
     "id": "app.team.search_open_team.app_error",
-    "translation": "公開されているチームを検索する際にエラーが発生しました。"
+    "translation": "パブリックチームを検索する際にエラーが発生しました。"
   },
   {
     "id": "app.team.search_all_team.app_error",
@@ -6869,7 +6885,7 @@
   },
   {
     "id": "app.team.get_all_private_team_listing.app_error",
-    "translation": "全ての非公開チームを取得できませんでした。"
+    "translation": "全てのプライベートチームを取得できませんでした。"
   },
   {
     "id": "app.team.clear_all_custom_role_assignments.select.app_error",
@@ -6941,11 +6957,11 @@
   },
   {
     "id": "app.channel.get_public_channels.get.app_error",
-    "translation": "公開チャンネルを取得できませんでした。"
+    "translation": "パブリックチャンネルを取得できませんでした。"
   },
   {
     "id": "app.channel.get_private_channels.get.app_error",
-    "translation": "非公開チャンネルを取得できませんでした。"
+    "translation": "プライベートチャンネルを取得できませんでした。"
   },
   {
     "id": "app.channel.get_member_count.app_error",
@@ -7133,7 +7149,7 @@
   },
   {
     "id": "api.server.warn_metric.number_of_teams_5.start_trial.notification_body",
-    "translation": "あなたのMattermostにはいくつかのチームが存在します。多くのチームは、チャンネルの作成方法や、誰が新しいチームメイトを招待できるか、また、どのように統合機能を管理するかなどのチーム運営について各々が好む方法を持っています。チーム上書きスキームにより、それぞれの要求を満たすようチームごとにユーザー権限設定をカスタマイズできます。\n\n詳しくは[高度な権限設定に関する説明](https://www.mattermost.com/docs-advanced-permissions-team-override/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions-team-override)を参照してください。\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/)に同意したことになり、製品に関する電子メールを受信するようになります。"
+    "translation": "あなたのRS-CloudOfficeにはいくつかのチームが存在します。多くのチームは、チャンネルの作成方法や、誰が新しいチームメイトを招待できるか、また、どのように統合機能を管理するかなどのチーム運営について各々が好む方法を持っています。チーム上書きスキームにより、それぞれの要求を満たすようチームごとにユーザー権限設定をカスタマイズできます。\n\n詳しくは[高度な権限設定に関する説明](https://www.mattermost.com/docs-advanced-permissions-team-override/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions-team-override)を参照してください。\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/)に同意し、製品に関する電子メールを受信するようになります。"
   },
   {
     "id": "api.server.warn_metric.number_of_teams_5.notification_title",
@@ -7141,11 +7157,11 @@
   },
   {
     "id": "api.server.warn_metric.number_of_teams_5.notification_body",
-    "translation": "あなたのMattermostにはいくつかのチームが存在します。多くのチームは、チャンネルの作成方法や、誰が新しいチームメイトを招待できるか、また、どのように統合機能を管理するかなどのチーム運営について各々が好む方法を持っています。チーム上書きスキームにより、それぞれの要求を満たすようチームごとにユーザー権限設定をカスタマイズできます。\n\n詳しくは[高度な権限設定に関する説明](https://www.mattermost.com/docs-advanced-permissions-team-override/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions-team-override)を参照してください。\n\n問い合わせ をクリックすることで、あなたの情報を Mattermost, Inc. へ共有します。詳しくは[説明文書](https://mattermost.com/pl/default-admin-advisory)を参照してください"
+    "translation": "あなたのRS-CloudOfficeにはいくつかのチームが存在します。多くのチームは、チャンネルの作成方法や、誰が新しいチームメイトを招待できるか、また、どのように統合機能を管理するかなどのチーム運営について各々が好む方法を持っています。チーム上書きスキームにより、それぞれの要求を満たすようチームごとにユーザー権限設定をカスタマイズできます。\n\n詳しくは[高度な権限設定に関する説明](https://www.mattermost.com/docs-advanced-permissions-team-override/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions-team-override)を参照してください。\n\n問い合わせ をクリックすることで、あなたの情報を Mattermost, Inc. へ共有します。詳しくは[説明文書](https://mattermost.com/pl/default-admin-advisory)を参照してください"
   },
   {
     "id": "api.server.warn_metric.number_of_teams_5.contact_us.email_body",
-    "translation": "Mattermostへ問い合わせる。チームスキームによる高度な権限設定に興味があります。\n"
+    "translation": "RS-CloudOfficeへ問い合わせる。チームスキームによる高度な権限設定に興味があります。\n"
   },
   {
     "id": "api.server.warn_metric.number_of_posts_2M.start_trial.notification_success.message",
@@ -7153,7 +7169,7 @@
   },
   {
     "id": "api.server.warn_metric.number_of_posts_2M.start_trial.notification_body",
-    "translation": "あなたのMattermostシステムには非常に多くのメッセージがあります。Mattermostのデフォルトのデータベース検索は約250万投稿からパフォーマンスが劣化し始めます。500万投稿以上ある場合、Elasticsearchを導入することで、検索のタイムアウトなどの深刻なパフォーマンスの問題を回避することができます。Elasticsearchとの連携について詳しく知りたい場合や、何かサポートできることがないか私たちに問い合わせてください。\n\n詳しくは[パフォーマンス改善に関する説明](https://www.mattermost.com/docs-elasticsearch/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=elasticsearch)を参照してください\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/)に同意したことになり、製品に関する電子メールを受信するようになります。"
+    "translation": "あなたのRS-CloudOfficeシステムには非常に多くのメッセージがあります。RS-CloudOfficeのデフォルトのデータベース検索は約250万投稿からパフォーマンスが劣化し始めます。500万投稿以上ある場合、Elasticsearchを導入することで、検索のタイムアウトなどの深刻なパフォーマンスの問題を回避することができます。Elasticsearchとの連携について詳しく知りたい場合や、何かサポートできることがないか私たちに問い合わせてください。\n\n詳しくは[パフォーマンス改善に関する説明](https://www.mattermost.com/docs-elasticsearch/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=elasticsearch)を参照してください\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/)に同意し、製品に関する電子メールを受信するようになります。"
   },
   {
     "id": "api.server.warn_metric.number_of_posts_2M.notification_title",
@@ -7161,11 +7177,11 @@
   },
   {
     "id": "api.server.warn_metric.number_of_posts_2M.notification_body",
-    "translation": "あなたのMattermostシステムには非常に多くのメッセージがあります。Mattermostのデフォルトのデータベース検索は約250万投稿からパフォーマンスが劣化し始めます。500万投稿以上ある場合、Elasticsearchを導入することで、検索のタイムアウトなどの深刻なパフォーマンスの問題を回避することができます。Elasticsearchとの連携について詳しく知りたい場合や、何かサポートできることがないか私たちに問い合わせてください。\n\n詳しくは[パフォーマンス改善に関する説明](https://www.mattermost.com/docs-elasticsearch/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=elasticsearch)を参照してください\n\n問い合わせ をクリックすると、あなたの情報は Mattermost, Inc. へ共有されます。詳しくは[説明文書}(https://mattermost.com/pl/default-admin-advisory)を参照してください"
+    "translation": "あなたのRS-CloudOfficeシステムには非常に多くのメッセージがあります。RS-CloudOfficeのデフォルトのデータベース検索は約250万投稿からパフォーマンスが劣化し始めます。500万投稿以上ある場合、Elasticsearchを導入することで、検索のタイムアウトなどの深刻なパフォーマンスの問題を回避することができます。Elasticsearchとの連携について詳しく知りたい場合や、何かサポートできることがないか私たちに問い合わせてください。\n\n詳しくは[パフォーマンス改善に関する説明](https://www.mattermost.com/docs-elasticsearch/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=elasticsearch)を参照してください\n\n問い合わせ をクリックすると、あなたの情報は Mattermost, Inc. へ共有されます。詳しくは[説明文書}(https://mattermost.com/pl/default-admin-advisory)を参照してください"
   },
   {
     "id": "api.server.warn_metric.number_of_posts_2M.contact_us.email_body",
-    "translation": "Mattermostへ問い合わせる。Elasticsearchによるパフォーマンスの改善に興味があります。\n"
+    "translation": "RS-CloudOfficeへ問い合わせる。Elasticsearchによるパフォーマンスの改善に興味があります。\n"
   },
   {
     "id": "api.server.warn_metric.number_of_channels_50.start_trial.notification_success.message",
@@ -7173,15 +7189,15 @@
   },
   {
     "id": "api.server.warn_metric.number_of_channels_50.start_trial.notification_body",
-    "translation": "チャンネルはコミュニケーションの改善をサポートするものですが、Mattermost全体でチャンネルの作成や参加が多くなるにつれ、システムを整理されたものにし続けることが課題になってきます。高度な権限設定により、どのユーザー、もしくはどのロールの人が何のアクションを実行可能かを設定することができます。例えば、チャンネル設定やメンバーの管理や、@channel、@hereなどのタグによるグループへの発信、新たなウェブフックの作成などを制限できます。\n\n詳しくは[高度な権限設定の利用に関する説明](https://www.mattermost.com/docs-advanced-permissions/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions)を参照してください\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/)に同意したことになり、製品に関する電子メールを受信するようになります。"
+    "translation": "チャンネルはコミュニケーションの改善をサポートするものですが、RS-CloudOffice全体でチャンネルの作成や参加が多くなるにつれ、システムを整理されたものにし続けることが課題になってきます。高度な権限設定により、どのユーザー、もしくはどの役割の人が何のアクションを実行可能かを設定することができます。例えば、チャンネル設定やメンバーの管理や、@channel、@hereなどのタグによるグループへの発信、新たなウェブフックの作成などを制限できます。\n\n詳しくは[高度な権限設定の利用に関する説明](https://www.mattermost.com/docs-advanced-permissions/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions)を参照してください\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/)に同意し、製品に関する電子メールを受信するようになります。"
   },
   {
     "id": "api.server.warn_metric.number_of_channels_50.contact_us.email_body",
-    "translation": "Mattermostへ問い合わせる。システムスキーマによる高度な権限設定に興味があります。\n"
+    "translation": "RS-CloudOfficeへ問い合わせる。システムスキーマによる高度な権限設定に興味があります。\n"
   },
   {
     "id": "api.server.warn_metric.number_of_channels_50.notification_body",
-    "translation": "チャンネルはコミュニケーションの改善をサポートするものですが、Mattermost全体でチャンネルの作成や参加が多くなるにつれ、システムを整理されたものにし続けることが課題になってきます。高度な権限設定により、どのユーザー、もしくはどのロールの人が何のアクションを実行可能かを設定することができます。例えば、チャンネル設定やメンバーの管理や、@channel、@hereなどのタグによるグループへの発信、新たなウェブフックの作成などを制限できます。\n\n詳しくは[高度な権限設定の利用に関する説明](https://www.mattermost.com/docs-advanced-permissions/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions)を参照してください\n\n問い合わせ をクリックすると、あなたの情報が Mattermost, Inc. へ共有されます。詳しくは[説明文書](https://mattermost.com/pl/default-admin-advisory)を参照してください"
+    "translation": "チャンネルはコミュニケーションの改善をサポートするものですが、RS-CloudOffice全体でチャンネルの作成や参加が多くなるにつれ、システムを整理されたものにし続けることが課題になってきます。高度な権限設定により、どのユーザー、もしくはどの役割の人が何のアクションを実行可能かを設定することができます。例えば、チャンネル設定やメンバーの管理や、@channel、@hereなどのタグによるグループへの発信、新たなウェブフックの作成などを制限できます。\n\n詳しくは[高度な権限設定の利用に関する説明](https://www.mattermost.com/docs-advanced-permissions/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=advanced-permissions)を参照してください\n\n問い合わせ をクリックすると、あなたの情報が Mattermost, Inc. へ共有されます。詳しくは[説明文書](https://mattermost.com/pl/default-admin-advisory)を参照してください"
   },
   {
     "id": "api.server.warn_metric.number_of_channels_50.notification_title",
@@ -7197,7 +7213,7 @@
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_500.contact_us.email_body",
-    "translation": "Mattermostに問い合わせる。我々のチームには500名以上のユーザーがおり、Mattermost Enterprise Editionを検討しています。\n"
+    "translation": "RS-CloudOfficeに問い合わせる。我々のチームには500名以上のユーザーがおり、Mattermost Enterprise Editionを検討しています。\n"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_300.start_trial.notification_title",
@@ -7209,15 +7225,15 @@
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_300.start_trial.notification_body",
-    "translation": "Mattermost全体で多くの会話がなされている場合、どこに重要な情報があるかを知るのは難しいことかもしれません。多くのユーザーに対してメッセージを配信したい場合、誰でも参加可能だがチャンネル管理者しかメッセージの投稿ができないような閲覧専用の連絡チャンネルを立てることができます。\n\n詳しくは[閲覧専用の連絡チャンネルの作成に関する説明](https://www.mattermost.com/docs-channel-moderation/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=channel-moderation)を参照してください\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/)に同意したことになり、製品に関する電子メールを受信するようになります。"
+    "translation": "RS-CloudOffice全体で多くの会話がなされている場合、どこに重要な情報があるかを知るのは難しいことかもしれません。多くのユーザーに対してメッセージを配信したい場合、誰でも参加可能だがチャンネル管理者しかメッセージの投稿ができないような閲覧専用の連絡チャンネルを立てることができます。\n\n詳しくは[閲覧専用の連絡チャンネルの作成に関する説明](https://www.mattermost.com/docs-channel-moderation/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=channel-moderation)を参照してください\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/)に同意し、製品に関する電子メールを受信するようになります。"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_300.notification_body",
-    "translation": "Mattermost全体で多くの会話がなされている場合、どこに重要な情報があるかを知るのは難しいことかもしれません。多くのユーザーに対してメッセージを配信したい場合、誰でも参加可能だがチャンネル管理者しかメッセージの投稿ができないような閲覧専用の連絡チャンネルを立てることができます。\n\n詳しくは[閲覧専用の連絡チャンネルの作成に関する説明](https://www.mattermost.com/docs-channel-moderation/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=channel-moderation)を参照してください\n\n問い合わせ をクリックすると、あなたの情報を Mattermost, Inc. へ共有します。詳しくは[説明文書](https://mattermost.com/pl/default-admin-advisory)を参照してください"
+    "translation": "RS-CloudOffice全体で多くの会話がなされている場合、どこに重要な情報があるかを知るのは難しいことかもしれません。多くのユーザーに対してメッセージを配信したい場合、誰でも参加可能だがチャンネル管理者しかメッセージの投稿ができないような閲覧専用の連絡チャンネルを立てることができます。\n\n詳しくは[閲覧専用の連絡チャンネルの作成に関する説明](https://www.mattermost.com/docs-channel-moderation/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=channel-moderation)を参照してください\n\n問い合わせ をクリックすると、あなたの情報を Mattermost, Inc. へ共有します。詳しくは[説明文書](https://mattermost.com/pl/default-admin-advisory)を参照してください"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_300.contact_us.email_body",
-    "translation": "Mattermostへ問い合わせる。閲覧専用の連絡チャンネル機能に興味があります。\n"
+    "translation": "RS-CloudOfficeへ問い合わせる。閲覧専用の連絡チャンネル機能に興味があります。\n"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_200.start_trial.notification_success.message",
@@ -7225,11 +7241,11 @@
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_200.start_trial.notification_body",
-    "translation": "あなたのMattermostには200ユーザーが登録しています。Mattermostをあなたの組織のシングルサインオンプロバイダーに接続することで、ユーザーは再度認証情報を入力することなくMattermostへアクセスできるようになります。MattermostサーバーをSAML 2.0プロバイダーと連携することをおすすめします。詳しくは[SAML2.0連携に関する説明](https://www.mattermost.com/docs-saml/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=saml)を参照してください。\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/)に同意したことになり、製品に関する電子メールを受信するようになります。"
+    "translation": "あなたのRS-CloudOfficeには200ユーザーが登録しています。RS-CloudOfficeをあなたの組織のシングルサインオンプロバイダーに接続することで、ユーザーは再度認証情報を入力することなくRS-CloudOfficeへアクセスできるようになります。RS-CloudOfficeサーバーをSAML 2.0プロバイダーと連携することをおすすめします。詳しくは[SAML2.0連携に関する説明](https://www.mattermost.com/docs-saml/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=saml)を参照してください。\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/)に同意し、製品に関する電子メールを受信するようになります。"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_200.contact_us.email_body",
-    "translation": "Mattermostへ問い合わせる。我々のチームには200名以上のユーザーがおり、Mattermost Enterprise Editionを検討しています。\n"
+    "translation": "RS-CloudOfficeへ問い合わせる。我々のチームには200名以上のユーザーがおり、Mattermost Enterprise Editionを検討しています。\n"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_100.start_trial.notification_success.message",
@@ -7237,19 +7253,19 @@
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_100.start_trial.notification_body",
-    "translation": "あなたのMattermostには100名以上のユーザーがいます。ユーザー数が増加するにつれ、新しいアカウントの準備などは時間のかかる作業となっていく可能性があります。組織のActive Directory/LDAPと連携し、誰でも組織のアカウントでMattermostにアクセス可能となるよう設定することをおすすめします。\n\n詳しくは[AD/LDAP連携に関する説明](https://www.mattermost.com/docs-adldap/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=adldap)を参照してください\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/) に同意したことになり、製品に関する電子メールを受信するようになります。"
+    "translation": "あなたのRS-CloudOfficeには100名以上のユーザーがいます。ユーザー数が増加するにつれ、新しいアカウントの準備などは時間のかかる作業となっていく可能性があります。組織のActive Directory/LDAPと連携し、誰でも組織のアカウントでRS-CloudOfficeにアクセス可能となるよう設定することをおすすめします。\n\n詳しくは[AD/LDAP連携に関する説明](https://www.mattermost.com/docs-adldap/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=adldap)を参照してください\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/) に同意し、製品に関する電子メールを受信するようになります。"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_100.notification_title",
-    "translation": "Mattermostをスケールする"
+    "translation": "RS-CloudOfficeをスケールする"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_100.notification_body",
-    "translation": "あなたのMattermostには100名以上のユーザーがいます。ユーザー数が増加するにつれ、新しいアカウントの準備などは時間のかかる作業となっていく可能性があります。組織のActive Directory/LDAPと連携し、誰でも組織のアカウントでMattermostにアクセス可能となるよう設定することをおすすめします。\n\n詳しくは[AD/LDAP連携に関する説明](https://www.mattermost.com/docs-adldap/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=adldap)を参照してください\n\n問い合わせ をクリックすると、あなたの情報を Mattermost, Inc. へ共有します。詳しくは[説明文書](https://mattermost.com/pl/default-admin-advisory)を参照してください"
+    "translation": "あなたのRS-CloudOfficeには100名以上のユーザーがいます。ユーザー数が増加するにつれ、新しいアカウントの準備などは時間のかかる作業となっていく可能性があります。組織のActive Directory/LDAPと連携し、誰でも組織のアカウントでRS-CloudOfficeにアクセス可能となるよう設定することをおすすめします。\n\n詳しくは[AD/LDAP連携に関する説明](https://www.mattermost.com/docs-adldap/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=adldap)を参照してください\n\n問い合わせ をクリックすると、あなたの情報を Mattermost, Inc. へ共有します。詳しくは[説明文書](https://mattermost.com/pl/default-admin-advisory)を参照してください"
   },
   {
     "id": "api.server.warn_metric.number_of_active_users_100.contact_us.email_body",
-    "translation": "Mattermostへ問い合わせる。我々のチームには100名以上のユーザーがおり、Mattermost Enterprise Editionを検討しています。\n"
+    "translation": "RS-CloudOfficeへ問い合わせる。我々のチームには100名以上のユーザーがおり、Mattermost Enterprise Editionを検討しています。\n"
   },
   {
     "id": "api.server.warn_metric.mfa.start_trial_notification_success.message",
@@ -7257,7 +7273,7 @@
   },
   {
     "id": "api.server.warn_metric.mfa.start_trial.notification_body",
-    "translation": "このMattermostでは多要素認証が有効になっており、ユーザーはパスワードとは別の認証を追加することで、アカウントをより安全にすることを選択できます。システム全体のセキュリティを改善するために、すべてのアカウントに対して多要素認証の利用を要求することもできます。\n\n詳しくは[多要素認証の強制についての説明](https://www.mattermost.com/docs-multi-factor-authentication/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=multi-factor-authentication)を参照してください。\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/)に同意したことになり、製品に関する電子メールを受信するようになります。"
+    "translation": "このRS-CloudOfficeでは多要素認証が有効になっており、ユーザーはパスワードとは別の認証を追加することで、アカウントをより安全にすることを選択できます。システム全体のセキュリティを改善するために、すべてのアカウントに対して多要素認証の利用を要求することもできます。\n\n詳しくは[多要素認証の強制についての説明](https://www.mattermost.com/docs-multi-factor-authentication/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=multi-factor-authentication)を参照してください。\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/)に同意し、製品に関する電子メールを受信するようになります。"
   },
   {
     "id": "api.server.warn_metric.mfa.notification_title",
@@ -7265,11 +7281,11 @@
   },
   {
     "id": "api.server.warn_metric.mfa.notification_body",
-    "translation": "このMattermostでは多要素認証が有効になっており、ユーザーはパスワードとは別の認証を追加することで、アカウントをより安全にすることを選択できます。システム全体のセキュリティを改善するために、すべてのアカウントに対して多要素認証の利用を要求することもできます。\n\n詳しくは[多要素認証の強制についての説明](https://www.mattermost.com/docs-multi-factor-authentication/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=multi-factor-authentication)を参照してください。\n\n問い合わせ をクリックすると、あなたの情報が Mattermost, Inc. へ共有されます。詳しくは[説明文書](https://mattermost.com/pl/default-admin-advisory)を参照してください"
+    "translation": "このRS-CloudOfficeでは多要素認証が有効になっており、ユーザーはパスワードとは別の認証を追加することで、アカウントをより安全にすることを選択できます。システム全体のセキュリティを改善するために、すべてのアカウントに対して多要素認証の利用を要求することもできます。\n\n詳しくは[多要素認証の強制についての説明](https://www.mattermost.com/docs-multi-factor-authentication/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=multi-factor-authentication)を参照してください。\n\n問い合わせ をクリックすると、あなたの情報が Mattermost, Inc. へ共有されます。詳しくは[説明文書](https://mattermost.com/pl/default-admin-advisory)を参照してください"
   },
   {
     "id": "api.server.warn_metric.mfa.contact_us.email_body",
-    "translation": "Mattermostへ問い合わせる。多要素認証の強制機能について興味があります。\n"
+    "translation": "RS-CloudOfficeへ問い合わせる。多要素認証の強制機能について興味があります。\n"
   },
   {
     "id": "api.server.warn_metric.email_domain.start_trial_notification_success.message",
@@ -7277,7 +7293,7 @@
   },
   {
     "id": "api.server.warn_metric.email_domain.start_trial.notification_body",
-    "translation": "プロジェクトには組織内、組織外の両方の人が参画することがあります。ゲストアカウント機能により、外部のパートナーをMattermostに参加させることができ、ゲストが閲覧可能な情報などの設定を行うことができます。\n\n詳しくは[ゲストアカウントに関する説明](https://www.mattermost.com/docs-guest-accounts/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=guest-accounts)を参照してください。\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/) に同意したことになり、製品に関する電子メールを受信するようになります。"
+    "translation": "プロジェクトには組織内、組織外の両方の人が参画することがあります。ゲストアカウント機能により、外部のパートナーをRS-CloudOfficeに参加させることができ、ゲストが閲覧可能な情報などの設定を行うことができます。\n\n詳しくは[ゲストアカウントに関する説明](https://www.mattermost.com/docs-guest-accounts/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=guest-accounts)を参照してください。\n\nトライアル開始 をクリックすると、[Mattermost Software Evaluation Agreement](https://mattermost.com/software-evaluation-agreement/) と [プライバシーポリシー](https://mattermost.com/privacy-policy/) に同意し、製品に関する電子メールを受信するようになります。"
   },
   {
     "id": "api.server.warn_metric.email_domain.notification_title",
@@ -7285,11 +7301,11 @@
   },
   {
     "id": "api.server.warn_metric.email_domain.notification_body",
-    "translation": "プロジェクトには組織内、組織外の両方の人が参画することがあります。ゲストアカウント機能により、外部のパートナーをMattermostに参加させることができ、ゲストが閲覧可能な情報などの設定を行うことができます。\n\n詳しくは[ゲストアカウントに関する説明](https://www.mattermost.com/docs-guest-accounts/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=guest-accounts)を参照してください。\n\n問い合わせ をクリックすると、あなたの情報が Mattermost Inc. へ送信されます。詳しくは[説明文書](https://mattermost.com/pl/default-admin-advisory)を参照してください"
+    "translation": "プロジェクトには組織内、組織外の両方の人が参画することがあります。ゲストアカウント機能により、外部のパートナーをRS-CloudOfficeに参加させることができ、ゲストが閲覧可能な情報などの設定を行うことができます。\n\n詳しくは[ゲストアカウントに関する説明](https://www.mattermost.com/docs-guest-accounts/?utm_medium=product&utm_source=mattermost-advisor-bot&utm_content=guest-accounts)を参照してください。\n\n問い合わせ をクリックすると、あなたの情報が Mattermost Inc. へ送信されます。詳しくは[説明文書](https://mattermost.com/pl/default-admin-advisory)を参照してください"
   },
   {
     "id": "api.server.warn_metric.email_domain.contact_us.email_body",
-    "translation": "Mattermostへ問い合わせる。ゲストアカウント機能について興味があります。\n"
+    "translation": "RS-CloudOfficeへ問い合わせる。ゲストアカウント機能について興味があります。\n"
   },
   {
     "id": "api.server.warn_metric.bot_response.start_trial_failure.message",
@@ -7441,7 +7457,7 @@
   },
   {
     "id": "api.templates.copyright",
-    "translation": "© 2021 Mattermost, Inc. 530 Lytton Avenue, Second floor, Palo Alto, CA, 94301"
+    "translation": "© 2021 RS-CloudOffice"
   },
   {
     "id": "app.user.permanent_delete.app_error",
@@ -8045,7 +8061,7 @@
   },
   {
     "id": "api.templates.email_footer_v2",
-    "translation": "© 2022 Mattermost, Inc. 530 Lytton Avenue, Second floor, Palo Alto, CA, 94301"
+    "translation": "© 2021 RS-CloudOffice"
   },
   {
     "id": "store.sql_file_info.search.disabled",
@@ -8157,7 +8173,7 @@
   },
   {
     "id": "api.templates.invite_body_footer.title",
-    "translation": "Mattermostとは?"
+    "translation": "RS-CloudOfficeとは?"
   },
   {
     "id": "api.templates.invite_body_footer.learn_more",
@@ -8165,11 +8181,11 @@
   },
   {
     "id": "api.templates.invite_body_footer.info",
-    "translation": "Mattermostは、セキュアなチームコラボレーションを可能にする、柔軟なオープンソースのメッセージングプラットフォームです。"
+    "translation": "RS-CloudOfficeは、セキュアなチームコラボレーションを可能にする、柔軟なオープンソースのメッセージングプラットフォームです。"
   },
   {
     "id": "api.templates.invite_body.subTitle",
-    "translation": "Mattermostでチームとの共同作業を始める"
+    "translation": "RS-CloudOfficeでチームとの共同作業を始める"
   },
   {
     "id": "api.templates.cloud_welcome_email.title",
@@ -8233,7 +8249,7 @@
   },
   {
     "id": "api.templates.cloud_welcome_email.button",
-    "translation": "Mattermostを開く"
+    "translation": "RS-CloudOfficeを開く"
   },
   {
     "id": "api.templates.cloud_welcome_email.add_apps_info",
@@ -8405,7 +8421,7 @@
   },
   {
     "id": "api.command_share.invite_remote.help",
-    "translation": "現在の共有チャネルに外部Mattermostインスタンスを招待する"
+    "translation": "現在の共有チャネルに外部RS-CloudOfficeインスタンスを招待する"
   },
   {
     "id": "api.command_share.invitation_sent",
@@ -8429,7 +8445,7 @@
   },
   {
     "id": "api.command_share.desc",
-    "translation": "現在のチャンネルを外部Mattermostインスタンスへ共有します。"
+    "translation": "現在のチャンネルを外部RS-CloudOfficeインスタンスへ共有します。"
   },
   {
     "id": "api.command_share.check_channel_exist.error",
@@ -8533,7 +8549,7 @@
   },
   {
     "id": "api.command_remote.invite_summary",
-    "translation": "以下の AES-256bit で暗号化されたデータを、パスワードと共に外部Mattermostのシステム管理者に送信します。彼らは `{{.Command}}` のスラッシュコマンドを使って招待を受け付けます。\n\n```\n{{.Invitation}}\n```\n\n**安全な接続により、あなたのMattermostインスタンスに次のURLでアクセスできるようにします** {{.SiteURL}}"
+    "translation": "以下の AES-256bit で暗号化されたデータを、パスワードと共に外部RS-CloudOfficeのシステム管理者に送信します。彼らは `{{.Command}}` のスラッシュコマンドを使って招待を受け付けます。\n\n```\n{{.Invitation}}\n```\n\n**安全な接続により、あなたのRS-CloudOfficeインスタンスに次のURLでアクセスできるようにします** {{.SiteURL}}"
   },
   {
     "id": "api.command_remote.invite_password.hint",
@@ -8577,7 +8593,7 @@
   },
   {
     "id": "api.command_remote.desc",
-    "translation": "Mattermostインスタンス間のコミュニケーションのために、安全な接続を構築します。"
+    "translation": "RS-CloudOfficeインスタンス間のコミュニケーションのために、安全な接続を構築します。"
   },
   {
     "id": "api.command_remote.decode_invitation.error",
@@ -8601,7 +8617,7 @@
   },
   {
     "id": "api.command_remote.accept.help",
-    "translation": "外部のMattermostインスタンスからの招待を受け付ける"
+    "translation": "外部のRS-CloudOfficeインスタンスからの招待を受け付ける"
   },
   {
     "id": "api.cloud.cws_webhook_event_missing_error",
@@ -8657,7 +8673,7 @@
   },
   {
     "id": "app.notification.footer.infoLogin",
-    "translation": "Mattermostへログインし"
+    "translation": "RS-CloudOfficeへログインし"
   },
   {
     "id": "app.notification.footer.info",
@@ -8713,7 +8729,7 @@
   },
   {
     "id": "api.email_batching.send_batched_email_notification.button",
-    "translation": "Mattermostを開く"
+    "translation": "RS-CloudOfficeを開く"
   },
   {
     "id": "api.channel.create_channel.direct_channel.team_restricted_error",
@@ -8811,6 +8827,766 @@
     "id": "api.templates.license_up_for_renewal_title",
     "translation": "あなたのMattermostのサブスクリプションは更新が必要です"
   },
+      {
+        "id": "api.meeting.timezone.Etc/GMT+12",
+        "translation": "(UTC-12:00) 国際日付変更線 西側"
+    },
+    {
+        "id": "api.meeting.timezone.Etc/GMT+11",
+        "translation": "(UTC-11:00) 協定世界時-11"
+    },
+    {
+        "id": "api.meeting.timezone.Pacific/Honolulu",
+        "translation": "(UTC-10:00) ハワイ"
+    },
+    {
+        "id": "api.meeting.timezone.Pacific/Marquesas",
+        "translation": "(UTC-09:30) マルキーズ諸島"
+    },
+    {
+        "id": "api.meeting.timezone.America/Anchorage",
+        "translation": "(UTC-09:00) アラスカ"
+    },
+    {
+        "id": "api.meeting.timezone.America/Santa_Isabel",
+        "translation": "(UTC-08:00) バハカリフォルニア"
+    },
+    {
+        "id": "api.meeting.timezone.America/Los_Angeles",
+        "translation": "(UTC-08:00) 太平洋標準時(米国およびカナダ)"
+    },
+    {
+        "id": "api.meeting.timezone.America/Chihuahua",
+        "translation": "(UTC-07:00) チワワ、ラパス、マサトラン"
+    },
+    {
+        "id": "api.meeting.timezone.America/Phoenix",
+        "translation": "(UTC-07:00) アリゾナ"
+    },
+    {
+        "id": "api.meeting.timezone.America/Denver",
+        "translation": "(UTC-07:00) 山地標準時(米国およびカナダ)"
+    },
+    {
+        "id": "api.meeting.timezone.America/Guatemala",
+        "translation": "(UTC-06:00) 中央アメリカ"
+    },
+    {
+        "id": "api.meeting.timezone.America/Chicago",
+        "translation": "(UTC-06:00) 中部標準時(米国およびカナダ)"
+    },
+    {
+        "id": "api.meeting.timezone.America/Regina",
+        "translation": "(UTC-06:00) サスカチュワン"
+    },
+    {
+        "id": "api.meeting.timezone.America/Mexico_City",
+        "translation": "(UTC-06:00) グアダラハラ、メキシコシティ、モンテレー"
+    },
+    {
+        "id": "api.meeting.timezone.America/Bogota",
+        "translation": "(UTC-05:00) ボゴタ、リマ、キト"
+    },
+    {
+        "id": "api.meeting.timezone.America/Indiana/Indianapolis",
+        "translation": "(UTC-05:00) インディアナ東部"
+    },
+    {
+        "id": "api.meeting.timezone.America/New_York",
+        "translation": "(UTC-05:00) 東部標準時(米国およびカナダ)"
+    },
+    {
+        "id": "api.meeting.timezone.America/Halifax",
+        "translation": "(UTC-04:00) 大西洋標準時(カナダ)"
+    },
+    {
+        "id": "api.meeting.timezone.America/Asuncion",
+        "translation": "(UTC-04:00) アスンシオン"
+    },
+    {
+        "id": "api.meeting.timezone.America/La_Paz",
+        "translation": "(UTC-04:00) ジョージタウン、ラパス、マナウス、サンフアン"
+    },
+    {
+        "id": "api.meeting.timezone.America/Cuiaba",
+        "translation": "(UTC-04:00) クイアバ"
+    },
+    {
+        "id": "api.meeting.timezone.America/Santiago",
+        "translation": "(UTC-04:00) サンチアゴ"
+    },
+    {
+        "id": "api.meeting.timezone.America/St_Johns",
+        "translation": "(UTC-03:30) ニューファンドランド"
+    },
+    {
+        "id": "api.meeting.timezone.America/Sao_Paulo",
+        "translation": "(UTC-03:00) ブラジリア"
+    },
+    {
+        "id": "api.meeting.timezone.America/Godthab",
+        "translation": "(UTC-03:00) グリーンランド"
+    },
+    {
+        "id": "api.meeting.timezone.America/Cayenne",
+        "translation": "(UTC-03:00) カイエンヌ、フォルタレザ"
+    },
+    {
+        "id": "api.meeting.timezone.America/Argentina/Buenos_Aires",
+        "translation": "(UTC-03:00) ブエノスアイレス"
+    },
+    {
+        "id": "api.meeting.timezone.America/Montevideo",
+        "translation": "(UTC-03:00) モンテビデオ"
+    },
+    {
+        "id": "api.meeting.timezone.Etc/GMT+2",
+        "translation": "(UTC-02:00) 協定世界時-2"
+    },
+    {
+        "id": "api.meeting.timezone.Atlantic/Cape_Verde",
+        "translation": "(UTC-01:00) カーボベルデ諸島"
+    },
+    {
+        "id": "api.meeting.timezone.Atlantic/Azores",
+        "translation": "(UTC-01:00) アゾレス"
+    },
+    {
+        "id": "api.meeting.timezone.Africa/Casablanca",
+        "translation": "(UTC+00:00) カサブランカ"
+    },
+    {
+        "id": "api.meeting.timezone.Atlantic/Reykjavik",
+        "translation": "(UTC+00:00) モンロビア、レイキャビク"
+    },
+    {
+        "id": "api.meeting.timezone.Europe/London",
+        "translation": "(UTC+00:00) ダブリン、エジンバラ、リスボン、ロンドン"
+    },
+    {
+        "id": "api.meeting.timezone.Etc/GMT",
+        "translation": "(UTC+00:00) 協定世界時"
+    },
+    {
+        "id": "api.meeting.timezone.Europe/Berlin",
+        "translation": "(UTC+01:00) アムステルダム、ベルリン、ベルン、ローマ、ストックホルム、ウィーン"
+    },
+    {
+        "id": "api.meeting.timezone.Europe/Paris",
+        "translation": "(UTC+01:00) ブリュッセル、コペンハーゲン、マドリード、パリ"
+    },
+    {
+        "id": "api.meeting.timezone.Africa/Lagos",
+        "translation": "(UTC+01:00) 西中央アフリカ"
+    },
+    {
+        "id": "api.meeting.timezone.Europe/Budapest",
+        "translation": "(UTC+01:00) ベオグラード、ブラチスラバ、ブダペスト、リュブリャナ、プラハ"
+    },
+    {
+        "id": "api.meeting.timezone.Europe/Warsaw",
+        "translation": "(UTC+01:00) サラエボ、スコピエ、ワルシャワ、ザグレブ"
+    },
+    {
+        "id": "api.meeting.timezone.Africa/Windhoek",
+        "translation": "(UTC+01:00) ウィントフック"
+    },
+    {
+        "id": "api.meeting.timezone.Europe/Istanbul",
+        "translation": "(UTC+02:00) アテネ、ブカレスト、イスタンブール"
+    },
+    {
+        "id": "api.meeting.timezone.Europe/Kiev",
+        "translation": "(UTC+02:00) ヘルシンキ、キエフ、リガ、ソフィア、タリン、ビリニュス"
+    },
+    {
+        "id": "api.meeting.timezone.Africa/Cairo",
+        "translation": "(UTC+02:00) カイロ"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Damascus",
+        "translation": "(UTC+02:00) ダマスカス"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Amman",
+        "translation": "(UTC+02:00) アンマン"
+    },
+    {
+        "id": "api.meeting.timezone.Africa/Johannesburg",
+        "translation": "(UTC+02:00) ハラーレ、プレトリア"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Jerusalem",
+        "translation": "(UTC+02:00) エルサレム"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Beirut",
+        "translation": "(UTC+02:00) ベイルート"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Baghdad",
+        "translation": "(UTC+03:00) バグダッド"
+    },
+    {
+        "id": "api.meeting.timezone.Europe/Minsk",
+        "translation": "(UTC+03:00) ミンスク"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Riyadh",
+        "translation": "(UTC+03:00) クエート、リヤド"
+    },
+    {
+        "id": "api.meeting.timezone.Africa/Nairobi",
+        "translation": "(UTC+03:00) ナイロビ"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Tehran",
+        "translation": "(UTC+03:30) テヘラン"
+    },
+    {
+        "id": "api.meeting.timezone.Europe/Moscow",
+        "translation": "(UTC+04:00) モスクワ、サンクトペテルブルグ、ボルゴグラード"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Tbilisi",
+        "translation": "(UTC+04:00) トビリシ"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Yerevan",
+        "translation": "(UTC+04:00) エレバン"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Dubai",
+        "translation": "(UTC+04:00) アブダビ、マスカット"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Baku",
+        "translation": "(UTC+04:00) バクー"
+    },
+    {
+        "id": "api.meeting.timezone.Indian/Mauritius",
+        "translation": "(UTC+04:00) ポートルイス"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Kabul",
+        "translation": "(UTC+04:30) カブール"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Tashkent",
+        "translation": "(UTC+05:00) タシケント"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Karachi",
+        "translation": "(UTC+05:00) イスラマバード、カラチ"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Colombo",
+        "translation": "(UTC+05:30) スリジャヤワルダナプラコッテ"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Kolkata",
+        "translation": "(UTC+05:30) チェンナイ、コルカタ、ムンバイ、ニューデリー"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Kathmandu",
+        "translation": "(UTC+05:45) カトマンズ"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Almaty",
+        "translation": "(UTC+06:00) アスタナ"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Dhaka",
+        "translation": "(UTC+06:00) ダッカ"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Yekaterinburg",
+        "translation": "(UTC+06:00) エカテリンブルグ"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Yangon",
+        "translation": "(UTC+06:30) ヤンゴン"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Bangkok",
+        "translation": "(UTC+07:00) バンコク、ハノイ、ジャカルタ"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Novosibirsk",
+        "translation": "(UTC+07:00) ノヴォシビルスク"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Krasnoyarsk",
+        "translation": "(UTC+08:00) クラスノヤルスク"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Ulaanbaatar",
+        "translation": "(UTC+08:00) ウランバートル"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Shanghai",
+        "translation": "(UTC+08:00) 北京、重慶、香港、ウルムチ"
+    },
+    {
+        "id": "api.meeting.timezone.Australia/Perth",
+        "translation": "(UTC+08:00) パース"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Singapore",
+        "translation": "(UTC+08:00) クアラルンプール、シンガポール"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Taipei",
+        "translation": "(UTC+08:00) 台北"
+    },
+    {
+        "id": "api.meeting.timezone.Australia/Eucla",
+        "translation": "(UTC+08:45) オーストラリア西部(ユクラ)"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Irkutsk",
+        "translation": "(UTC+09:00) イルクーツク"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Seoul",
+        "translation": "(UTC+09:00) ソウル"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Tokyo",
+        "translation": "(UTC+09:00) 大阪、札幌、東京"
+    },
+    {
+        "id": "api.meeting.timezone.Australia/Darwin",
+        "translation": "(UTC+09:30) ダーウィン"
+    },
+    {
+        "id": "api.meeting.timezone.Australia/Adelaide",
+        "translation": "(UTC+09:30) アデレード"
+    },
+    {
+        "id": "api.meeting.timezone.Australia/Hobart",
+        "translation": "(UTC+10:00) ホバート"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Yakutsk",
+        "translation": "(UTC+10:00) ヤクーツク"
+    },
+    {
+        "id": "api.meeting.timezone.Australia/Brisbane",
+        "translation": "(UTC+10:00) ブリスベン"
+    },
+    {
+        "id": "api.meeting.timezone.Pacific/Port_Moresby",
+        "translation": "(UTC+10:00) グアム、ポートモレスビー"
+    },
+    {
+        "id": "api.meeting.timezone.Australia/Sydney",
+        "translation": "(UTC+10:00) キャンベラ、メルボルン、シドニー"
+    },
+    {
+        "id": "api.meeting.timezone.Australia/LHI",
+        "translation": "(UTC+10:30) ロード・ハウ島"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Vladivostok",
+        "translation": "(UTC+11:00) ウラジオストク"
+    },
+    {
+        "id": "api.meeting.timezone.Pacific/Guadalcanal",
+        "translation": "(UTC+11:00) ソロモン諸島、ニューカレドニア"
+    },
+    {
+        "id": "api.meeting.timezone.Etc/GMT-12",
+        "translation": "(UTC+12:00) 協定世界時+12"
+    },
+    {
+        "id": "api.meeting.timezone.Pacific/Fiji",
+        "translation": "(UTC+12:00) フィジー、マーシャル諸島"
+    },
+    {
+        "id": "api.meeting.timezone.Asia/Magadan",
+        "translation": "(UTC+12:00) マガダン"
+    },
+    {
+        "id": "api.meeting.timezone.Pacific/Auckland",
+        "translation": "(UTC+12:00) オークランド、ウェリントン"
+    },
+    {
+        "id": "api.meeting.timezone.Pacific/Chatham",
+        "translation": "(UTC+12:45) チャタム諸島"
+    },
+    {
+        "id": "api.meeting.timezone.Pacific/Tongatapu",
+        "translation": "(UTC+13:00) ヌクアロファ"
+    },
+    {
+        "id": "api.meeting.timezone.Pacific/Apia",
+        "translation": "(UTC+13:00) サモア"
+    },
+    {
+        "id": "api.meeting.timezone.Pacific/Kiritimati",
+        "translation": "(UTC+14:00) ライン諸島"
+    },
+    {
+        "id": "api.meeting.server_opt.app_error",
+        "translation": "サーバ内部エラー、管理者に連絡してください。"
+    },
+    {
+        "id": "api.meeting.meeting_not_exist.app_error",
+        "translation": "会議情報が存在しません。"
+    },
+    {
+        "id": "api.meeting.mail_send.app_error",
+        "translation": "下記のメールアドレスの送信に失敗しました。{{ .FailedMailAddrs }}。管理者に連絡してください。"
+    },
+    {
+        "id": "api.meeting.mail_format.app_error",
+        "translation": "招待者のメールアドレスを確認してください。メールアドレスの区切りとして「;」を使ってください。"
+    },
+    {
+      "id": "api.meeting.meeting_duplicated.app_error",
+      "translation": "会議名と参加者が同じ会議がありますので、予約ができません。確認してください。"
+    },
+    {
+        "id": "api.meeting.mail.terminate_template",
+        "translation": "{{ .UserName }}がこの会議の開催を中止しました。<br/><br/>{{ .RepeatMeetingInfo }}{{ .StartAtYear }}年{{ .StartAtMonth }}月{{ .StartAtDay }}日 {{ .StartAtHour }}:{{ .StartAtMinute }} - {{ .EndAtYear }}年{{ .EndAtMonth }}月{{ .EndAtDay }}日 {{ .EndAtHour }}:{{ .EndAtMinute }}<br/>{{ .TimeZone }}"
+    },
+    {
+        "id": "api.meeting.mail.change_template",
+        "translation": "{{ .UserName }}がスケジュールされた会議を変更しました。参加日時になったら、ここからミーティングに参加してください。<br/><br/>{{ .RepeatMeetingInfo }}{{ .StartAtYear }}年{{ .StartAtMonth }}月{{ .StartAtDay }}日 {{ .StartAtHour }}:{{ .StartAtMinute }} - {{ .EndAtYear }}年{{ .EndAtMonth }}月{{ .EndAtDay }}日 {{ .EndAtHour }}:{{ .EndAtMinute }}<br/>{{ .TimeZone }}<br/><br/>会議に参加する<br/>&lt;{{ .MeetingUrl }}&gt;<br/>添付ファイルをクリックして、会議をカレンダーに追加します"
+    },
+    {
+        "id": "api.meeting.mail.invite_template",
+        "translation": "{{ .UserName }}があなたをスケジュールされた会議に招待しています。<br/><br/>{{ .RepeatMeetingInfo }}{{ .StartAtYear }}年{{ .StartAtMonth }}月{{ .StartAtDay }}日 {{ .StartAtHour }}:{{ .StartAtMinute }} - {{ .EndAtYear }}年{{ .EndAtMonth }}月{{ .EndAtDay }}日 {{ .EndAtHour }}:{{ .EndAtMinute }}<br/>{{ .TimeZone }}<br/><br/>会議に参加する<br/>&lt;{{ .MeetingUrl }}&gt;<br/>添付ファイルをクリックして、会議をカレンダーに追加します"
+    },
+    {
+        "id": "api.meeting.mail.terminate_template_host",
+        "translation": "あなた（{{ .UserName }}）は、この会議の開催を中止しました。<br/><br/>{{ .RepeatMeetingInfo }}{{ .StartAtYear }}年{{ .StartAtMonth }}月{{ .StartAtDay }}日 {{ .StartAtHour }}:{{ .StartAtMinute }} - {{ .EndAtYear }}年{{ .EndAtMonth }}月{{ .EndAtDay }}日 {{ .EndAtHour }}:{{ .EndAtMinute }}<br/>{{ .TimeZone }}"
+    },
+    {
+        "id": "api.meeting.mail.change_template_host",
+        "translation": "あなた（{{ .UserName }}）は、この会議の情報を変更しました。開催日時になったら、ここからミーティングを開始してください。<br/><br/>{{ .RepeatMeetingInfo }}{{ .StartAtYear }}年{{ .StartAtMonth }}月{{ .StartAtDay }}日 {{ .StartAtHour }}:{{ .StartAtMinute }} - {{ .EndAtYear }}年{{ .EndAtMonth }}月{{ .EndAtDay }}日 {{ .EndAtHour }}:{{ .EndAtMinute }}<br/>{{ .TimeZone }}<br/><br/>会議を開始する<br/>&lt;{{ .MeetingUrl }}&gt;<br/>添付ファイルをクリックして、会議をカレンダーに追加します"
+    },
+    {
+        "id": "api.meeting.mail.invite_template_host",
+        "translation": "あなた（{{ .UserName }}）は、この会議の主催者です。<br/>開催日時になったら、ここからミーティングを開始してください。<br/><br/>{{ .RepeatMeetingInfo }}{{ .StartAtYear }}年{{ .StartAtMonth }}月{{ .StartAtDay }}日 {{ .StartAtHour }}:{{ .StartAtMinute }} - {{ .EndAtYear }}年{{ .EndAtMonth }}月{{ .EndAtDay }}日 {{ .EndAtHour }}:{{ .EndAtMinute }}<br/>{{ .TimeZone }}<br/><br/>会議を開始する<br/>&lt;{{ .MeetingUrl }}&gt;<br/>添付ファイルをクリックして、会議をカレンダーに追加します"
+    },
+    {
+        "id": "api.meeting.mail.ics.filename",
+        "translation": "Meeting_info"
+    },
+    {
+        "id": "api.meeting.mail.terminate_title_prefix",
+        "translation": "[RS-CloudOffice会議中止通知] "
+    },
+    {
+        "id": "api.meeting.mail.change_title_prefix",
+        "translation": "[RS-CloudOffice会議変更通知] "
+    },
+    {
+        "id": "api.meeting.mail.invite_title_prefix",
+        "translation": "[RS-CloudOffice会議招待通知] "
+    },
+    {
+        "id": "api.meeting.mail.invite_title_prefix_host",
+        "translation": "[RS-CloudOffice会議開催通知] "
+    },
+    {
+        "id": "api.meeting.Mon",
+        "translation": "月"
+    },
+    {
+        "id": "api.meeting.Tues",
+        "translation": "火"
+    },
+    {
+        "id": "api.meeting.Wed",
+        "translation": "水"
+    },
+    {
+        "id": "api.meeting.Thur",
+        "translation": "木"
+    },
+    {
+        "id": "api.meeting.Fri",
+        "translation": "金"
+    },
+    {
+        "id": "api.meeting.Sat",
+        "translation": "土"
+    },
+    {
+        "id": "api.meeting.Sun",
+        "translation": "日"
+    },
+    {
+        "id": "api.meeting.comma",
+        "translation": "、"
+    },
+    {
+        "id": "api.meeting.day",
+        "translation": "{{ .Day }}日"
+    },
+    {
+        "id": "api.meeting.first",
+        "translation": "第1"
+    },
+    {
+        "id": "api.meeting.second",
+        "translation": "第2"
+    },
+    {
+        "id": "api.meeting.third",
+        "translation": "第3"
+    },
+    {
+        "id": "api.meeting.fourth",
+        "translation": "第4"
+    },
+    {
+        "id": "api.meeting.last",
+        "translation": "最後の"
+    },
+    {
+        "id": "api.meeting.mail.repeat_end_type.none",
+        "translation": "有効開始日: {{ .RepeatStartAtYear }}年{{ .RepeatStartAtMonth }}月{{ .RepeatStartAtDay }}日"
+    },
+    {
+        "id": "api.meeting.mail.repeat_end_type.date",
+        "translation": "期間: {{ .RepeatStartAtYear }}年{{ .RepeatStartAtMonth }}月{{ .RepeatStartAtDay }}日-{{ .RepeatEndAtYear }}年{{ .RepeatEndAtMonth }}月{{ .RepeatEndAtDay }}日"
+    },
+    {
+        "id": "api.meeting.mail.repeat_end_type.times",
+        "translation": "有効開始日: {{ .RepeatStartAtYear }}年{{ .RepeatStartAtMonth }}月{{ .RepeatStartAtDay }}日 繰り返し回数:{{ .RepeatTimes }}回"
+    },
+    {
+        "id": "api.meeting.mail.repeat_type.everyday",
+        "translation": "繰り返し: 平日毎日 "
+    },
+    {
+        "id": "api.meeting.mail.repeat_type.day",
+        "translation": "繰り返し: {{ .RepeatDay }}日毎 "
+    },
+    {
+        "id": "api.meeting.mail.repeat_type.week",
+        "translation": "繰り返し: {{ .RepeatWeek }}週ごとの{{ .RepeatWeekDays }} "
+    },
+    {
+        "id": "api.meeting.mail.repeat_type.month_day",
+        "translation": "繰り返し: {{ .RepeatMonth }}ヵ月毎の{{ .RepeatDays }} "
+    },
+    {
+        "id": "api.meeting.mail.repeat_type.month_week",
+        "translation": "繰り返し: {{ .RepeatMonth }}ヵ月毎の{{ .RepeatWeekDay }} "
+    },
+    {
+        "id": "api.meeting.mail.repeat_type.year_day",
+        "translation": "繰り返し: {{ .RepeatYear }}毎の、{{ .RepeatDays }} "
+    },
+    {
+        "id": "api.meeting.mail.repeat_type.year_week",
+        "translation": "繰り返し: {{ .RepeatYear }}毎の{{ .RepeatWeekDay }} "
+    },
+    {
+        "id": "api.enable_confirm_notifications_to_channel_user_count_error",
+        "translation": "正の整数を設定してください。"
+    },
+    {
+        "id": "app.meeting.repeat.begin",
+        "translation": "繰り返し: "
+    },
+    {
+        "id": "api.meeting.mail.repeat_day",
+        "translation": "日単位、"
+    },
+    {
+        "id": "api.meeting.mail.repeat_week",
+        "translation": "週単位、"
+    },
+    {
+        "id": "api.meeting.mail.repeat_month",
+        "translation": "月単位、"
+    },
+    {
+        "id": "api.meeting.mail.repeat_year",
+        "translation": "年単位、"
+    },
+    {
+      "id": "api.file.upload_file.not_upload_permission.app_error",
+      "translation": "ファイルをアップロードする権限がありません。"
+    },
+    {
+      "id": "api.file.upload_file.not_download_permission.app_error",
+      "translation": "ファイルをダウンロードする権限がありません。"
+    },
+    {
+        "id": "app.meeting.repeat_start",
+        "translation": "繰り返し"
+    },
+    {
+        "id": "app.meeting.repeat_end",
+        "translation": "終了条件"
+    },
+    {
+        "id": "app.meeting.repeat_title",
+        "translation": "「繰り返し」"
+    },
+    {
+        "id": "api.meeting.mail.delete_title_prefix",
+        "translation": "[RS-CloudOffice]予約会議が管理者によりキャンセルされました。"
+    },
+    {
+        "id": "api.meeting.mail.repeat_unit_day",
+        "translation": "繰り返しの単位：日単位"
+    },
+    {
+        "id": "api.meeting.mail.repeat_unit_week",
+        "translation": "繰り返しの単位：週単位"
+    },
+    {
+        "id": "api.meeting.mail.repeat_unit_month",
+        "translation": "繰り返しの単位：月単位"
+    },
+    {
+        "id": "api.meeting.mail.repeat_unit_year",
+        "translation": "繰り返しの単位：年単位"
+    },
+    {
+        "id": "api.meeting.mail.repeat_frequency_everyday",
+        "translation": "繰り返しの頻度：平日毎日"
+    },
+    {
+        "id": "api.meeting.mail.repeat_frequency_day",
+        "translation": "繰り返しの頻度：{{ .RepeatDay }}日毎"
+    },
+    {
+        "id": "api.meeting.mail.repeat_frequency_week",
+        "translation": "繰り返しの頻度: {{ .RepeatWeek }}週ごと"
+    },
+    {
+        "id": "api.meeting.mail.repeat_frequency_weekdays",
+        "translation": "{{ .RepeatWeekDays }}"
+    },
+    {
+        "id": "api.meeting.mail.repeat_frequency_month_day",
+        "translation": "繰り返しの頻度: {{ .RepeatMonth }}ヵ月毎の{{ .RepeatDays }} "
+    },
+    {
+        "id": "api.meeting.mail.repeat_frequency_month_week",
+        "translation": "繰り返しの頻度: {{ .RepeatMonth }}ヵ月毎の{{ .RepeatWeekDay }} "
+    },
+    {
+        "id": "api.meeting.mail.repeat_frequency_year_day",
+        "translation": "繰り返しの頻度: {{ .RepeatYear }}毎の{{ .RepeatDays }} "
+    },
+    {
+        "id": "api.meeting.mail.repeat_frequency_year_week",
+        "translation": "繰り返しの頻度: {{ .RepeatYear }}毎の{{ .RepeatWeekDay }} "
+    },
+    {
+        "id": "api.meeting.mail.repeat_over_none",
+        "translation": "繰り返しの終了: {{ .RepeatStartAtYear }}年{{ .RepeatStartAtMonth }}月{{ .RepeatStartAtDay }}日"
+    },
+    {
+        "id": "api.meeting.mail.repeat_over_date",
+        "translation": "繰り返しの終了: {{ .RepeatStartAtYear }}年{{ .RepeatStartAtMonth }}月{{ .RepeatStartAtDay }}日-{{ .RepeatEndAtYear }}年{{ .RepeatEndAtMonth }}月{{ .RepeatEndAtDay }}日"
+    },
+    {
+        "id": "api.meeting.mail.repeat_over_times",
+        "translation": "繰り返しの終了: {{ .RepeatStartAtYear }}年{{ .RepeatStartAtMonth }}月{{ .RepeatStartAtDay }}日 繰り返し回数:{{ .RepeatTimes }}回"
+    },
+    {
+        "id": "api.meeting.mail.startat",
+        "translation": "開始予定: {{ .StartAtYear }}/{{ .StartAtMonth }}/{{ .StartAtDay }} {{ .StartAtHour }}:{{ .StartAtMinute }}"
+    },
+    {
+        "id": "api.meeting.mail.endat",
+        "translation": "終了予定: {{ .EndAtYear }}/{{ .EndAtMonth }}/{{ .EndAtDay }} {{ .EndAtHour }}:{{ .EndAtMinute }}"
+    },
+    {
+        "id": "api.meeting.mail.nousers",
+        "translation": "招待者無し"
+    },
+    {
+        "id": "api.meeting.mail.delete_template",
+        "translation": "予約会議が、管理者によりキャンセルされました。<br/><br/>キャンセルされた予約会議情報<br/>会議名：{{ .MeetingName }}<br/>会議オーナー：{{ .HostName }}<br/>{{ .MeetingInfo }}<br/><br/>参加予定者：{{ .Users }}"
+    },
+    {
+        "id": "api.meeting.monday",
+        "translation": "月曜日"
+    },
+    {
+        "id": "api.meeting.tuesday",
+        "translation": "火曜日"
+    },
+    {
+        "id": "api.meeting.wednesday",
+        "translation": "水曜日"
+    },
+    {
+        "id": "api.meeting.thursday",
+        "translation": "木曜日"
+    },
+    {
+        "id": "api.meeting.friday",
+        "translation": "金曜日"
+    },
+    {
+        "id": "api.meeting.saturday",
+        "translation": "土曜日"
+    },
+    {
+        "id": "api.meeting.sunday",
+        "translation": "日曜日"
+    },
+    {
+        "id": "api.meeting.sikaku",
+        "translation": "■"
+    },
+    {
+        "id": "app.meeting.redis_connect_error",
+        "translation": "redis接続エラーが発生しました。"
+    },
+    {
+        "id": "app.meeting.redis_pass_error",
+        "translation": "redisパスワードエラーが発生しました。"
+    },
+    {
+        "id": "api.meeting.search.app_error",
+        "translation": "会議情報取得に失敗しました。"
+    },
+    {
+        "id": "api.meeting.server.app_error",
+        "translation": "システムエラーが発生しました、システム管理者に連絡してください。"
+    },
+    {
+        "id": "jp.co.ryobi.webconferencingsettingup_maxnumbermeeting_error",
+        "translation": "会議利用数制限設定の最大Web会議数が不正です。正の整数または0を指定してください。"
+    },
+    {
+        "id": "jp.co.ryobi.webconferencingsettingup_maxnumbermeetinguser_error",
+        "translation": "会議利用数制限設定のWeb会議毎最大参加者数が不正です。正の整数または0を指定してください。"
+    },
+    {
+        "id": "jp.co.ryobi.webconferencingsettingup_maxnumberallmeetinguser_error",
+        "translation": "会議利用数制限設定のWeb会議最大接続数が不正です。正の整数または0を指定してください。"
+    },
+    {
+        "id": "jp.co.ryobi.webconferencingsettingup_maxnumbermeetinguser_maxnumberallmeetinguser_error",
+        "translation": "web会議の最大参加者数はweb会議の最大接続数より小さくしてください。"
+    },
+    {
+        "id": "api.cron_chat.chat_delete_batch.startup",
+        "translation": "バッチ起動"
+    },
+    {
+        "id": "api.cron_chat.chat_delete_batch.start",
+        "translation": "チャット削除バッチ実行開始"
+    },
+    {
+        "id": "api.cron_chat.chat_delete_batch.end",
+        "translation": "チャット削除実行終了"
+    },
   {
     "id": "api.user.invalidate_verify_email_tokens.error",
     "translation": "電子メール確認トークンを無効にする際にタイプ別のトークンを取得できませんでした"
Index: channel_member.go
===================================================================
--- channel_member.go	(revision 4469)
+++ channel_member.go	(revision 4470)
@@ -19,6 +19,14 @@
 	IgnoreChannelMentionsOff        = "off"
 	IgnoreChannelMentionsOn         = "on"
 	IgnoreChannelMentionsNotifyProp = "ignore_channel_mentions"
+	/* Ryobi Systems CloudOffice Channel Mod 20210802 start */
+	NOTIFICATIONS_TO_CHANNEL_DEFAULT     = "default"
+	NOTIFICATIONS_TO_CHANNEL_OFF         = "off"
+	NOTIFICATIONS_TO_CHANNEL_ON          = "on"
+	NOTIFICATIONS_TO_CHANNEL_NOTIFY_PROP = "notifications_to_channel"
+	NOTIFICATIONS_TO_CHANNEL_COUNT_DEFAULT  =  "default"
+	NOTIFICATIONS_TO_CHANNEL_COUNT_NOTIFY_PROP = "notifications_to_channel_count"
+	/* Ryobi Systems CloudOffice Channel Mod 20210816 end */
 )
 
 type ChannelUnread struct {
@@ -230,5 +238,9 @@
 		PushNotifyProp:                  ChannelNotifyDefault,
 		EmailNotifyProp:                 ChannelNotifyDefault,
 		IgnoreChannelMentionsNotifyProp: IgnoreChannelMentionsDefault,
+		/* Ryobi Systems CloudOffice Channel Mod 20210802 start */
+		NOTIFICATIONS_TO_CHANNEL_NOTIFY_PROP: NOTIFICATIONS_TO_CHANNEL_DEFAULT,
+		NOTIFICATIONS_TO_CHANNEL_COUNT_NOTIFY_PROP: NOTIFICATIONS_TO_CHANNEL_COUNT_DEFAULT,
+		/* Ryobi Systems CloudOffice Channel Mod 20210816 end */
 	}
 }
Index: config.go
===================================================================
--- config.go	(revision 4469)
+++ config.go	(revision 4470)
@@ -1030,6 +1030,12 @@
 	DiscoveryEndpoint *string `access:"authentication_openid"` // telemetry: none
 	ButtonText        *string `access:"authentication_openid"` // telemetry: none
 	ButtonColor       *string `access:"authentication_openid"` // telemetry: none
+	/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201127 START */
+	UsersApiEndpoint    *string
+	ClientsApiEndpoint  *string
+	RealmEndpoint       *string
+	BackchannelEndpoint *string
+	/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201127 END */
 }
 
 func (s *SSOSettings) setDefaults(scope, authEndpoint, tokenEndpoint, userAPIEndpoint, buttonColor string) {
@@ -1072,6 +1078,22 @@
 	if s.ButtonColor == nil {
 		s.ButtonColor = NewString(buttonColor)
 	}
+	/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201202 START */
+	if s.UsersApiEndpoint == nil {
+		s.UsersApiEndpoint = NewString("")
+	}
+
+	if s.ClientsApiEndpoint == nil {
+		s.ClientsApiEndpoint = NewString("")
+	}
+
+	if s.RealmEndpoint == nil {
+		s.RealmEndpoint = NewString("")
+	}
+	if s.BackchannelEndpoint == nil {
+		s.BackchannelEndpoint = NewString("")
+	}
+	/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201202 END */
 }
 
 type Office365Settings struct {
@@ -1970,6 +1992,7 @@
 	EnableUserDeactivation    *bool   `access:"experimental_features"`
 	RestrictCreationToDomains *string `access:"authentication_signup"` // telemetry: none
 	EnableCustomUserStatuses  *bool   `access:"site_users_and_teams"`
+	EnableMultiTenancySupport *bool   `access:"site_users_and_teams"`
 	EnableCustomBrand         *bool   `access:"site_customization"`
 	CustomBrandText           *string `access:"site_customization"`
 	CustomDescriptionText     *string `access:"site_customization"`
@@ -1980,6 +2003,9 @@
 	MaxChannelsPerTeam                  *int64   `access:"site_users_and_teams"`
 	MaxNotificationsPerChannel          *int64   `access:"environment_push_notification_server"`
 	EnableConfirmNotificationsToChannel *bool    `access:"site_notifications"`
+	/* Ryobi Systems CloudOffice Channel Mod 20210802 start */
+	EnableConfirmNotificationsToChannelUserCount *int64 `access:"site_notifications"`
+	/* Ryobi Systems CloudOffice Channel Mod 20210816 end */
 	TeammateNameDisplay                 *string  `access:"site_users_and_teams"`
 	ExperimentalViewArchivedChannels    *bool    `access:"experimental_features,site_users_and_teams"`
 	ExperimentalEnableAutomaticReplies  *bool    `access:"experimental_features"`
@@ -2014,6 +2040,10 @@
 		s.EnableCustomUserStatuses = NewBool(true)
 	}
 
+	if s.EnableMultiTenancySupport == nil {
+		s.EnableMultiTenancySupport = NewBool(true)
+	}
+
 	if s.EnableLastActiveTime == nil {
 		s.EnableLastActiveTime = NewBool(true)
 	}
@@ -2054,6 +2084,12 @@
 		s.EnableConfirmNotificationsToChannel = NewBool(true)
 	}
 
+	/* Ryobi Systems CloudOffice Channel Mod 20210802 start */
+	if s.EnableConfirmNotificationsToChannelUserCount == nil {
+		s.EnableConfirmNotificationsToChannelUserCount = NewInt64(5)
+	}
+	/* Ryobi Systems CloudOffice Channel Mod 20210816 end */
+
 	if s.ExperimentalEnableAutomaticReplies == nil {
 		s.ExperimentalEnableAutomaticReplies = NewBool(false)
 	}
@@ -2909,7 +2945,32 @@
 		s.ChimeraOAuthProxyURL = NewString("")
 	}
 }
+func (s *PluginSettings) isValid() *AppError {
+	if _, ok := s.Plugins["jp.co.ryobi.webconferencingsettingup"]; !ok {
+		return nil
+	}
+	data := s.Plugins["jp.co.ryobi.webconferencingsettingup"]
+	maxnumbermeetingResult, _ := regexp.MatchString(`^\d+$`, data["maxnumbermeeting"].(string))
+	if !maxnumbermeetingResult {
+		return NewAppError("Config.IsValid", "jp.co.ryobi.webconferencingsettingup_maxnumbermeeting_error", nil, "", http.StatusBadRequest)
+	}
 
+	maxnumbermeetinguserResult, _ := regexp.MatchString(`^\d+$`, data["maxnumbermeetinguser"].(string))
+	if !maxnumbermeetinguserResult {
+		return NewAppError("Config.IsValid", "jp.co.ryobi.webconferencingsettingup_maxnumbermeetinguser_error", nil, "", http.StatusBadRequest)
+	}
+	maxnumberallmeetinguserResult, _ := regexp.MatchString(`^\d+$`, data["maxnumberallmeetinguser"].(string))
+	if !maxnumberallmeetinguserResult {
+		return NewAppError("Config.IsValid", "jp.co.ryobi.webconferencingsettingup_maxnumberallmeetinguser_error", nil, "", http.StatusBadRequest)
+	}
+	intMaxnumbermeetinguser, _ := strconv.Atoi(data["maxnumbermeetinguser"].(string))
+	intMaxnumberallmeetinguser, _ := strconv.Atoi(data["maxnumberallmeetinguser"].(string))
+	if intMaxnumberallmeetinguser != 0 && intMaxnumbermeetinguser > intMaxnumberallmeetinguser {
+		return NewAppError("Config.IsValid", "jp.co.ryobi.webconferencingsettingup_maxnumbermeetinguser_maxnumberallmeetinguser_error", nil, "", http.StatusBadRequest)
+	}
+
+	return nil
+}
 type GlobalRelayMessageExportSettings struct {
 	CustomerType      *string `access:"compliance_compliance_export"` // must be either A9 or A10, dictates SMTP server url
 	SMTPUsername      *string `access:"compliance_compliance_export"`
@@ -3044,7 +3105,56 @@
 		s.RemoteImageProxyOptions = NewString("")
 	}
 }
+type PostSaveSettings struct {
+	PostPermission       *bool
+	Postinput            *string
+	PostUtil             *string
+	FilePermission       *bool
+	Fileinput            *string
+	FileUtil             *string
+	DeleteTime           *int
+	ShowUserSettings     *bool
+	ShowUserFileSettings *bool
+}
 
+func (s *PostSaveSettings) SetDefaults() {
+	if s.PostPermission == nil {
+		s.PostPermission = NewBool(false)
+	}
+
+	if s.Postinput == nil || *s.Postinput == "" {
+		s.Postinput = NewString("3")
+	}
+
+	if s.PostUtil == nil || *s.PostUtil == "" {
+		s.PostUtil = NewString("year")
+	}
+
+	if s.FilePermission == nil {
+		s.FilePermission = NewBool(false)
+	}
+
+	if s.Fileinput == nil || *s.Fileinput == "" {
+		s.Fileinput = NewString("3")
+	}
+
+	if s.FileUtil == nil || *s.FileUtil == "" {
+		s.FileUtil = NewString("year")
+	}
+
+	if s.DeleteTime == nil {
+		s.DeleteTime = NewInt(13)
+	}
+
+	if s.ShowUserSettings == nil {
+		s.ShowUserSettings = NewBool(false)
+	}
+
+	if s.ShowUserFileSettings == nil {
+		s.ShowUserFileSettings = NewBool(false)
+	}
+}
+
 // ImportSettings defines configuration settings for file imports.
 type ImportSettings struct {
 	// The directory where to store the imported files.
@@ -3194,6 +3304,7 @@
 	FeatureFlags              *FeatureFlags  `access:"*_read" json:",omitempty"`
 	ImportSettings            ImportSettings // telemetry: none
 	ExportSettings            ExportSettings
+	PostSaveSettings          PostSaveSettings	
 }
 
 func (o *Config) Auditable() map[string]interface{} {
@@ -3309,6 +3420,7 @@
 	}
 	o.ImportSettings.SetDefaults()
 	o.ExportSettings.SetDefaults()
+	o.PostSaveSettings.SetDefaults()
 }
 
 func (o *Config) IsValid() *AppError {
@@ -3391,6 +3503,10 @@
 	if appErr := o.ImportSettings.isValid(); appErr != nil {
 		return appErr
 	}
+
+	if err := o.PluginSettings.isValid(); err != nil {
+		return err
+	}
 	return nil
 }
 
@@ -3419,6 +3535,12 @@
 		return NewAppError("Config.IsValid", "model.config.is_valid.sitename_length.app_error", map[string]any{"MaxLength": SitenameMaxLength}, "", http.StatusBadRequest)
 	}
 
+	/* Ryobi Systems CloudOffice Channel Mod 20210802 start */
+	if *s.EnableConfirmNotificationsToChannelUserCount <= 0 {
+		return NewAppError("Config.IsValid", "api.enable_confirm_notifications_to_channel_user_count_error", nil, "", http.StatusBadRequest)
+	}
+	/* Ryobi Systems CloudOffice Channel Mod 20210816 end */
+
 	return nil
 }
 
Index: file.go
===================================================================
--- file.go	(revision 4469)
+++ file.go	(revision 4470)
@@ -3,6 +3,8 @@
 
 package model
 
+import "encoding/json"
+
 const (
 	MaxImageSize = int64(6048 * 4032) // 24 megapixels, roughly 36MB as a raw image
 )
@@ -11,3 +13,43 @@
 	FileInfos []*FileInfo `json:"file_infos"`
 	ClientIds []string    `json:"client_ids"`
 }
+
+type FilePermission struct {
+	UserPermissionDownload string `json:"user_permission_download"`
+	UserPermissionUpload   bool   `json:"user_permission_upload"`
+}
+
+type ResponseFilePermission struct {
+	Status  string          `json:"status"`
+	Type    string          `json:"type"`
+	Message string          `json:"message"`
+	User    *FilePermission `json:"user"`
+}
+
+type ResponseFileTotalSize struct {
+	Status    string  `json:"status"`
+	Type      string  `json:"type"`
+	Message   string  `json:"message"`
+	TotalSize float64 `json:"total_size"`
+}
+
+type ResponseResultFile struct {
+	Status  string `json:"status"`
+	Type    string `json:"type"`
+	Message string `json:"message"`
+}
+
+func (o *ResponseFilePermission) ToJson() string {
+	b, _ := json.Marshal(o)
+	return string(b)
+}
+
+func (o *ResponseFileTotalSize) ToJson() string {
+	b, _ := json.Marshal(o)
+	return string(b)
+}
+
+func (o *ResponseResultFile) ToJson() string {
+	b, _ := json.Marshal(o)
+	return string(b)
+}
Index: gitlab.go
===================================================================
--- gitlab.go	(revision 4469)
+++ gitlab.go	(revision 4470)
@@ -7,7 +7,6 @@
 	"encoding/json"
 	"errors"
 	"io"
-	"strconv"
 	"strings"
 
 	"github.com/mattermost/mattermost-server/v6/einterfaces"
@@ -18,7 +17,7 @@
 }
 
 type GitLabUser struct {
-	Id       int64  `json:"id"`
+	Id       string `json:"id"`
 	Username string `json:"username"`
 	Login    string `json:"login"`
 	Email    string `json:"email"`
@@ -67,7 +66,7 @@
 }
 
 func (glu *GitLabUser) IsValid() error {
-	if glu.Id == 0 {
+	if len(glu.Id) == 0 || glu.Id == "0" {
 		return errors.New("user id can't be 0")
 	}
 
@@ -79,7 +78,7 @@
 }
 
 func (glu *GitLabUser) getAuthData() string {
-	return strconv.FormatInt(glu.Id, 10)
+	return glu.Id
 }
 
 func (m *GitLabProvider) GetUserFromJSON(data io.Reader, tokenUser *model.User) (*model.User, error) {
Index: session.go
===================================================================
--- session.go	(revision 4469)
+++ session.go	(revision 4470)
@@ -32,6 +32,7 @@
 	SessionPropIsGuest                = "is_guest"
 	SessionActivityTimeout            = 1000 * 60 * 5  // 5 minutes
 	SessionUserAccessTokenExpiryHours = 100 * 365 * 24 // 100 years
+	SESSION_USER_STATE                = "sessionState"	
 )
 
 //msgp:tuple StringMap
Index: slack_attachment.go
===================================================================
--- slack_attachment.go	(revision 4469)
+++ slack_attachment.go	(revision 4470)
@@ -118,6 +118,7 @@
 	Title string              `json:"title"`
 	Value any                 `json:"value"`
 	Short SlackCompatibleBool `json:"short"`
+	WebValue string           `json:"webValue"`
 }
 
 func (s *SlackAttachmentField) Equals(input *SlackAttachmentField) bool {
Index: status.go
===================================================================
--- status.go	(revision 4469)
+++ status.go	(revision 4470)
@@ -5,6 +5,7 @@
 
 import (
 	"encoding/json"
+	"io"
 )
 
 const (
@@ -13,6 +14,7 @@
 	StatusAway           = "away"
 	StatusDnd            = "dnd"
 	StatusOnline         = "online"
+	STATUS_MEETING       = "meeting"
 	StatusCacheSize      = SessionCacheSize
 	StatusChannelTimeout = 20000  // 20 seconds
 	StatusMinUpdateTime  = 120000 // 2 minutes
@@ -28,6 +30,14 @@
 	PrevStatus     string `json:"-"`
 }
 
+type SpecifiedStatus struct {
+	UserId         string `json:"user_id"`
+	Status         string `json:"status"`
+	Manual         bool   `json:"manual"`
+	LastActivityAt int64  `json:"last_activity_at"`
+	DNDEndTime     int64  `json:"dnd_end_time"`
+}
+
 func (s *Status) ToJSON() ([]byte, error) {
 	sCopy := *s
 	sCopy.ActiveChannel = ""
@@ -66,3 +76,8 @@
 	}
 	return interfaceMap
 }
+func SpecifiedStatusFromJson(data io.Reader) *SpecifiedStatus {
+	var o *SpecifiedStatus
+	json.NewDecoder(data).Decode(&o)
+	return o
+}
Index: team.go
===================================================================
--- team.go	(revision 4469)
+++ team.go	(revision 4470)
@@ -60,6 +60,14 @@
 	}
 }
 
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+type DefaultTeam struct {
+	Id                 string  `json:"id"`
+	CreateAt           int64   `json:"create_at"`
+	UpdateAt           int64   `json:"update_at"`
+}
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
+
 type TeamPatch struct {
 	DisplayName         *string `json:"display_name"`
 	Description         *string `json:"description"`
Index: user.go
===================================================================
--- user.go	(revision 4469)
+++ user.go	(revision 4470)
@@ -26,6 +26,7 @@
 	UserNotifyAll                  = "all"
 	UserNotifyHere                 = "here"
 	UserNotifyMention              = "mention"
+	CONTINUE_SHOW                  = "continue_show"
 	UserNotifyNone                 = "none"
 	DesktopNotifyProp              = "desktop"
 	DesktopSoundNotifyProp         = "desktop_sound"
@@ -214,6 +215,11 @@
 	Channels []string
 }
 
+// ToJson convert a User to a json string
+func (u *User) ToJson() string {
+	b, _ := json.Marshal(u)
+	return string(b)
+}
 func (r *ViewUsersRestrictions) Hash() string {
 	if r == nil {
 		return ""
@@ -549,6 +555,7 @@
 	u.NotifyProps[EmailNotifyProp] = "true"
 	u.NotifyProps[PushNotifyProp] = UserNotifyMention
 	u.NotifyProps[DesktopNotifyProp] = UserNotifyMention
+	u.NotifyProps[CONTINUE_SHOW] = "true"
 	u.NotifyProps[DesktopSoundNotifyProp] = "true"
 	u.NotifyProps[MentionKeysNotifyProp] = ""
 	u.NotifyProps[ChannelMentionsNotifyProp] = "true"
@@ -743,18 +750,25 @@
 	u.Props[UserPropsKeyCustomStatus] = ""
 }
 
+/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 START */
 func (u *User) GetFullName() string {
 	if u.FirstName != "" && u.LastName != "" {
-		return u.FirstName + " " + u.LastName
+		if u.Locale == "ja" {
+			return u.LastName + " " + u.FirstName
+		} else {
+			return u.FirstName + " " + u.LastName
+		}
 	} else if u.FirstName != "" {
 		return u.FirstName
 	} else if u.LastName != "" {
 		return u.LastName
 	} else {
-		return ""
+		return u.Username
 	}
 }
 
+/* Ryobi Systems CloudOffice Meeting Mod メール本文にIDを姓名に変更 20210609 END */
+
 func (u *User) getDisplayName(baseName, nameFormat string) string {
 	displayName := baseName
 
Index: utils.go
===================================================================
--- utils.go	(revision 4469)
+++ utils.go	(revision 4470)
@@ -250,6 +250,10 @@
 	wrapped       error
 }
 
+type UserStatusId struct {
+	Id string `json:"user_id"`
+}
+
 func (er *AppError) Error() string {
 	var sb strings.Builder
 
@@ -531,6 +535,19 @@
 	return b
 }
 
+// UserFromJson will decode the input and return a User
+func UserFromJson(data io.Reader) *User {
+	var user *User
+	json.NewDecoder(data).Decode(&user)
+	return user
+}
+
+func UserIdFromJson(data io.Reader) *UserStatusId {
+	var user *UserStatusId
+	json.NewDecoder(data).Decode(&user)
+	return user
+}
+
 func GetServerIPAddress(iface string) string {
 	var addrs []net.Addr
 	if iface == "" {
Index: api.go
===================================================================
--- api.go	(revision 4469)
+++ api.go	(revision 4470)
@@ -276,6 +276,15 @@
 	// Minimum server version: 5.8
 	UpdateUserActive(userID string, active bool) *model.AppError
 
+	/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201130 START */
+	// RevokeAllSessionsById will clear specific user's all sessions.
+	//
+	// @tag User
+	// Minimum server version: 5.8
+	RevokeAllSessionsById(userId string) *model.AppError
+	// delete session by userID sessionState
+	RevokeUserSessionById(userId string, sessionState string) *model.AppError
+	/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201130 END */
 	// UpdateUserCustomStatus will set a user's custom status until the user, or another integration/plugin, clear it or update the custom status.
 	// The custom status have two parameters: emoji icon and custom text.
 	//
@@ -284,6 +293,7 @@
 	UpdateUserCustomStatus(userID string, customStatus *model.CustomStatus) *model.AppError
 
 	// RemoveUserCustomStatus will remove a user's custom status.
+
 	//
 	// @tag User
 	// Minimum server version: 6.2
@@ -692,7 +702,20 @@
 	// @tag Post
 	// Minimum server version: 5.2
 	GetPost(postId string) (*model.Post, *model.AppError)
+	// GetPollFields gets the fields of a poll.
+	//
+	// @tag Post
+	GetPollFields(postId string) ([]*model.PollFields, *model.AppError)
 
+	// PollFieldsInsert Pollfields insert a field of a poll.
+	//
+	// @tag Post
+	PollFieldsInsert(field *model.PollFields) *model.AppError
+	// DeletePollFields   DELETE a field of a poll.
+	//
+	// @tag Post
+	DeletePollFields(userId string, postId string) *model.AppError
+
 	// GetPostsSince gets posts created after a specified time as Unix time in milliseconds.
 	//
 	// @tag Post
@@ -732,7 +755,11 @@
 	// @tag Post
 	// Minimum server version: 5.2
 	UpdatePost(post *model.Post) (*model.Post, *model.AppError)
+	// UpdatePostWithCachereRefresh @tag Post
+	// Minimum server version: 5.2
+	UpdatePostWithCachereRefresh(post *model.Post) (*model.Post, *model.AppError)
 
+	GetUsersInChannelPageByStatus(options *model.UserGetOptions, asAdmin bool) ([]*model.User, *model.AppError)
 	// GetProfileImage gets user's profile image.
 	//
 	// @tag User
@@ -1147,7 +1174,9 @@
 	//
 	// Minimum server version: 5.36
 	RequestTrialLicense(requesterID string, users int, termsAccepted bool, receiveEmailsAccepted bool) *model.AppError
-
+	/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+	GetFilesTotalSize() (float64, *model.AppError)
+	/* Ryobi Systems CloudOffice Files Mod 20211103 END */
 	// GetCloudLimits gets limits associated with a cloud workspace, if any
 	//
 	// Minimum server version: 7.0
Index: api_timer_layer_generated.go
===================================================================
--- api_timer_layer_generated.go	(revision 4469)
+++ api_timer_layer_generated.go	(revision 4470)
@@ -22,8 +22,10 @@
 }
 
 func (api *apiTimerLayer) RevokeUserSessionById(userId string, sessionState string) *model.AppError {
-	//TODO implement me
-	panic("implement me")
+	startTime := timePkg.Now()
+	_returnsA := api.apiImpl.RevokeUserSessionById(userId, sessionState)
+	api.recordTime(startTime, "RevokeUserSessionById", _returnsA == nil)
+	return _returnsA
 }
 
 func (api *apiTimerLayer) recordTime(startTime timePkg.Time, name string, success bool) {
@@ -327,6 +329,15 @@
 	return _returnsA
 }
 
+/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201130 START */
+func (api *apiTimerLayer) RevokeAllSessionsById(userId string) *model.AppError {
+	startTime := timePkg.Now()
+	_returnsA := api.apiImpl.RevokeAllSessionsById(userId)
+	api.recordTime(startTime, "RevokeAllSessionsById", _returnsA == nil)
+	return _returnsA
+}
+
+/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201130 END */
 func (api *apiTimerLayer) UpdateUserCustomStatus(userID string, customStatus *model.CustomStatus) *model.AppError {
 	startTime := timePkg.Now()
 	_returnsA := api.apiImpl.UpdateUserCustomStatus(userID, customStatus)
@@ -766,7 +777,18 @@
 	api.recordTime(startTime, "GetPost", _returnsB == nil)
 	return _returnsA, _returnsB
 }
-
+func (api *apiTimerLayer) GetPollFields(postId string) ([]*model.PollFields, *model.AppError) {
+	_returnsA, _returnsB := api.apiImpl.GetPollFields(postId)
+	return _returnsA, _returnsB
+}
+func (api *apiTimerLayer) PollFieldsInsert(field *model.PollFields) *model.AppError {
+	_returnsA := api.apiImpl.PollFieldsInsert(field)
+	return _returnsA
+}
+func (api *apiTimerLayer) DeletePollFields(userId string, postId string) *model.AppError {
+	_returnsA := api.apiImpl.DeletePollFields(userId, postId)
+	return _returnsA
+}
 func (api *apiTimerLayer) GetPostsSince(channelId string, time int64) (*model.PostList, *model.AppError) {
 	startTime := timePkg.Now()
 	_returnsA, _returnsB := api.apiImpl.GetPostsSince(channelId, time)
@@ -808,6 +830,18 @@
 	api.recordTime(startTime, "UpdatePost", _returnsB == nil)
 	return _returnsA, _returnsB
 }
+func (api *apiTimerLayer) UpdatePostWithCachereRefresh(post *model.Post) (*model.Post, *model.AppError) {
+	startTime := timePkg.Now()
+	_returnsA, _returnsB := api.apiImpl.UpdatePostWithCachereRefresh(post)
+	api.recordTime(startTime, "UpdatePost", _returnsB == nil)
+	return _returnsA, _returnsB
+}
+func (api *apiTimerLayer) GetUsersInChannelPageByStatus(options *model.UserGetOptions, asAdmin bool) ([]*model.User, *model.AppError) {
+	startTime := timePkg.Now()
+	_returnsA, _returnsB := api.apiImpl.GetUsersInChannelPageByStatus(options, asAdmin)
+	api.recordTime(startTime, "asAdmin", _returnsB == nil)
+	return _returnsA, _returnsB
+}
 
 func (api *apiTimerLayer) GetProfileImage(userID string) ([]byte, *model.AppError) {
 	startTime := timePkg.Now()
@@ -1272,3 +1306,13 @@
 	api.recordTime(startTime, "GetUploadSession", _returnsB == nil)
 	return _returnsA, _returnsB
 }
+
+/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+func (api *apiTimerLayer) GetFilesTotalSize() (float64, *model.AppError) {
+	startTime := timePkg.Now()
+	_returnsA, _returnsB := api.apiImpl.GetFilesTotalSize()
+	api.recordTime(startTime, "GetFilesTotalSize", true)
+	return _returnsA, _returnsB
+}
+
+/* Ryobi Systems CloudOffice Files Mod 20211103 END */
Index: client_rpc.go
===================================================================
--- client_rpc.go	(revision 4469)
+++ client_rpc.go	(revision 4470)
@@ -72,6 +72,11 @@
 	muxBroker *plugin.MuxBroker
 }
 
+func (g *apiRPCClient) GetFilesTotalSize() (float64, *model.AppError) {
+	//TODO implement me
+	panic("implement me")
+}
+
 type apiRPCServer struct {
 	impl      API
 	muxBroker *plugin.MuxBroker
Index: client_rpc_generated.go
===================================================================
--- client_rpc_generated.go	(revision 4469)
+++ client_rpc_generated.go	(revision 4470)
@@ -2209,6 +2209,67 @@
 	return nil
 }
 
+/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201130 START */
+type Z_RevokeAllSessionsByIdArgs struct {
+	A string
+}
+
+type Z_RevokeAllSessionsByIdReturns struct {
+	A *model.AppError
+}
+
+func (g *apiRPCClient) RevokeAllSessionsById(userId string) *model.AppError {
+	_args := &Z_RevokeAllSessionsByIdArgs{userId}
+	_returns := &Z_RevokeAllSessionsByIdReturns{}
+	if err := g.client.Call("Plugin.RevokeAllSessionsById", _args, _returns); err != nil {
+		log.Printf("RPC call to RevokeAllSessionsById API failed: %s", err.Error())
+	}
+	return _returns.A
+}
+
+func (s *apiRPCServer) RevokeAllSessionsById(args *Z_RevokeAllSessionsByIdArgs, returns *Z_RevokeAllSessionsByIdReturns) error {
+	if hook, ok := s.impl.(interface {
+		RevokeAllSessionsById(userId string) *model.AppError
+	}); ok {
+		returns.A = hook.RevokeAllSessionsById(args.A)
+	} else {
+		return encodableError(fmt.Errorf("API RevokeAllSessionsById called but not implemented."))
+	}
+	return nil
+}
+/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20201130 END */
+
+
+/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20211224 START */
+type Z_RevokeUserSessionByIdArgs struct {
+	A string
+	B string
+}
+
+type Z_RevokeUserSessionByIdReturns struct {
+	A *model.AppError
+}
+
+func (g *apiRPCClient) RevokeUserSessionById(userId string,sessionState string) *model.AppError {
+	_args := &Z_RevokeUserSessionByIdArgs{userId,sessionState}
+	_returns := &Z_RevokeUserSessionByIdReturns{}
+	if err := g.client.Call("Plugin.RevokeUserSessionById", _args, _returns); err != nil {
+		log.Printf("RPC call to RevokeUserSessionById API failed: %s", err.Error())
+	}
+	return _returns.A
+}
+
+func (s *apiRPCServer) RevokeUserSessionById(args *Z_RevokeUserSessionByIdArgs, returns *Z_RevokeUserSessionByIdReturns) error {
+	if hook, ok := s.impl.(interface {
+		RevokeUserSessionById(userId string,sessionState string) *model.AppError
+	}); ok {
+		returns.A = hook.RevokeUserSessionById(args.A,args.B)
+	} else {
+		return encodableError(fmt.Errorf("API RevokeUserSessionById called but not implemented."))
+	}
+	return nil
+}
+/* Ryobi Systems MM_NC_連動SSOログアウト Mod 20211224 END */
 type Z_UpdateUserCustomStatusArgs struct {
 	A string
 	B *model.CustomStatus
@@ -4060,6 +4121,35 @@
 	B *model.AppError
 }
 
+type Z_GetPollFieldsArgs struct {
+	A string
+}
+type Z_GetPostWithoutCacheArgsArgs struct {
+	A *model.Post
+}
+type Z_GetPostWithoutCacheArgsReturns struct {
+	A *model.Post
+	B *model.AppError
+}
+type Z_GetPollFieldArgs struct {
+	A *model.PollFields
+}
+type Z_GetPollFieldDeleteArgs struct {
+	A string
+	B string
+}
+
+type Z_GetPollFieldsReturns struct {
+	A []*model.PollFields
+	B *model.AppError
+}
+type Z_GetPollFieldReturns struct {
+	A *model.AppError
+}
+type Z_GetPollFieldDeleteReturns struct {
+	A *model.AppError
+}
+
 func (g *apiRPCClient) GetPost(postId string) (*model.Post, *model.AppError) {
 	_args := &Z_GetPostArgs{postId}
 	_returns := &Z_GetPostReturns{}
@@ -4080,6 +4170,63 @@
 	return nil
 }
 
+func (g *apiRPCClient) GetPollFields(postId string) ([]*model.PollFields, *model.AppError) {
+	_args := &Z_GetPollFieldsArgs{postId}
+	_returns := &Z_GetPollFieldsReturns{}
+	if err := g.client.Call("Plugin.GetPollFields", _args, _returns); err != nil {
+		log.Printf("RPC call to GetPollFields API failed: %s", err.Error())
+	}
+	return _returns.A, _returns.B
+}
+func (s *apiRPCServer) GetPollFields(args *Z_GetPollFieldsArgs, returns *Z_GetPollFieldsReturns) error {
+	if hook, ok := s.impl.(interface {
+		GetPollFields(postId string) ([]*model.PollFields, *model.AppError)
+	}); ok {
+		returns.A, returns.B = hook.GetPollFields(args.A)
+	} else {
+		return encodableError(fmt.Errorf("API GetPollFields called but not implemented."))
+	}
+	return nil
+}
+func (g *apiRPCClient) DeletePollFields(userId string, postId string) *model.AppError {
+	_args := &Z_GetPollFieldDeleteArgs{userId, postId}
+	_returns := &Z_GetPollFieldDeleteReturns{}
+	if err := g.client.Call("Plugin.DeletePollFields", _args, _returns); err != nil {
+		log.Printf("RPC call to DeletePollFields API failed: %s", err.Error())
+	}
+	return _returns.A
+}
+func (s *apiRPCServer) DeletePollFields(args *Z_GetPollFieldDeleteArgs, returns *Z_GetPollFieldDeleteReturns) error {
+	if hook, ok := s.impl.(interface {
+		DeletePollFields(userId string, postId string) *model.AppError
+	}); ok {
+		returns.A = hook.DeletePollFields(args.A, args.B)
+	} else {
+		return encodableError(fmt.Errorf("API DeletePollFields called but not implemented."))
+	}
+	return nil
+}
+
+func (g *apiRPCClient) PollFieldsInsert(field *model.PollFields) *model.AppError {
+	_args := &Z_GetPollFieldArgs{field}
+	_returns := &Z_GetPollFieldReturns{}
+	if err := g.client.Call("Plugin.PollFieldsInsert", _args, _returns); err != nil {
+		log.Printf("RPC call to PollFieldsInsert API failed: %s", err.Error())
+	}
+	return _returns.A
+}
+
+func (s *apiRPCServer) PollFieldsInsert(args *Z_GetPollFieldArgs, returns *Z_GetPollFieldReturns) error {
+	if hook, ok := s.impl.(interface {
+		PollFieldsInsert(field *model.PollFields) *model.AppError
+	}); ok {
+		returns.A = hook.PollFieldsInsert(args.A)
+	} else {
+		return encodableError(fmt.Errorf("API PollFieldsInsert called but not implemented."))
+	}
+	return nil
+}
+
 type Z_GetPostsSinceArgs struct {
 	A string
 	B int64
@@ -4262,7 +4409,55 @@
 	}
 	return nil
 }
+func (g *apiRPCClient) UpdatePostWithCachereRefresh(post *model.Post) (*model.Post, *model.AppError) {
+	_args := &Z_UpdatePostArgs{post}
+	_returns := &Z_UpdatePostReturns{}
+	if err := g.client.Call("Plugin.UpdatePostWithCachereRefresh", _args, _returns); err != nil {
+		log.Printf("RPC call to UpdatePostWithCachereRefresh API failed: %s", err.Error())
+	}
+	return _returns.A, _returns.B
+}
 
+func (s *apiRPCServer) UpdatePostWithCachereRefresh(args *Z_UpdatePostArgs, returns *Z_UpdatePostReturns) error {
+	if hook, ok := s.impl.(interface {
+		UpdatePostWithCachereRefresh(post *model.Post) (*model.Post, *model.AppError)
+	}); ok {
+		returns.A, returns.B = hook.UpdatePostWithCachereRefresh(args.A)
+	} else {
+		return encodableError(fmt.Errorf("API UpdatePostWithCachereRefresh called but not implemented."))
+	}
+	return nil
+}
+
+func (g *apiRPCClient) GetUsersInChannelPageByStatus(options *model.UserGetOptions, asAdmin bool) ([]*model.User, *model.AppError) {
+	_args := &Z_GetChannelUsersArgs{options, asAdmin}
+	_returns := &Z_GetChannelUsersReturns{}
+	if err := g.client.Call("Plugin.GetUsersInChannelPageByStatus", _args, _returns); err != nil {
+		log.Printf("RPC call to GetUsersInChannelPageByStatus API failed: %s", err.Error())
+	}
+	return _returns.A, _returns.B
+}
+
+func (s *apiRPCServer) GetUsersInChannelPageByStatus(args *Z_GetChannelUsersArgs, returns *Z_GetChannelUsersReturns) error {
+	if hook, ok := s.impl.(interface {
+		GetUsersInChannelPageByStatus(options *model.UserGetOptions, asAdmin bool) ([]*model.User, *model.AppError)
+	}); ok {
+		returns.A, returns.B = hook.GetUsersInChannelPageByStatus(args.A, args.B)
+	} else {
+		return encodableError(fmt.Errorf("API GetUsersInChannelPageByStatus called but not implemented."))
+	}
+	return nil
+}
+
+type Z_GetChannelUsersArgs struct {
+	A *model.UserGetOptions
+	B bool
+}
+
+type Z_GetChannelUsersReturns struct {
+	A []*model.User
+	B *model.AppError
+}
 type Z_GetProfileImageArgs struct {
 	A string
 }
Index: api.go
===================================================================
--- api.go	(revision 4469)
+++ api.go	(revision 4470)
@@ -3615,6 +3615,31 @@
 	return r0, r1
 }
 
+// UpdatePost provides a mock function with given fields: post
+func (_m *API) UpdatePostWithCachereRefresh(post *model.Post) (*model.Post, *model.AppError) {
+	ret := _m.Called(post)
+
+	var r0 *model.Post
+	if rf, ok := ret.Get(0).(func(*model.Post) *model.Post); ok {
+		r0 = rf(post)
+	} else {
+		if ret.Get(0) != nil {
+			r0 = ret.Get(0).(*model.Post)
+		}
+	}
+
+	var r1 *model.AppError
+	if rf, ok := ret.Get(1).(func(*model.Post) *model.AppError); ok {
+		r1 = rf(post)
+	} else {
+		if ret.Get(1) != nil {
+			r1 = ret.Get(1).(*model.AppError)
+		}
+	}
+
+	return r0, r1
+}
+
 // UpdatePreferencesForUser provides a mock function with given fields: userID, preferences
 func (_m *API) UpdatePreferencesForUser(userID string, preferences []model.Preference) *model.AppError {
 	ret := _m.Called(userID, preferences)
Index: telemetry.go
===================================================================
--- telemetry.go	(revision 4469)
+++ telemetry.go	(revision 4470)
@@ -472,6 +472,9 @@
 		"restrict_direct_message":                 *cfg.TeamSettings.RestrictDirectMessage,
 		"max_notifications_per_channel":           *cfg.TeamSettings.MaxNotificationsPerChannel,
 		"enable_confirm_notifications_to_channel": *cfg.TeamSettings.EnableConfirmNotificationsToChannel,
+		/* Ryobi Systems CloudOffice Channel Mod 20210802 start */
+		"enable_confirm_notifications_to_channel_user_count": *cfg.TeamSettings.EnableConfirmNotificationsToChannelUserCount,
+		/* Ryobi Systems CloudOffice Channel Mod 20210816 end */
 		"max_users_per_team":                      *cfg.TeamSettings.MaxUsersPerTeam,
 		"max_channels_per_team":                   *cfg.TeamSettings.MaxChannelsPerTeam,
 		"teammate_name_display":                   *cfg.TeamSettings.TeammateNameDisplay,
Index: mail.go
===================================================================
--- mail.go	(revision 4469)
+++ mail.go	(revision 4470)
@@ -259,6 +259,26 @@
 	return SendMailWithEmbeddedFilesUsingConfig(to, subject, htmlBody, nil, config, enableComplianceFeatures, messageID, inReplyTo, references, ccMail)
 }
 
+/* Ryobi Systems CloudOffice Meeting Mod 20210506 START */
+func SendMeetingMail(to, subject, htmlBody string, embeddedFiles map[string]io.Reader, config *SMTPConfig, ccMail string, fromMail mail.Address) error {
+	replyTo := mail.Address{Name: config.FeedbackName, Address: config.ReplyToAddress}
+
+	mail := mailData{
+		mimeTo:        to,
+		smtpTo:        to,
+		from:          fromMail,
+		cc:            ccMail,
+		replyTo:       replyTo,
+		subject:       subject,
+		htmlBody:      htmlBody,
+		embeddedFiles: embeddedFiles,
+	}
+
+	return sendMailUsingConfigAdvanced(mail, config)
+}
+
+/* Ryobi Systems CloudOffice Meeting Mod 20210506 END */
+
 // allows for sending an email with differing MIME/SMTP recipients
 func sendMailUsingConfigAdvanced(mail mailData, config *SMTPConfig) error {
 	if config.Server == "" {
Index: opentracinglayer.go
===================================================================
--- opentracinglayer.go	(revision 4469)
+++ opentracinglayer.go	(revision 4470)
@@ -6695,9 +6695,9 @@
 	return result, err
 }
 
-func (s *OpenTracingLayerPostAcknowledgementStore) Delete(acknowledgement *model.PostAcknowledgement) error {
+func (s *OpenTracingLayerPostStore) UpdatePostWithCachereRefresh(post *model.Post) (*model.Post, error) {
 	origCtx := s.Root.Store.Context()
-	span, newCtx := tracing.StartSpanWithParentByContext(s.Root.Store.Context(), "PostAcknowledgementStore.Delete")
+	span, newCtx := tracing.StartSpanWithParentByContext(s.Root.Store.Context(), "PostStore.Update")
 	s.Root.Store.SetContext(newCtx)
 	defer func() {
 		s.Root.Store.SetContext(origCtx)
@@ -6704,36 +6704,18 @@
 	}()
 
 	defer span.Finish()
-	err := s.PostAcknowledgementStore.Delete(acknowledgement)
+	result, err := s.PostStore.UpdatePostWithCachereRefresh(post)
 	if err != nil {
 		span.LogFields(spanlog.Error(err))
 		ext.Error.Set(span, true)
 	}
 
-	return err
-}
-
-func (s *OpenTracingLayerPostAcknowledgementStore) Get(postID string, userID string) (*model.PostAcknowledgement, error) {
-	origCtx := s.Root.Store.Context()
-	span, newCtx := tracing.StartSpanWithParentByContext(s.Root.Store.Context(), "PostAcknowledgementStore.Get")
-	s.Root.Store.SetContext(newCtx)
-	defer func() {
-		s.Root.Store.SetContext(origCtx)
-	}()
-
-	defer span.Finish()
-	result, err := s.PostAcknowledgementStore.Get(postID, userID)
-	if err != nil {
-		span.LogFields(spanlog.Error(err))
-		ext.Error.Set(span, true)
-	}
-
 	return result, err
 }
 
-func (s *OpenTracingLayerPostAcknowledgementStore) GetForPost(postID string) ([]*model.PostAcknowledgement, error) {
+func (s *OpenTracingLayerUserStore) GetUsersInChannelPageByStatus(options *model.UserGetOptions, asAdmin bool) ([]*model.User, error) {
 	origCtx := s.Root.Store.Context()
-	span, newCtx := tracing.StartSpanWithParentByContext(s.Root.Store.Context(), "PostAcknowledgementStore.GetForPost")
+	span, newCtx := tracing.StartSpanWithParentByContext(s.Root.Store.Context(), "PostStore.Update")
 	s.Root.Store.SetContext(newCtx)
 	defer func() {
 		s.Root.Store.SetContext(origCtx)
@@ -6740,7 +6722,7 @@
 	}()
 
 	defer span.Finish()
-	result, err := s.PostAcknowledgementStore.GetForPost(postID)
+	result, err := s.UserStore.GetProfilesInChannelByStatus(options)
 	if err != nil {
 		span.LogFields(spanlog.Error(err))
 		ext.Error.Set(span, true)
@@ -6749,78 +6731,6 @@
 	return result, err
 }
 
-func (s *OpenTracingLayerPostAcknowledgementStore) GetForPosts(postIds []string) ([]*model.PostAcknowledgement, error) {
-	origCtx := s.Root.Store.Context()
-	span, newCtx := tracing.StartSpanWithParentByContext(s.Root.Store.Context(), "PostAcknowledgementStore.GetForPosts")
-	s.Root.Store.SetContext(newCtx)
-	defer func() {
-		s.Root.Store.SetContext(origCtx)
-	}()
-
-	defer span.Finish()
-	result, err := s.PostAcknowledgementStore.GetForPosts(postIds)
-	if err != nil {
-		span.LogFields(spanlog.Error(err))
-		ext.Error.Set(span, true)
-	}
-
-	return result, err
-}
-
-func (s *OpenTracingLayerPostAcknowledgementStore) Save(postID string, userID string, acknowledgedAt int64) (*model.PostAcknowledgement, error) {
-	origCtx := s.Root.Store.Context()
-	span, newCtx := tracing.StartSpanWithParentByContext(s.Root.Store.Context(), "PostAcknowledgementStore.Save")
-	s.Root.Store.SetContext(newCtx)
-	defer func() {
-		s.Root.Store.SetContext(origCtx)
-	}()
-
-	defer span.Finish()
-	result, err := s.PostAcknowledgementStore.Save(postID, userID, acknowledgedAt)
-	if err != nil {
-		span.LogFields(spanlog.Error(err))
-		ext.Error.Set(span, true)
-	}
-
-	return result, err
-}
-
-func (s *OpenTracingLayerPostPriorityStore) GetForPost(postId string) (*model.PostPriority, error) {
-	origCtx := s.Root.Store.Context()
-	span, newCtx := tracing.StartSpanWithParentByContext(s.Root.Store.Context(), "PostPriorityStore.GetForPost")
-	s.Root.Store.SetContext(newCtx)
-	defer func() {
-		s.Root.Store.SetContext(origCtx)
-	}()
-
-	defer span.Finish()
-	result, err := s.PostPriorityStore.GetForPost(postId)
-	if err != nil {
-		span.LogFields(spanlog.Error(err))
-		ext.Error.Set(span, true)
-	}
-
-	return result, err
-}
-
-func (s *OpenTracingLayerPostPriorityStore) GetForPosts(ids []string) ([]*model.PostPriority, error) {
-	origCtx := s.Root.Store.Context()
-	span, newCtx := tracing.StartSpanWithParentByContext(s.Root.Store.Context(), "PostPriorityStore.GetForPosts")
-	s.Root.Store.SetContext(newCtx)
-	defer func() {
-		s.Root.Store.SetContext(origCtx)
-	}()
-
-	defer span.Finish()
-	result, err := s.PostPriorityStore.GetForPosts(ids)
-	if err != nil {
-		span.LogFields(spanlog.Error(err))
-		ext.Error.Set(span, true)
-	}
-
-	return result, err
-}
-
 func (s *OpenTracingLayerPreferenceStore) CleanupFlagsBatch(limit int64) (int64, error) {
 	origCtx := s.Root.Store.Context()
 	span, newCtx := tracing.StartSpanWithParentByContext(s.Root.Store.Context(), "PreferenceStore.CleanupFlagsBatch")
Index: retrylayer.go
===================================================================
--- retrylayer.go	(revision 4469)
+++ retrylayer.go	(revision 4470)
@@ -64,6 +64,7 @@
 	UserAccessTokenStore      store.UserAccessTokenStore
 	UserTermsOfServiceStore   store.UserTermsOfServiceStore
 	WebhookStore              store.WebhookStore
+	PollFieldsStore           store.PollFieldsStore
 }
 
 func (s *RetryLayer) Audit() store.AuditStore {
@@ -238,7 +239,10 @@
 	store.AuditStore
 	Root *RetryLayer
 }
-
+type RetryLayerPollFieldsStore struct {
+	store.PollFieldsStore
+	Root *RetryLayer
+}
 type RetryLayerBotStore struct {
 	store.BotStore
 	Root *RetryLayer
@@ -7582,6 +7586,26 @@
 
 }
 
+func (s *RetryLayerPostStore) UpdatePostWithCachereRefresh(post *model.Post) (*model.Post, error) {
+
+	tries := 0
+	for {
+		result, err := s.PostStore.UpdatePostWithCachereRefresh(post)
+		if err == nil {
+			return result, nil
+		}
+		if !isRepeatableError(err) {
+			return result, err
+		}
+		tries++
+		if tries >= 3 {
+			err = errors.Wrap(err, "giving up after 3 consecutive repeatable transaction failures")
+			return result, err
+		}
+	}
+
+}
+
 func (s *RetryLayerPostAcknowledgementStore) Delete(acknowledgement *model.PostAcknowledgement) error {
 
 	tries := 0
@@ -14666,7 +14690,7 @@
 	newStore := RetryLayer{
 		Store: childStore,
 	}
-
+	newStore.PollFieldsStore = &RetryLayerPollFieldsStore{PollFieldsStore: childStore.PollField(), Root: &newStore}
 	newStore.AuditStore = &RetryLayerAuditStore{AuditStore: childStore.Audit(), Root: &newStore}
 	newStore.BotStore = &RetryLayerBotStore{BotStore: childStore.Bot(), Root: &newStore}
 	newStore.ChannelStore = &RetryLayerChannelStore{ChannelStore: childStore.Channel(), Root: &newStore}
Index: file_info_store.go
===================================================================
--- file_info_store.go	(revision 4469)
+++ file_info_store.go	(revision 4470)
@@ -115,7 +115,11 @@
 	if err := info.IsValid(); err != nil {
 		return nil, err
 	}
-
+	/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+	if info.IsImage() {
+		info.HasPreviewImage = false
+	}
+	/* Ryobi Systems CloudOffice Files Mod 20211103 END */
 	query := `
 		INSERT INTO FileInfo
 		(Id, CreatorId, PostId, CreateAt, UpdateAt, DeleteAt, Path, ThumbnailPath, PreviewPath,
@@ -799,3 +803,19 @@
 
 	return createAt, nil
 }
+
+func (fs SqlFileInfoStore) GetFileTotalSize() (int64, error) {
+	var size int64
+
+	query := fs.getQueryBuilder().
+		Select("SUM(Size)").
+		From("FileInfo").
+		Where("DeleteAt = 0")
+	
+	
+	err := fs.GetReplicaX().GetBuilder(&size, query)
+	if err != nil {
+		return int64(0), errors.Wrap(err, "failed to get storage usage")
+	}
+	return size, nil
+}
Index: post_store.go
===================================================================
--- post_store.go	(revision 4469)
+++ post_store.go	(revision 4470)
@@ -30,6 +30,7 @@
 	metrics           einterfaces.MetricsInterface
 	maxPostSizeOnce   sync.Once
 	maxPostSizeCached int
+	sqlPost           sq.UpdateBuilder
 }
 
 type postWithExtra struct {
@@ -126,13 +127,23 @@
 }
 
 func newSqlPostStore(sqlStore *SqlStore, metrics einterfaces.MetricsInterface) store.PostStore {
-	return &SqlPostStore{
+	s := &SqlPostStore{
 		SqlStore:          sqlStore,
 		metrics:           metrics,
 		maxPostSizeCached: model.PostMessageMaxRunesV1,
 	}
+	s.sqlPost = s.getQueryBuilder().
+		Update("Post")
+	return s
 }
 
+/* Ryobi Systems CloudOffice post Mod 20211203 START */
+//func (s *SqlPostStore) updateFullindexesForPost() {
+//	s.updateFullindexForPost("idx_posts_message_txt", "Posts", []string{"Message"})
+//}
+
+/* Ryobi Systems CloudOffice post Mod 20211203 START */
+
 func (s *SqlPostStore) SaveMultiple(posts []*model.Post) ([]*model.Post, int, error) {
 	channelNewPosts := make(map[string]int)
 	channelNewRootPosts := make(map[string]int)
@@ -391,6 +402,15 @@
 	return newPost, nil
 }
 
+func (s *SqlPostStore) UpdatePostWithCachereRefresh(post *model.Post) (*model.Post, error) {
+	_, err := s.GetMasterX().Exec("UPDATE Posts SET Props = :Props  WHERE Id = :Id", map[string]interface{}{"Props": model.StringInterfaceToJSON(post.GetProps()), "Id": post.Id})
+	if err != nil {
+		mlog.Warn("Error updating Post .", mlog.Err(err))
+	}
+	return post, err
+
+}
+
 func (s *SqlPostStore) OverwriteMultiple(posts []*model.Post) (_ []*model.Post, _ int, err error) {
 	updateAt := model.GetMillis()
 	maxPostSize := s.GetMaxPostSize()
@@ -1199,11 +1219,13 @@
 	parents := cpr.Data.([]*model.Post)
 
 	for _, p := range posts {
+		p = replaceFieldsIfNecessary(p, s)
 		list.AddPost(p)
 		list.AddOrder(p.Id)
 	}
 
 	for _, p := range parents {
+		p = replaceFieldsIfNecessary(p, s)
 		list.AddPost(p)
 	}
 
@@ -1212,6 +1234,55 @@
 	return list, nil
 }
 
+func replaceFieldsIfNecessary(p *model.Post, s *SqlPostStore) *model.Post {
+	if len(p.Attachments()) == 0 {
+		return p
+	}
+	anonymous, _ := p.GetProp("anonymous").(bool)
+	status, _ := p.GetProp("status").(string)
+	attachment := p.Attachments()[0]
+	var postId string
+	if p.OriginalId != "" {
+		postId = p.OriginalId
+	} else {
+		postId = p.Id
+	}
+	pollFields, _ := s.PollField().GetPollFields(postId)
+	if len(pollFields) == 0 {
+		return p
+	}
+	model.ParseSlackAttachment(p, getReplaceAttachment(attachment, pollFields, anonymous, status))
+	return p
+}
+
+func getReplaceAttachment(attachment *model.SlackAttachment, fields []*model.PollFields, anonymous bool, status string) []*model.SlackAttachment {
+	pollFields := []*model.SlackAttachmentField{}
+	for _, field := range fields {
+		value := field.Voter
+		webValue := field.Voter
+		if status != "end" {
+			webValue = ""
+			value = ""
+		}
+		if anonymous {
+			webValue = ""
+			value = ""
+		}
+		pollFields = append(pollFields, &model.SlackAttachmentField{
+			Short:    true,
+			Title:    field.Answer,
+			Value:    value,
+			WebValue: webValue,
+		})
+	}
+	return []*model.SlackAttachment{{
+		AuthorName: attachment.AuthorName,
+		Title:      attachment.Title,
+		Text:       attachment.Text,
+		Actions:    attachment.Actions,
+		Fields:     pollFields,
+	}}
+}
 func (s *SqlPostStore) getPostsSinceCollapsedThreads(options model.GetPostsSinceOptions, sanitizeOptions map[string]bool) (*model.PostList, error) {
 	var columns []string
 	for _, c := range postSliceColumns() {
@@ -2091,6 +2162,7 @@
 					continue
 				}
 			}
+			p = replaceFieldsIfNecessary(p, s)
 			list.AddPost(p)
 			list.AddOrder(p.Id)
 		}
@@ -2725,7 +2797,11 @@
 			return nil, result.NErr
 		}
 		data := result.Data.(*model.PostList)
-		posts.Extend(data)
+		for _, p := range data.Posts {
+			p = replaceFieldsIfNecessary(p, s)
+			posts.AddPost(p)
+			posts.AddOrder(p.Id)
+		}
 	}
 
 	posts.SortByCreateAt()
Index: session_store.go
===================================================================
--- session_store.go	(revision 4469)
+++ session_store.go	(revision 4470)
@@ -27,7 +27,26 @@
 func newSqlSessionStore(sqlStore *SqlStore) store.SessionStore {
 	return &SqlSessionStore{sqlStore}
 }
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+func (me SqlSessionStore) SqlDeleteDefaultTeam() error {
+	me.Team().DeleteDefaultTeam()
+	return nil
+}
 
+func (me SqlSessionStore) SqlSaveDefaultTeam(DefaultTeam *model.DefaultTeam) {
+	me.Team().SaveDefaultTeam(DefaultTeam)
+	return
+}
+
+func (me SqlSessionStore) SqlGetDefaultTeam() (string, error) {
+	DefaultTeam, err := me.Team().GetDefaultTeam()
+	if err != nil {
+		return DefaultTeam, errors.Wrapf(err, "failed to find TeamMembers for Session with userId=%s")
+	}
+	return DefaultTeam, nil
+}
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
 func (me SqlSessionStore) Save(session *model.Session) (*model.Session, error) {
 	if session.Id != "" {
 		return nil, store.NewErrInvalidInput("Session", "id", session.Id)
Index: sqlx_wrapper.go
===================================================================
--- sqlx_wrapper.go	(revision 4469)
+++ sqlx_wrapper.go	(revision 4470)
@@ -457,5 +457,4 @@
 	for i, arg := range args {
 		fields = append(fields, mlog.Any("arg"+strconv.Itoa(i), arg))
 	}
-	mlog.Debug(query, fields...)
 }
Index: store.go
===================================================================
--- store.go	(revision 4469)
+++ store.go	(revision 4470)
@@ -71,13 +71,23 @@
 var tablesToCheckForCollation = []string{"incomingwebhooks", "preferences", "users", "uploadsessions", "channels", "publicchannels"}
 
 type SqlStoreStores struct {
-	team                 store.TeamStore
-	channel              store.ChannelStore
-	post                 store.PostStore
-	retentionPolicy      store.RetentionPolicyStore
-	thread               store.ThreadStore
-	user                 store.UserStore
-	bot                  store.BotStore
+	team            store.TeamStore
+	channel         store.ChannelStore
+	post            store.PostStore
+	retentionPolicy store.RetentionPolicyStore
+	thread          store.ThreadStore
+	user            store.UserStore
+	bot             store.BotStore
+	meeting         store.MeetingStore
+	/* Ryobi Systems CloudOffice MeetingMng Mod 20210617 START */
+	meetingMng store.MeetingMngStore
+	/* Ryobi Systems CloudOffice MeetingMng Mod 20210617 END */
+	/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 START */
+	meetingstatus store.MeetingStatusStore
+	/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 END */
+	/* Ryobi Systems CloudOffice CronChat Mod 20211129 START */
+	cronChat store.CronChatStore
+	/* Ryobi Systems CloudOffice CronChat Mod 20211129 END */
 	audit                store.AuditStore
 	cluster              store.ClusterDiscoveryStore
 	remoteCluster        store.RemoteClusterStore
@@ -113,6 +123,7 @@
 	postPriority         store.PostPriorityStore
 	postAcknowledgement  store.PostAcknowledgementStore
 	trueUpReview         store.TrueUpReviewStore
+	pollFields           store.PollFieldsStore
 }
 
 type SqlStore struct {
@@ -140,6 +151,10 @@
 	pgDefaultTextSearchConfig string
 }
 
+func (ss *SqlStore) PollField() store.PollFieldsStore {
+	return ss.stores.pollFields
+}
+
 func New(settings model.SqlSettings, metrics einterfaces.MetricsInterface) *SqlStore {
 	store := &SqlStore{
 		rrCounter: 0,
@@ -186,6 +201,17 @@
 	store.stores.retentionPolicy = newSqlRetentionPolicyStore(store, metrics)
 	store.stores.user = newSqlUserStore(store, metrics)
 	store.stores.bot = newSqlBotStore(store, metrics)
+	store.stores.meeting = newSqlMeetingStore(store, metrics)
+	/* Ryobi Systems CloudOffice MeetingMng Mod 20210325 START */
+	store.stores.meetingMng = newSqlMeetingMngStore(store, metrics)
+	/* Ryobi Systems CloudOffice MeetingMng Mod 20210325 END */
+	store.stores.pollFields = newSqlPollFields(store, metrics)
+	/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 START */
+	store.stores.meetingstatus = newSqlMeetingStatusStore(store, metrics)
+	/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 END */
+	/* Ryobi Systems CloudOffice CronChat Mod 20211129 START */
+	store.stores.cronChat = newSqlCronChatStore(store, metrics)
+	/* Ryobi Systems CloudOffice CronChat Mod 20211129 END */
 	store.stores.audit = newSqlAuditStore(store)
 	store.stores.cluster = newSqlClusterDiscoveryStore(store)
 	store.stores.remoteCluster = newSqlRemoteClusterStore(store)
@@ -1284,3 +1310,29 @@
 
 	return migrations, nil
 }
+/* Ryobi Systems CloudOffice Meeting Mod 20210325 START */
+func (ss *SqlStore) Meeting() store.MeetingStore {
+	return ss.stores.meeting
+}
+
+/* Ryobi Systems CloudOffice Meeting Mod 20210325 END */
+/* Ryobi Systems CloudOffice MeetingMng Mod 20210617 START */
+func (ss *SqlStore) MeetingMng() store.MeetingMngStore {
+	return ss.stores.meetingMng
+}
+
+/* Ryobi Systems CloudOffice MeetingMng Mod 20210617 END */
+
+/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 START */
+func (ss *SqlStore) MeetingStatus() store.MeetingStatusStore {
+	return ss.stores.meetingstatus
+}
+
+/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 END */
+
+/* Ryobi Systems CloudOffice CronChat Mod 20211129 START */
+func (ss *SqlStore) CronChat() store.CronChatStore {
+	return ss.stores.cronChat
+}
+
+/* Ryobi Systems CloudOffice CronChat Mod 20211129 END */
Index: team_store.go
===================================================================
--- team_store.go	(revision 4469)
+++ team_store.go	(revision 4470)
@@ -7,6 +7,7 @@
 	"context"
 	"database/sql"
 	"fmt"
+	"net/http"
 	"strings"
 
 	sq "github.com/mattermost/squirrel"
@@ -51,6 +52,14 @@
 	}
 }
 
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+type DefaultTeamWithSchemeRoles struct {
+	Id string
+}
+type DefaultTeamWithSchemeRolesList []DefaultTeamWithSchemeRoles
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
+
 type teamMemberWithSchemeRoles struct {
 	TeamId                     string
 	UserId                     string
@@ -71,6 +80,12 @@
 	return []string{"TeamId", "UserId", "Roles", "DeleteAt", "SchemeUser", "SchemeAdmin", "SchemeGuest", "CreateAt"}
 }
 
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+func DefaultTeamSliceColumns() []string {
+	return []string{"id", "CreateAt", "UpdateAt"}
+}
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
 func teamMemberToSlice(member *model.TeamMember) []any {
 	resultSlice := []any{}
 	resultSlice = append(resultSlice, member.TeamId)
@@ -84,6 +99,17 @@
 	return resultSlice
 }
 
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+func DefaultTeamToSlice(member *model.DefaultTeam) []interface{} {
+	resultSlice := []interface{}{}
+	resultSlice = append(resultSlice, member.Id)
+	resultSlice = append(resultSlice, member.CreateAt)
+	resultSlice = append(resultSlice, member.UpdateAt)
+	return resultSlice
+}
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
+
 func wildcardSearchTerm(term string) string {
 	return strings.ToLower("%" + term + "%")
 }
@@ -214,6 +240,7 @@
 	s.teamsQuery = s.getQueryBuilder().
 		Select("Teams.*").
 		From("Teams")
+
 	return s
 }
 
@@ -722,6 +749,33 @@
 		LeftJoin("Schemes TeamScheme ON Teams.SchemeId = TeamScheme.Id")
 }
 
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+func (s SqlTeamStore) getDefaultTeamMembersWithSchemeSelectQuery() sq.SelectBuilder {
+	return s.getQueryBuilder().
+		Select(
+			"Id",
+		).
+		From("DefaultTeam")
+}
+
+func (s SqlTeamStore) SaveDefaultTeam(DefaultTeam *model.DefaultTeam) {
+
+	query := s.getQueryBuilder().Insert("DefaultTeam").Columns(DefaultTeamSliceColumns()...)
+	query = query.Values(DefaultTeamToSlice(DefaultTeam)...)
+
+	sql, args, err := query.ToSql()
+	if err != nil {
+		return
+	}
+	_, err = s.GetMasterX().Exec(sql, args...)
+	if err != nil {
+		return
+	}
+	return
+}
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
+
 func (s SqlTeamStore) SaveMultipleMembers(members []*model.TeamMember, maxUsersPerTeam int) ([]*model.TeamMember, error) {
 	newTeamMembers := map[string]int{}
 	users := map[string]bool{}
@@ -1094,6 +1148,36 @@
 	return dbMembers.ToModel(), nil
 }
 
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+func (s SqlTeamStore) GetDefaultTeam() (string, *model.AppError) {
+	errDefaultTeam := ""
+
+	query := s.getDefaultTeamMembersWithSchemeSelectQuery()
+
+	queryString, args, err := query.ToSql()
+
+	if err != nil {
+
+		return errDefaultTeam, model.NewAppError("SqlDefaultTeamStore", "store.sql_team.get_members.app_error", nil, err.Error(), http.StatusInternalServerError)
+	}
+
+	var dbDefaultTeam DefaultTeamWithSchemeRolesList
+	err = s.GetReplicaX().Select(&dbDefaultTeam, queryString, args...)
+
+	if err != nil {
+
+		return errDefaultTeam, model.NewAppError("SqlDefaultTeamStore", "store.sql_team.get_members.app_error", nil, err.Error(), http.StatusInternalServerError)
+	}
+
+	if len(dbDefaultTeam) == 0 {
+		return "", nil
+	}
+	dbDefaultTeamid := dbDefaultTeam[0].Id
+
+	return dbDefaultTeamid, nil
+}
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
 // GetTeamsForUser returns a list of teams that the user is a member of. Expects userId to be passed as a parameter. It can also negative the teamID passed.
 func (s SqlTeamStore) GetTeamsForUser(ctx context.Context, userId, excludeTeamID string, includeDeleted bool) ([]*model.TeamMember, error) {
 	query := s.getTeamMembersWithSchemeSelectQuery().
@@ -1187,6 +1271,18 @@
 	return channels, nil
 }
 
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+func (s SqlTeamStore) DeleteDefaultTeam() {
+	query := s.getQueryBuilder().
+		Delete("DefaultTeam")
+	sql, args, _ := query.ToSql()
+	_, _ = s.GetMasterX().Exec(sql, args...)
+
+	return
+}
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
+
 func (s SqlTeamStore) RemoveMembers(teamId string, userIds []string) error {
 	builder := s.getQueryBuilder().
 		Delete("TeamMembers").
Index: store.go
===================================================================
--- store.go	(revision 4469)
+++ store.go	(revision 4470)
@@ -7,6 +7,7 @@
 
 import (
 	"context"
+	"github.com/robfig/cron"
 	"database/sql"
 	"time"
 
@@ -28,6 +29,18 @@
 	RetentionPolicy() RetentionPolicyStore
 	Thread() ThreadStore
 	User() UserStore
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 START */
+	Meeting() MeetingStore
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 END */
+	/* Ryobi Systems CloudOffice MeetingMng Mod 20210617 START */
+	MeetingMng() MeetingMngStore
+	/* Ryobi Systems CloudOffice MeetingMng Mod 20210617 END */
+	/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 START */
+	MeetingStatus() MeetingStatusStore
+	/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 END */
+	/* Ryobi Systems CloudOffice CronChat Mod 20211129 START */
+	CronChat() CronChatStore
+	/* Ryobi Systems CloudOffice CronChat Mod 20211129 END */
 	Bot() BotStore
 	Audit() AuditStore
 	ClusterDiscovery() ClusterDiscoveryStore
@@ -88,6 +101,7 @@
 	PostPriority() PostPriorityStore
 	PostAcknowledgement() PostAcknowledgementStore
 	TrueUpReview() TrueUpReviewStore
+	PollField() PollFieldsStore	
 }
 
 type RetentionPolicyStore interface {
@@ -133,6 +147,10 @@
 	PermanentDelete(teamID string) error
 	AnalyticsTeamCount(opts *model.TeamSearch) (int64, error)
 	SaveMultipleMembers(members []*model.TeamMember, maxUsersPerTeam int) ([]*model.TeamMember, error)
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+	SaveDefaultTeam(DefaultTeam *model.DefaultTeam)
+	DeleteDefaultTeam()
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
 	SaveMember(member *model.TeamMember, maxUsersPerTeam int) (*model.TeamMember, error)
 	UpdateMember(member *model.TeamMember) (*model.TeamMember, error)
 	UpdateMultipleMembers(members []*model.TeamMember) ([]*model.TeamMember, error)
@@ -142,6 +160,9 @@
 	GetTotalMemberCount(teamID string, restrictions *model.ViewUsersRestrictions) (int64, error)
 	GetActiveMemberCount(teamID string, restrictions *model.ViewUsersRestrictions) (int64, error)
 	GetTeamsForUser(ctx context.Context, userID, excludeTeamID string, includeDeleted bool) ([]*model.TeamMember, error)
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+	GetDefaultTeam() (string, *model.AppError)
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
 	GetTeamsForUserWithPagination(userID string, page, perPage int) ([]*model.TeamMember, error)
 	GetChannelUnreadsForAllTeams(excludeTeamID, userID string) ([]*model.ChannelUnread, error)
 	GetChannelUnreadsForTeam(teamID, userID string) ([]*model.ChannelUnread, error)
@@ -401,6 +422,7 @@
 	GetOldestEntityCreationTime() (int64, error)
 	HasAutoResponsePostByUserSince(options model.GetPostsSinceOptions, userId string) (bool, error)
 	GetPostsSinceForSync(options model.GetPostsSinceForSyncOptions, cursor model.GetPostsSinceForSyncCursor, limit int) ([]*model.Post, model.GetPostsSinceForSyncCursor, error)
+	UpdatePostWithCachereRefresh(post *model.Post) (*model.Post, error)
 	SetPostReminder(reminder *model.PostReminder) error
 	GetPostReminders(now int64) ([]*model.PostReminder, error)
 	GetPostReminderMetadata(postID string) (*PostReminderMetadata, error)
@@ -491,6 +513,78 @@
 	GetFirstSystemAdminID() (string, error)
 }
 
+/* Ryobi Systems CloudOffice Meeting Mod 20210325 START */
+type MeetingStore interface {
+	GetMeetingByMeetingItemId(MeetingItemId string) (*model.Meeting, *model.AppError)
+	GetMeetingsByUserId(userId string, meetingAfter string, meetingBefore string) ([]*model.Meeting, *model.AppError)
+	GetDeletedMeetingInfoByMeetingItemIds(meetingItemIds []string) ([]*model.DeleteParamsToJson, *model.AppError)
+	GetMeetingUsersByMeetingItemIds(meetingItemIds []string) ([]*model.MeetingUser, *model.AppError)
+	Save(meeting *model.Meeting, usersfromjson []*model.MeetingUserFromJson, userValid string) ([]*model.MeetingUser, string, *model.AppError)
+	Update(meeting *model.Meeting, usersfromjson []*model.MeetingUserFromJson) *model.AppError
+	UpdateValidMeetingUsers(meetingItemId string, mailAddrs []string, itemValid int) *model.AppError
+	UpdateMeetingRepeatEndDate(meeting *model.Meeting) *model.AppError
+	RemoveDelRepeatMeetingAfterNow(meetingItemId string, timeStamp int64) *model.AppError
+	SaveDelRepeatMeeting(meeting *model.Meeting, delParams *model.DeleteParamsFromJson) *model.AppError
+	PermanentDelete(meetingId string) *model.AppError
+}
+/* Ryobi Systems CloudOffice Meeting Mod 20210325 END */
+
+/* Ryobi Systems CloudOffice MeetingMng Mod 20210617 START */
+type MeetingMngStore interface {
+	GetMeetingMngList(meeting *model.MeetingMngFromJson) ([]*model.MeetingMngUserCount, *model.AppError)
+	GetMeetingMngEndByMeetingItemId(MeetingItemId string) (*model.MeetingsMeetingEnd, *model.AppError)
+	GetMeetingMngUsersByMeetingItemId(MeetingItemId string) ([]*model.MeetingMngUser, *model.AppError)
+	GetUsersByUserMails(UserList []string) ([]*model.MeetUser, *model.AppError)
+	GetMeetingMngsByMeetingItemId(meetingItemId string) (*model.MeetingMng, *model.AppError)
+	DeleteMeetingMngByMeetingItemId(meetingItemId string) (*model.AppError)
+	UpdateMeetingMngByMeetingItemId(meetingItemId string, endTime string) (*model.AppError)
+	GetMeetingMngUsersByMeetingItemIdFormail(meetingItemId string) ([]*model.MeetingMngUser, *model.AppError)
+	SaveRedisMeeting(meetingId string, meetingList []string) *model.AppError
+	SaveRedisMeetingUser(meetingId string, meetingUserList []*model.MeetingMngUserRedis) *model.AppError
+	GetMeetingEndUsers(meetingId string, meetingStartTime int64) ([]*model.MeetingMngUserToJson, *model.AppError)
+}
+/* Ryobi Systems CloudOffice MeetingMng Mod 20210617 END */
+
+/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 START */
+type MeetingStatusStore interface {
+	GetMeetingNames(meetingIdList []string) ([]*model.MeetingStatus, *model.AppError)
+	GetUsersName(userEmailList []string) ([]*model.MeetUsers, *model.AppError)
+	GetMeetingEndData(meeting *model.MeetingEndFromJson) ([]*model.MeetingsEnd, *model.AppError)
+}
+type PollFieldsStore interface {
+	GetPollFields(postId string) ([]*model.PollFields, *model.AppError)
+	PollFieldsInsert(field *model.PollFields) *model.AppError
+	DeletePollFields(userId string, postId string) *model.AppError
+}
+
+/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 END */
+
+/* Ryobi Systems CloudOffice CronChat Mod 20211129 START */
+type CronChatStore interface {
+	GetCronId() ([]*model.CronSettings, *model.AppError)
+	SaveCronChatDelete(cronId cron.EntryID, spec string) *model.AppError
+	UpdateCronChatDelete(Id int) *model.AppError
+	GetChannelSettingByChannelId(channelId string) ([]*model.ChannelChatSaveSettings, *model.AppError)
+	GetChannelSettings() ([]*model.ChannelChatSaveSettings, *model.AppError)
+	SaveChannelsSetting(channel *model.ChannelChatSaveSettingsFromJson, userId string) *model.AppError
+	UpdateChannelsSetting(channel *model.ChannelChatSaveSettingsFromJson, userId string) *model.AppError
+	GetChatMessagesByChannelId(channelId string, deleteTime int64) (*model.PostList, *model.AppError)
+	DeleteChatMessagesByChannelId(channelId string, deleteTime int64) *model.AppError
+	GetChatMessagesOther(channelIds []string, deleteTime int64) (*model.PostList, *model.AppError)
+	DeleteChatMessagesOther(channelIds []string, deleteTime int64) *model.AppError
+	GetChatMessagesDeleted() (*model.PostList, *model.AppError)
+	DeleteChatMessagesDeleted() *model.AppError
+	GetChatFilesByChannelId(channelId string, deleteTime int64) ([]*model.ChatFiles, *model.AppError)
+	DeleteChatFilesByChannelId(channelId string, deleteTime int64, fileIds []string) *model.AppError
+	GetChatFilesOther(channelIds []string, deleteTime int64) ([]*model.ChatFiles, *model.AppError)
+	DeleteChatFilesOther(channelIds []string, deleteTime int64, fileIds []string) *model.AppError
+	GetChatFilesDeleted() (*model.PostList, *model.AppError)
+	DeleteChatFilesDeleted() *model.AppError
+	GetChatFilesPath() ([]*model.ChatFilesPath, *model.AppError)
+	DeleteFileInfos() *model.AppError
+}
+/* Ryobi Systems CloudOffice CronChat Mod 20211129 END */
+
 type BotStore interface {
 	Get(userID string, includeDeleted bool) (*model.Bot, error)
 	GetAll(options *model.BotGetOptions) ([]*model.Bot, error)
@@ -502,6 +596,11 @@
 type SessionStore interface {
 	Get(ctx context.Context, sessionIDOrToken string) (*model.Session, error)
 	Save(session *model.Session) (*model.Session, error)
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+	SqlGetDefaultTeam() (string, error)
+	SqlSaveDefaultTeam(DefaultTeam *model.DefaultTeam)
+	SqlDeleteDefaultTeam() error
+	/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
 	GetSessions(userID string) ([]*model.Session, error)
 	GetSessionsWithActiveDeviceIds(userID string) ([]*model.Session, error)
 	GetSessionsExpired(thresholdMillis int64, mobileOnly bool, unnotifiedOnly bool) ([]*model.Session, error)
@@ -710,6 +809,9 @@
 	GetStorageUsage(allowFromCache, includeDeleted bool) (int64, error)
 	// GetUptoNSizeFileTime returns the CreateAt time of the last accessible file with a running-total size upto n bytes.
 	GetUptoNSizeFileTime(n int64) (int64, error)
+	/* Ryobi Systems CloudOffice Files Mod 20211103 START */
+	GetFileTotalSize() (int64, error)
+	/* Ryobi Systems CloudOffice Files Mod 20211103 END */
 }
 
 type UploadSessionStore interface {
Index: FileInfoStore.go
===================================================================
--- FileInfoStore.go	(revision 4469)
+++ FileInfoStore.go	(revision 4470)
@@ -444,3 +444,26 @@
 
 	return r0, r1
 }
+
+// Upsert provides a mock function with given fields: info
+func (_m *FileInfoStore) GetFileTotalSize() (int64, error) {
+	ret := _m.Called()
+
+	var r0 int64
+	if rf, ok := ret.Get(0).(func() int64); ok {
+		r0 = rf()
+	} else {
+		if ret.Get(0) != nil {
+			r0 = ret.Get(0).(int64)
+		}
+	}
+
+	var r1 error
+	if rf, ok := ret.Get(1).(func() error); ok {
+		r1 = rf()
+	} else {
+		r1 = ret.Error(1)
+	}
+
+	return r0, r1
+}
Index: PostStore.go
===================================================================
--- PostStore.go	(revision 4469)
+++ PostStore.go	(revision 4470)
@@ -1099,3 +1099,25 @@
 
 	return r0, r1
 }
+// Update provides a mock function with given fields: newPost, oldPost
+func (_m *PostStore) UpdatePostWithCachereRefresh(post *model.Post) (*model.Post, error) {
+	ret := _m.Called(post)
+
+	var r0 *model.Post
+	if rf, ok := ret.Get(0).(func(*model.Post) *model.Post); ok {
+		r0 = rf(post)
+	} else {
+		if ret.Get(0) != nil {
+			r0 = ret.Get(0).(*model.Post)
+		}
+	}
+
+	var r1 error
+	if rf, ok := ret.Get(1).(func(*model.Post) error); ok {
+		r1 = rf(post)
+	} else {
+		r1 = ret.Error(1)
+	}
+
+	return r0, r1
+}
Index: SessionStore.go
===================================================================
--- SessionStore.go	(revision 4469)
+++ SessionStore.go	(revision 4470)
@@ -326,3 +326,43 @@
 
 	return r0, r1
 }
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+func (_m *SessionStore) SqlDeleteDefaultTeam() error {
+
+	ret := _m.Called()
+
+	var r0 error
+	if rf, ok := ret.Get(0).(func() error); ok {
+		r0 = rf()
+	} else {
+		r0 = ret.Error(0)
+	}
+
+	return r0
+}
+
+func (_m *SessionStore) SqlGetDefaultTeam() (string, error) {
+
+	ret := _m.Called()
+
+	var r0 string
+	r0 = ret.Get(0).(string)
+
+	var r1 error
+	if rf, ok := ret.Get(0).(func() error); ok {
+		r1 = rf()
+	} else {
+		r1 = ret.Error(0)
+	}
+
+	return r0, r1
+}
+
+func (_m *SessionStore) SqlSaveDefaultTeam(DefaultTeam *model.DefaultTeam) {
+
+	_ = _m.Called(DefaultTeam)
+
+	return
+}
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
Index: Store.go
===================================================================
--- Store.go	(revision 4469)
+++ Store.go	(revision 4470)
@@ -54,6 +54,87 @@
 	return r0
 }
 
+/* Ryobi Systems CloudOffice Meeting Mod 20210325 START */
+func (_m *Store) Meeting() store.MeetingStore {
+	ret := _m.Called()
+
+	var r0 store.MeetingStore
+	if rf, ok := ret.Get(0).(func() store.MeetingStore); ok {
+		r0 = rf()
+	} else {
+		if ret.Get(0) != nil {
+			r0 = ret.Get(0).(store.MeetingStore)
+		}
+	}
+
+	return r0
+}
+/* Ryobi Systems CloudOffice Meeting Mod 20210325 END */
+
+/* Ryobi Systems CloudOffice MeetingMng Mod 20210617 START */
+func (_m *Store) MeetingMng() store.MeetingMngStore {
+	ret := _m.Called()
+
+	var r0 store.MeetingMngStore
+	if rf, ok := ret.Get(0).(func() store.MeetingMngStore); ok {
+		r0 = rf()
+	} else {
+		if ret.Get(0) != nil {
+			r0 = ret.Get(0).(store.MeetingMngStore)
+		}
+	}
+
+	return r0
+}
+func (_m *Store) PollField() store.PollFieldsStore {
+	ret := _m.Called()
+
+	var r0 store.PollFieldsStore
+	if rf, ok := ret.Get(0).(func() store.PollFieldsStore); ok {
+		r0 = rf()
+	} else {
+		if ret.Get(0) != nil {
+			r0 = ret.Get(0).(store.PollFieldsStore)
+		}
+	}
+	return r0
+}
+/* Ryobi Systems CloudOffice MeetingMng Mod 20210617 END */
+
+/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 START */
+func (_m *Store) MeetingStatus() store.MeetingStatusStore {
+	ret := _m.Called()
+
+	var r0 store.MeetingStatusStore
+	if rf, ok := ret.Get(0).(func() store.MeetingStatusStore); ok {
+		r0 = rf()
+	} else {
+		if ret.Get(0) != nil {
+			r0 = ret.Get(0).(store.MeetingStatusStore)
+		}
+	}
+
+	return r0
+}
+
+/* Ryobi Systems CloudOffice MeetingStatus Mod 20210913 END */
+/* Ryobi Systems CloudOffice CronChat Mod 20211129 START */
+func (_m *Store) CronChat() store.CronChatStore {
+	ret := _m.Called()
+
+	var r0 store.CronChatStore
+	if rf, ok := ret.Get(0).(func() store.CronChatStore); ok {
+		r0 = rf()
+	} else {
+		if ret.Get(0) != nil {
+			r0 = ret.Get(0).(store.CronChatStore)
+		}
+	}
+
+	return r0
+}
+/* Ryobi Systems CloudOffice CronChat Mod 20211129 END */
+
 // Channel provides a mock function with given fields:
 func (_m *Store) Channel() store.ChannelStore {
 	ret := _m.Called()
Index: TeamStore.go
===================================================================
--- TeamStore.go	(revision 4469)
+++ TeamStore.go	(revision 4470)
@@ -1096,3 +1096,38 @@
 
 	return r0, r1
 }
+
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 START */
+func (_m *TeamStore) DeleteDefaultTeam()  {
+
+	return
+}
+
+
+func (_m *TeamStore) GetDefaultTeam() (string, *model.AppError)  {
+
+	ret := _m.Called()
+
+	var r0 string
+	r0 = ret.Get(0).(string)
+
+	var r1 *model.AppError
+	if rf, ok := ret.Get(0).(func() *model.AppError); ok {
+		r1 = rf()
+	} else {
+		if ret.Get(0) != nil {
+			r1 = ret.Get(0).(*model.AppError)
+		}
+	}
+
+
+	return r0, r1
+}
+
+func (_m *TeamStore) SaveDefaultTeam(DefaultTeam *model.DefaultTeam) {
+
+	_ = _m.Called(DefaultTeam)
+
+	return
+}
+/* Ryobi Systems DefaultTeamaSetUp Mod 20201211 END */
Index: timerlayer.go
===================================================================
--- timerlayer.go	(revision 4469)
+++ timerlayer.go	(revision 4470)
@@ -6090,6 +6090,22 @@
 	return result, err
 }
 
+func (s *TimerLayerPostStore) UpdatePostWithCachereRefresh(post *model.Post) (*model.Post, error) {
+	start := time.Now()
+
+	result, err := s.PostStore.UpdatePostWithCachereRefresh(post)
+
+	elapsed := float64(time.Since(start)) / float64(time.Second)
+	if s.Root.Metrics != nil {
+		success := "false"
+		if err == nil {
+			success = "true"
+		}
+		s.Root.Metrics.ObserveStoreMethodDuration("PostStore.UpdatePostWithCachereRefresh", success, elapsed)
+	}
+	return result, err
+}
+
 func (s *TimerLayerPostAcknowledgementStore) GetForPost(postID string) ([]*model.PostAcknowledgement, error) {
 	start := time.Now()
 
Index: messages_notification.html
===================================================================
--- messages_notification.html	(revision 4469)
+++ messages_notification.html	(revision 4470)
@@ -536,7 +536,7 @@
                                     <tbody>
                                       <tr>
                                         <td style="width:132px;">
-                                          <img alt height="21" src="{{.Props.SiteURL}}/static/images/logo_email_dark.png" style="border:0;display:block;outline:none;text-decoration:none;height:21.76px;width:100%;font-size:13px;" width="132">
+                                          <img alt height="21" src="{{.Props.SiteURL}}/static/images/logo_email_blue.png" style="border:0;display:block;outline:none;text-decoration:none;height:21.76px;width:100%;font-size:13px;" width="132">
                                         </td>
                                       </tr>
                                     </tbody>
Index: logo.mjml
===================================================================
--- logo.mjml	(revision 4469)
+++ logo.mjml	(revision 4470)
@@ -1,5 +1,5 @@
 <mj-section padding="0px 0px 40px 0px">
   <mj-column>
-    <mj-image mj-class="logo" src="{{.Props.SiteURL}}/static/images/logo_email_dark.png" />
+    <mj-image mj-class="logo" src="{{.Props.SiteURL}}/static/images/logo_email_blue.png" />
   </mj-column>
-</mj-section>
\ No newline at end of file
+</mj-section>
Index: handlers.go
===================================================================
--- handlers.go	(revision 4469)
+++ handlers.go	(revision 4470)
@@ -229,8 +229,23 @@
 	c.SetSiteURLHeader(siteURLHeader)
 
 	w.Header().Set(model.HeaderRequestId, c.AppContext.RequestId())
-	w.Header().Set(model.HeaderVersionId, fmt.Sprintf("%v.%v.%v.%v", model.CurrentVersion, model.BuildNumber, c.App.ClientConfigHash(), c.App.Channels().License() != nil))
+	/* Ryobi Systems CloudOffice Get Service-version Mod 20211108 start */
+	version := model.CurrentVersion
+	pluginOpenStatus := c.App.Config().PluginSettings.PluginStates["extrasrvversionsettingplugin"]
+	if pluginOpenStatus != nil && pluginOpenStatus.Enable {
+		if versionPluginData, ok := c.App.Config().PluginSettings.Plugins["extrasrvversionsettingplugin"]; ok {
+			if versionFromPlugin, isOk := versionPluginData["extrasrvversion"]; isOk {
+				if v, sOk := interface{}(versionFromPlugin).(string); sOk {
+					if v != "" {
+						version = v
+					}
+				}
 
+			}
+		}
+	}
+	w.Header().Set(model.HeaderVersionId, fmt.Sprintf("%v.%v.%v.%v", version, model.BuildNumber, c.App.ClientConfigHash(), c.App.Srv().License() != nil))
+	/* Ryobi Systems CloudOffice Get Service-version Mod 20211108 end */
 	if *c.App.Config().ServiceSettings.TLSStrictTransport {
 		w.Header().Set("Strict-Transport-Security", fmt.Sprintf("max-age=%d", *c.App.Config().ServiceSettings.TLSStrictTransportMaxAge))
 	}
Index: oauth.go
===================================================================
--- oauth.go	(revision 4469)
+++ oauth.go	(revision 4470)
@@ -274,6 +274,7 @@
 	state := r.URL.Query().Get("state")
 
 	uri := c.GetSiteURLHeader() + "/signup/" + service + "/complete"
+	sessionState := r.URL.Query().Get("session_state")
 
 	body, teamId, props, tokenUser, err := c.App.AuthorizeOAuthUser(w, r, service, code, state, uri)
 
@@ -295,6 +296,15 @@
 		if isMobile && hasRedirectURL {
 			utils.RenderMobileError(c.App.Config(), w, err, redirectURL)
 		} else {
+			// 20210604 Ryobi Systems/--
+			// cookieの有効期限切れの場合はエラーにせずトップページにリダイレクトさせる
+			if strings.Index(err.DetailedError, "oauth_cookie_expired") >= 0 {
+				mlog.Info("oauth cookie expired, redirect to page top")
+				w.Header().Set("Content-Type", "text/html; charset=utf-8")
+				http.Redirect(w, r, c.GetSiteURLHeader(), http.StatusTemporaryRedirect)
+				return
+			}
+			// --/20210604 Ryobi Systems
 			utils.RenderWebAppError(c.App.Config(), w, r, err, c.App.AsymmetricSigningKey())
 		}
 	}
@@ -313,7 +323,7 @@
 		renderError(err)
 		return
 	}
-
+	user.Props["session_state"] = sessionState
 	if action == model.OAuthActionEmailToSSO {
 		redirectURL = c.GetSiteURLHeader() + "/login?extra=signin_change"
 	} else if action == model.OAuthActionSSOToEmail {
Index: params.go
===================================================================
--- params.go	(revision 4469)
+++ params.go	(revision 4470)
@@ -94,6 +94,9 @@
 
 	// Cloud
 	InvoiceId string
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 START */
+	MeetingItemId string
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 END */
 }
 
 func ParamsFromRequest(r *http.Request) *Params {
@@ -235,7 +238,11 @@
 	}
 
 	params.FilterHasMember = query.Get("filter_has_member")
-
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 START */
+	if val, ok := props["meeting_item_id"]; ok {
+		params.MeetingItemId = val
+	}
+	/* Ryobi Systems CloudOffice Meeting Mod 20210325 END */
 	return params
 }
 
Index: unsupported_browser.go
===================================================================
--- unsupported_browser.go	(revision 4469)
+++ unsupported_browser.go	(revision 4470)
@@ -49,7 +49,7 @@
 	data := templates.Data{
 		Props: map[string]any{
 			"DownloadAppOrUpgradeBrowserString": ctx.T("web.error.unsupported_browser.download_app_or_upgrade_browser"),
-			"LearnMoreString":                   ctx.T("web.error.unsupported_browser.learn_more"),
+			//"LearnMoreString":                   ctx.T("web.error.unsupported_browser.learn_more"),
 		},
 	}
 
@@ -69,15 +69,16 @@
 
 	// Mattermost app version
 	if isWindows {
-		data.Props["App"] = renderMattermostAppWindows(ctx)
+		//	data.Props["App"] = renderMattermostAppWindows(ctx)
 	} else if isMacOSX {
-		data.Props["App"] = renderMattermostAppMac(ctx)
+		//	data.Props["App"] = renderMattermostAppMac(ctx)
 	}
 
 	// Browsers to download
 	// Show a link to Safari if you're using safari and it's outdated
 	// Can't show on Mac all the time because there's no way to open it via URI
-	browsers := []Browser{renderBrowserChrome(ctx), renderBrowserFirefox(ctx)}
+	//browsers := []Browser{renderBrowserChrome(ctx), renderBrowserFirefox(ctx)}
+	browsers := []Browser{renderBrowserChrome(ctx)}
 	if isSafari {
 		browsers = append(browsers, renderBrowserSafari(ctx))
 	}
